Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - ...
At line 2 NAME          MODEL
At line 3 ROWS
At line 2994 COLUMNS
At line 10043 RHS
At line 13033 BOUNDS
At line 13963 ENDATA
Problem MODEL has 2989 rows, 929 columns and 5191 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Problem is infeasible - 0.00 seconds
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - ...
At line 2 NAME          MODEL
At line 3 ROWS
At line 4359 COLUMNS
At line 15438 RHS
At line 19793 BOUNDS
At line 21273 ENDATA
Problem MODEL has 4354 rows, 1479 columns and 8062 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0002I 493 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 901 rows, 522 columns (522 integer (522 of which binary)) and 2092 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 29 integer variables out of 522 objects (522 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 7 integers unsatisfied sum - 3.5
Cbc0038I Pass   1: suminf.    3.50000 (7) obj. 0 iterations 81
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 1 iterations 36
Cbc0038I Solution found of 1
Cbc0038I Before mini branch and bound, 513 integers at bound fixed and 0 continuous
Cbc0038I Full problem 901 rows 522 columns, reduced to 10 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of 9e-05
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.50000 (7) obj. 0 iterations 0
Cbc0038I Pass   4: suminf.    3.50000 (7) obj. 0 iterations 34
Cbc0038I Pass   5: suminf.    3.75000 (12) obj. 0 iterations 119
Cbc0038I Pass   6: suminf.    3.75000 (12) obj. 0 iterations 91
Cbc0038I Pass   7: suminf.    3.50000 (7) obj. 0 iterations 14
Cbc0038I Pass   8: suminf.    3.50000 (7) obj. 0 iterations 131
Cbc0038I Pass   9: suminf.    3.50000 (7) obj. 0 iterations 168
Cbc0038I Pass  10: suminf.    4.00000 (8) obj. 0 iterations 158
Cbc0038I Pass  11: suminf.    4.50000 (9) obj. 0 iterations 158
Cbc0038I Pass  12: suminf.    4.00000 (13) obj. 0 iterations 153
Cbc0038I Pass  13: suminf.    4.00000 (13) obj. 0 iterations 77
Cbc0038I Pass  14: suminf.    5.00000 (20) obj. 0 iterations 85
Cbc0038I Pass  15: suminf.    4.50000 (20) obj. 0 iterations 63
Cbc0038I Pass  16: suminf.    4.50000 (20) obj. 0 iterations 6
Cbc0038I Pass  17: suminf.    4.50000 (20) obj. 0 iterations 8
Cbc0038I Pass  18: suminf.    4.50000 (20) obj. 0 iterations 15
Cbc0038I Pass  19: suminf.    5.16667 (24) obj. 0 iterations 93
Cbc0038I Pass  20: suminf.    5.16667 (24) obj. 0 iterations 69
Cbc0038I Pass  21: suminf.    3.50000 (7) obj. 0 iterations 35
Cbc0038I Pass  22: suminf.    3.50000 (7) obj. 0 iterations 1
Cbc0038I Pass  23: suminf.    3.50000 (7) obj. 0 iterations 3
Cbc0038I Pass  24: suminf.    3.50000 (7) obj. 0 iterations 91
Cbc0038I Pass  25: suminf.    3.50000 (7) obj. 0 iterations 129
Cbc0038I Pass  26: suminf.    3.50000 (7) obj. 0 iterations 132
Cbc0038I Pass  27: suminf.    5.33333 (22) obj. 0 iterations 143
Cbc0038I Pass  28: suminf.    4.33333 (19) obj. 0 iterations 75
Cbc0038I Pass  29: suminf.    4.33333 (19) obj. 0 iterations 13
Cbc0038I Pass  30: suminf.    4.33333 (19) obj. 0 iterations 9
Cbc0038I Pass  31: suminf.    3.50000 (7) obj. 0 iterations 21
Cbc0038I Pass  32: suminf.    3.50000 (7) obj. 0 iterations 0
Cbc0038I Pass  33: suminf.    3.50000 (7) obj. 0 iterations 8
Cbc0038I Pass  34: suminf.    3.50000 (7) obj. 0 iterations 97
Cbc0038I Pass  35: suminf.    3.50000 (7) obj. 0 iterations 125
Cbc0038I Pass  36: suminf.    9.25000 (29) obj. 0 iterations 159
Cbc0038I Pass  37: suminf.    5.50000 (30) obj. 0 iterations 78
Cbc0038I Pass  38: suminf.    5.33333 (25) obj. 0 iterations 1
Cbc0038I Pass  39: suminf.    3.50000 (7) obj. 0 iterations 32
Cbc0038I Pass  40: suminf.    3.50000 (7) obj. 0 iterations 5
Cbc0038I Pass  41: suminf.    3.50000 (7) obj. 0 iterations 3
Cbc0038I Pass  42: suminf.    3.50000 (7) obj. 0 iterations 74
Cbc0038I Pass  43: suminf.    4.25000 (12) obj. 0 iterations 104
Cbc0038I Pass  44: suminf.    4.25000 (12) obj. 0 iterations 65
Cbc0038I Pass  45: suminf.    5.00000 (10) obj. 0 iterations 3
Cbc0038I Pass  46: suminf.    3.50000 (7) obj. 0 iterations 83
Cbc0038I Pass  47: suminf.    3.50000 (7) obj. 0 iterations 98
Cbc0038I Pass  48: suminf.    3.50000 (7) obj. 0 iterations 110
Cbc0038I Pass  49: suminf.    3.50000 (7) obj. 0 iterations 108
Cbc0038I Pass  50: suminf.    4.00000 (8) obj. 0 iterations 98
Cbc0038I Pass  51: suminf.    4.00000 (13) obj. 0 iterations 105
Cbc0038I Pass  52: suminf.    4.00000 (13) obj. 0 iterations 60
Cbc0038I Pass  53: suminf.    3.50000 (7) obj. 0 iterations 11
Cbc0038I Pass  54: suminf.    3.50000 (7) obj. 0 iterations 1
Cbc0038I Pass  55: suminf.    3.50000 (7) obj. 0 iterations 3
Cbc0038I Pass  56: suminf.    4.00000 (8) obj. 0 iterations 85
Cbc0038I Pass  57: suminf.    4.50000 (18) obj. 0 iterations 122
Cbc0038I Pass  58: suminf.    4.16667 (18) obj. 0 iterations 78
Cbc0038I Pass  59: suminf.    3.50000 (7) obj. 0 iterations 12
Cbc0038I Pass  60: suminf.    3.50000 (7) obj. 0 iterations 67
Cbc0038I Pass  61: suminf.    3.50000 (7) obj. 0 iterations 101
Cbc0038I Pass  62: suminf.    6.00000 (12) obj. 0 iterations 102
Cbc0038I Pass  63: suminf.    4.75000 (13) obj. 0 iterations 93
Cbc0038I Pass  64: suminf.    4.25000 (12) obj. 0 iterations 52
Cbc0038I Pass  65: suminf.    5.00000 (10) obj. 0 iterations 7
Cbc0038I Pass  66: suminf.    3.50000 (7) obj. 0 iterations 4
Cbc0038I Pass  67: suminf.    3.50000 (7) obj. 0 iterations 6
Cbc0038I Pass  68: suminf.    7.00000 (21) obj. 0 iterations 78
Cbc0038I Pass  69: suminf.    5.33333 (25) obj. 0 iterations 79
Cbc0038I Pass  70: suminf.    7.00000 (14) obj. 0 iterations 35
Cbc0038I Pass  71: suminf.    4.25000 (14) obj. 0 iterations 79
Cbc0038I Pass  72: suminf.    4.25000 (14) obj. 0 iterations 69
Cbc0038I Pass  73: suminf.    6.00000 (12) obj. 0 iterations 11
Cbc0038I Pass  74: suminf.    3.50000 (7) obj. 0 iterations 6
Cbc0038I Pass  75: suminf.    3.50000 (7) obj. 0 iterations 7
Cbc0038I Pass  76: suminf.    4.25000 (12) obj. 0 iterations 81
Cbc0038I Pass  77: suminf.    4.25000 (12) obj. 0 iterations 81
Cbc0038I Pass  78: suminf.    5.00000 (10) obj. 0 iterations 9
Cbc0038I Pass  79: suminf.    4.50000 (15) obj. 0 iterations 73
Cbc0038I Pass  80: suminf.    4.50000 (15) obj. 0 iterations 56
Cbc0038I Pass  81: suminf.    3.50000 (7) obj. 0 iterations 24
Cbc0038I Pass  82: suminf.    3.50000 (7) obj. 0 iterations 4
Cbc0038I Pass  83: suminf.    3.50000 (7) obj. 0 iterations 1
Cbc0038I Pass  84: suminf.    3.50000 (7) obj. 0 iterations 61
Cbc0038I Pass  85: suminf.    3.50000 (7) obj. 0 iterations 107
Cbc0038I Pass  86: suminf.    3.50000 (7) obj. 0 iterations 116
Cbc0038I Pass  87: suminf.    3.50000 (7) obj. 0 iterations 104
Cbc0038I Pass  88: suminf.    3.50000 (7) obj. 0 iterations 108
Cbc0038I Pass  89: suminf.    4.00000 (8) obj. 0 iterations 128
Cbc0038I Pass  90: suminf.    4.50000 (18) obj. 0 iterations 117
Cbc0038I Pass  91: suminf.    4.16667 (18) obj. 0 iterations 71
Cbc0038I Pass  92: suminf.    4.16667 (18) obj. 0 iterations 11
Cbc0038I Pass  93: suminf.    4.16667 (18) obj. 0 iterations 6
Cbc0038I Pass  94: suminf.    3.50000 (7) obj. 0 iterations 15
Cbc0038I Pass  95: suminf.    3.50000 (7) obj. 0 iterations 0
Cbc0038I Pass  96: suminf.    3.50000 (7) obj. 0 iterations 3
Cbc0038I Pass  97: suminf.    3.50000 (7) obj. 0 iterations 109
Cbc0038I Pass  98: suminf.    3.50000 (7) obj. 0 iterations 129
Cbc0038I Pass  99: suminf.    3.75000 (12) obj. 0 iterations 120
Cbc0038I Pass 100: suminf.    3.75000 (12) obj. 0 iterations 81
Cbc0038I Pass 101: suminf.    3.50000 (7) obj. 0 iterations 14
Cbc0038I Pass 102: suminf.    3.50000 (7) obj. 0 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 476 integers at bound fixed and 0 continuous
Cbc0038I Full problem 901 rows 522 columns, reduced to 67 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of 1 - took 0.13 seconds
Cbc0012I Integer solution of 1 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 901 rows 522 columns, reduced to 8 rows 5 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 0 to 0 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 29 column cuts (29 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1, took 36 iterations and 0 nodes (0.24 seconds)
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 1 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1.00000000
Enumerated nodes:               0
Total iterations:               36
Time (CPU seconds):             0.24
Time (Wallclock seconds):       0.24

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.25

python path: ...
[0 - 7f3ef4a29000]    0.256315 {3}{Mapper}: Enabled Control Replication Optimizations.
[0 - 7f3ef4a29000]    0.256354 {3}{Mapper}: Enabled Control Replication Optimizations.
Computed and cached schedule .schedule in 8.254 seconds.
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 22, Start fusing gates...
Reset qubit group map
(23, 24) (24, 25) (25, 26) (26, 27) (27, 28) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,22,]
Fusing Kernel (14 gates): qubits [24, 25, 26, 27, 28], gates fusion, qubits [24, 25, 26, 27, 28], gates CircuitSeq {
  Q28 = h(Q28)
  [Q28, Q27] = cp(Q28, Q27, P0)
  [Q28, Q26] = cp(Q28, Q26, P1)
  Q27 = h(Q27)
  [Q27, Q26] = cp(Q27, Q26, P0)
  [Q28, Q25] = cp(Q28, Q25, P2)
  [Q27, Q25] = cp(Q27, Q25, P1)
  Q26 = h(Q26)
  [Q26, Q25] = cp(Q26, Q25, P0)
  [Q28, Q24] = cp(Q28, Q24, P3)
  [Q27, Q24] = cp(Q27, Q24, P2)
  [Q26, Q24] = cp(Q26, Q24, P1)
  Q25 = h(Q25)
  [Q25, Q24] = cp(Q25, Q24, P0)
}

Gate 0: [28, ]
Fusing gate 0(0) for rank 0
t 28
Matrix Multiplication (5, 1), mask 16
Fusing gate 0(0) for rank 1
t 28
Matrix Multiplication (5, 1), mask 16
Gate 1: [28, 27, ]
Fusing gate 26(1) for rank 0
c,t 28,27
Matrix Multiplication (5, 2), mask 24
Fusing gate 26(1) for rank 1
c,t 28,27
Matrix Multiplication (5, 2), mask 24
Gate 2: [28, 26, ]
Fusing gate 26(1) for rank 0
c,t 28,26
Matrix Multiplication (5, 2), mask 20
Fusing gate 26(1) for rank 1
c,t 28,26
Matrix Multiplication (5, 2), mask 20
Gate 3: [27, ]
Fusing gate 0(0) for rank 0
t 27
Matrix Multiplication (5, 1), mask 8
Fusing gate 0(0) for rank 1
t 27
Matrix Multiplication (5, 1), mask 8
Gate 4: [27, 26, ]
Fusing gate 26(1) for rank 0
c,t 27,26
Matrix Multiplication (5, 2), mask 12
Fusing gate 26(1) for rank 1
c,t 27,26
Matrix Multiplication (5, 2), mask 12
Gate 5: [28, 25, ]
Fusing gate 26(1) for rank 0
c,t 28,25
Matrix Multiplication (5, 2), mask 18
Fusing gate 26(1) for rank 1
c,t 28,25
Matrix Multiplication (5, 2), mask 18
Gate 6: [27, 25, ]
Fusing gate 26(1) for rank 0
c,t 27,25
Matrix Multiplication (5, 2), mask 10
Fusing gate 26(1) for rank 1
c,t 27,25
Matrix Multiplication (5, 2), mask 10
Gate 7: [26, ]
Fusing gate 0(0) for rank 0
t 26
Matrix Multiplication (5, 1), mask 4
Fusing gate 0(0) for rank 1
t 26
Matrix Multiplication (5, 1), mask 4
Gate 8: [26, 25, ]
Fusing gate 26(1) for rank 0
c,t 26,25
Matrix Multiplication (5, 2), mask 6
Fusing gate 26(1) for rank 1
c,t 26,25
Matrix Multiplication (5, 2), mask 6
Gate 9: [28, 24, ]
Fusing gate 26(1) for rank 0
c,t 28,24
Matrix Multiplication (5, 2), mask 17
Fusing gate 26(1) for rank 1
c,t 28,24
Matrix Multiplication (5, 2), mask 17
Gate 10: [27, 24, ]
Fusing gate 26(1) for rank 0
c,t 27,24
Matrix Multiplication (5, 2), mask 9
Fusing gate 26(1) for rank 1
c,t 27,24
Matrix Multiplication (5, 2), mask 9
Gate 11: [26, 24, ]
Fusing gate 26(1) for rank 0
c,t 26,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 26(1) for rank 1
c,t 26,24
Matrix Multiplication (5, 2), mask 5
Gate 12: [25, ]
Fusing gate 0(0) for rank 0
t 25
Matrix Multiplication (5, 1), mask 2
Fusing gate 0(0) for rank 1
t 25
Matrix Multiplication (5, 1), mask 2
Gate 13: [25, 24, ]
Fusing gate 26(1) for rank 0
c,t 25,24
Matrix Multiplication (5, 2), mask 3
Fusing gate 26(1) for rank 1
c,t 25,24
Matrix Multiplication (5, 2), mask 3
SHM Kernel Physical (145): [ 22,23]
shared_memory, qubits [23, 24], gates CircuitSeq {
  [Q28, Q23] = cp(Q28, Q23, P4)
  [Q27, Q23] = cp(Q27, Q23, P3)
  [Q26, Q23] = cp(Q26, Q23, P2)
  [Q25, Q23] = cp(Q25, Q23, P1)
  Q24 = h(Q24)
  [Q24, Q23] = cp(Q24, Q23, P0)
  [Q28, Q22] = cp(Q28, Q22, P5)
  [Q28, Q21] = cp(Q28, Q21, P6)
  [Q27, Q22] = cp(Q27, Q22, P4)
  [Q27, Q21] = cp(Q27, Q21, P5)
  [Q26, Q22] = cp(Q26, Q22, P3)
  [Q26, Q21] = cp(Q26, Q21, P4)
  [Q25, Q22] = cp(Q25, Q22, P2)
  [Q25, Q21] = cp(Q25, Q21, P3)
  [Q24, Q22] = cp(Q24, Q22, P1)
  [Q24, Q21] = cp(Q24, Q21, P2)
  Q23 = h(Q23)
  [Q23, Q22] = cp(Q23, Q22, P0)
  [Q23, Q21] = cp(Q23, Q21, P1)
  [Q28, Q20] = cp(Q28, Q20, P7)
  [Q27, Q20] = cp(Q27, Q20, P6)
  [Q26, Q20] = cp(Q26, Q20, P5)
  [Q25, Q20] = cp(Q25, Q20, P4)
  [Q24, Q20] = cp(Q24, Q20, P3)
  [Q23, Q20] = cp(Q23, Q20, P2)
  [Q28, Q19] = cp(Q28, Q19, P8)
  [Q27, Q19] = cp(Q27, Q19, P7)
  [Q26, Q19] = cp(Q26, Q19, P6)
  [Q25, Q19] = cp(Q25, Q19, P5)
  [Q24, Q19] = cp(Q24, Q19, P4)
  [Q23, Q19] = cp(Q23, Q19, P3)
  [Q28, Q18] = cp(Q28, Q18, P9)
  [Q27, Q18] = cp(Q27, Q18, P8)
  [Q26, Q18] = cp(Q26, Q18, P7)
  [Q25, Q18] = cp(Q25, Q18, P6)
  [Q24, Q18] = cp(Q24, Q18, P5)
  [Q23, Q18] = cp(Q23, Q18, P4)
  [Q28, Q17] = cp(Q28, Q17, P10)
  [Q27, Q17] = cp(Q27, Q17, P9)
  [Q26, Q17] = cp(Q26, Q17, P8)
  [Q25, Q17] = cp(Q25, Q17, P7)
  [Q24, Q17] = cp(Q24, Q17, P6)
  [Q23, Q17] = cp(Q23, Q17, P5)
  [Q28, Q16] = cp(Q28, Q16, P11)
  [Q27, Q16] = cp(Q27, Q16, P10)
  [Q26, Q16] = cp(Q26, Q16, P9)
  [Q25, Q16] = cp(Q25, Q16, P8)
  [Q24, Q16] = cp(Q24, Q16, P7)
  [Q23, Q16] = cp(Q23, Q16, P6)
  [Q28, Q15] = cp(Q28, Q15, P12)
  [Q27, Q15] = cp(Q27, Q15, P11)
  [Q26, Q15] = cp(Q26, Q15, P10)
  [Q25, Q15] = cp(Q25, Q15, P9)
  [Q24, Q15] = cp(Q24, Q15, P8)
  [Q23, Q15] = cp(Q23, Q15, P7)
  [Q28, Q14] = cp(Q28, Q14, P13)
  [Q27, Q14] = cp(Q27, Q14, P12)
  [Q26, Q14] = cp(Q26, Q14, P11)
  [Q25, Q14] = cp(Q25, Q14, P10)
  [Q24, Q14] = cp(Q24, Q14, P9)
  [Q23, Q14] = cp(Q23, Q14, P8)
  [Q28, Q13] = cp(Q28, Q13, P14)
  [Q27, Q13] = cp(Q27, Q13, P13)
  [Q26, Q13] = cp(Q26, Q13, P12)
  [Q25, Q13] = cp(Q25, Q13, P11)
  [Q24, Q13] = cp(Q24, Q13, P10)
  [Q23, Q13] = cp(Q23, Q13, P9)
  [Q28, Q12] = cp(Q28, Q12, P15)
  [Q27, Q12] = cp(Q27, Q12, P14)
  [Q26, Q12] = cp(Q26, Q12, P13)
  [Q25, Q12] = cp(Q25, Q12, P12)
  [Q24, Q12] = cp(Q24, Q12, P11)
  [Q23, Q12] = cp(Q23, Q12, P10)
  [Q28, Q11] = cp(Q28, Q11, P16)
  [Q27, Q11] = cp(Q27, Q11, P15)
  [Q26, Q11] = cp(Q26, Q11, P14)
  [Q25, Q11] = cp(Q25, Q11, P13)
  [Q24, Q11] = cp(Q24, Q11, P12)
  [Q23, Q11] = cp(Q23, Q11, P11)
  [Q28, Q10] = cp(Q28, Q10, P17)
  [Q27, Q10] = cp(Q27, Q10, P16)
  [Q26, Q10] = cp(Q26, Q10, P15)
  [Q25, Q10] = cp(Q25, Q10, P14)
  [Q24, Q10] = cp(Q24, Q10, P13)
  [Q23, Q10] = cp(Q23, Q10, P12)
  [Q28, Q9] = cp(Q28, Q9, P18)
  [Q27, Q9] = cp(Q27, Q9, P17)
  [Q26, Q9] = cp(Q26, Q9, P16)
  [Q25, Q9] = cp(Q25, Q9, P15)
  [Q24, Q9] = cp(Q24, Q9, P14)
  [Q23, Q9] = cp(Q23, Q9, P13)
  [Q28, Q8] = cp(Q28, Q8, P19)
  [Q27, Q8] = cp(Q27, Q8, P18)
  [Q26, Q8] = cp(Q26, Q8, P17)
  [Q25, Q8] = cp(Q25, Q8, P16)
  [Q24, Q8] = cp(Q24, Q8, P15)
  [Q23, Q8] = cp(Q23, Q8, P14)
  [Q28, Q7] = cp(Q28, Q7, P20)
  [Q27, Q7] = cp(Q27, Q7, P19)
  [Q26, Q7] = cp(Q26, Q7, P18)
  [Q25, Q7] = cp(Q25, Q7, P17)
  [Q24, Q7] = cp(Q24, Q7, P16)
  [Q23, Q7] = cp(Q23, Q7, P15)
  [Q28, Q6] = cp(Q28, Q6, P21)
  [Q27, Q6] = cp(Q27, Q6, P20)
  [Q26, Q6] = cp(Q26, Q6, P19)
  [Q25, Q6] = cp(Q25, Q6, P18)
  [Q24, Q6] = cp(Q24, Q6, P17)
  [Q23, Q6] = cp(Q23, Q6, P16)
  [Q28, Q5] = cp(Q28, Q5, P22)
  [Q27, Q5] = cp(Q27, Q5, P21)
  [Q26, Q5] = cp(Q26, Q5, P20)
  [Q25, Q5] = cp(Q25, Q5, P19)
  [Q24, Q5] = cp(Q24, Q5, P18)
  [Q23, Q5] = cp(Q23, Q5, P17)
  [Q28, Q4] = cp(Q28, Q4, P23)
  [Q27, Q4] = cp(Q27, Q4, P22)
  [Q26, Q4] = cp(Q26, Q4, P21)
  [Q25, Q4] = cp(Q25, Q4, P20)
  [Q24, Q4] = cp(Q24, Q4, P19)
  [Q23, Q4] = cp(Q23, Q4, P18)
  [Q28, Q3] = cp(Q28, Q3, P24)
  [Q27, Q3] = cp(Q27, Q3, P23)
  [Q26, Q3] = cp(Q26, Q3, P22)
  [Q25, Q3] = cp(Q25, Q3, P21)
  [Q24, Q3] = cp(Q24, Q3, P20)
  [Q23, Q3] = cp(Q23, Q3, P19)
  [Q28, Q2] = cp(Q28, Q2, P25)
  [Q27, Q2] = cp(Q27, Q2, P24)
  [Q26, Q2] = cp(Q26, Q2, P23)
  [Q25, Q2] = cp(Q25, Q2, P22)
  [Q24, Q2] = cp(Q24, Q2, P21)
  [Q23, Q2] = cp(Q23, Q2, P20)
  [Q28, Q1] = cp(Q28, Q1, P26)
  [Q27, Q1] = cp(Q27, Q1, P25)
  [Q26, Q1] = cp(Q26, Q1, P24)
  [Q25, Q1] = cp(Q25, Q1, P23)
  [Q24, Q1] = cp(Q24, Q1, P22)
  [Q23, Q1] = cp(Q23, Q1, P21)
  [Q28, Q0] = cp(Q28, Q0, P27)
  [Q27, Q0] = cp(Q27, Q0, P26)
  [Q26, Q0] = cp(Q26, Q0, P25)
  [Q25, Q0] = cp(Q25, Q0, P24)
  [Q24, Q0] = cp(Q24, Q0, P23)
  [Q23, Q0] = cp(Q23, Q0, P22)
}

Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 22, 28, Start fusing gates...
Reset qubit group map
(18, 18) (19, 19) (20, 20) (21, 21) (27, 22) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,22,28,]
Fusing Kernel (14 gates): qubits [18, 19, 20, 21, 22], gates fusion, qubits [18, 19, 20, 21, 22], gates CircuitSeq {
  Q22 = h(Q22)
  [Q22, Q21] = cp(Q22, Q21, P0)
  [Q22, Q20] = cp(Q22, Q20, P1)
  Q21 = h(Q21)
  [Q21, Q20] = cp(Q21, Q20, P0)
  [Q22, Q19] = cp(Q22, Q19, P2)
  [Q21, Q19] = cp(Q21, Q19, P1)
  Q20 = h(Q20)
  [Q20, Q19] = cp(Q20, Q19, P0)
  [Q22, Q18] = cp(Q22, Q18, P3)
  [Q21, Q18] = cp(Q21, Q18, P2)
  [Q20, Q18] = cp(Q20, Q18, P1)
  Q19 = h(Q19)
  [Q19, Q18] = cp(Q19, Q18, P0)
}

Gate 0: [22, ]
Fusing gate 0(0) for rank 0
t 22
Matrix Multiplication (5, 1), mask 16
Fusing gate 0(0) for rank 1
t 22
Matrix Multiplication (5, 1), mask 16
Gate 1: [22, 21, ]
Fusing gate 26(1) for rank 0
c,t 22,21
Matrix Multiplication (5, 2), mask 24
Fusing gate 26(1) for rank 1
c,t 22,21
Matrix Multiplication (5, 2), mask 24
Gate 2: [22, 20, ]
Fusing gate 26(1) for rank 0
c,t 22,20
Matrix Multiplication (5, 2), mask 20
Fusing gate 26(1) for rank 1
c,t 22,20
Matrix Multiplication (5, 2), mask 20
Gate 3: [21, ]
Fusing gate 0(0) for rank 0
t 21
Matrix Multiplication (5, 1), mask 8
Fusing gate 0(0) for rank 1
t 21
Matrix Multiplication (5, 1), mask 8
Gate 4: [21, 20, ]
Fusing gate 26(1) for rank 0
c,t 21,20
Matrix Multiplication (5, 2), mask 12
Fusing gate 26(1) for rank 1
c,t 21,20
Matrix Multiplication (5, 2), mask 12
Gate 5: [22, 19, ]
Fusing gate 26(1) for rank 0
c,t 22,19
Matrix Multiplication (5, 2), mask 18
Fusing gate 26(1) for rank 1
c,t 22,19
Matrix Multiplication (5, 2), mask 18
Gate 6: [21, 19, ]
Fusing gate 26(1) for rank 0
c,t 21,19
Matrix Multiplication (5, 2), mask 10
Fusing gate 26(1) for rank 1
c,t 21,19
Matrix Multiplication (5, 2), mask 10
Gate 7: [20, ]
Fusing gate 0(0) for rank 0
t 20
Matrix Multiplication (5, 1), mask 4
Fusing gate 0(0) for rank 1
t 20
Matrix Multiplication (5, 1), mask 4
Gate 8: [20, 19, ]
Fusing gate 26(1) for rank 0
c,t 20,19
Matrix Multiplication (5, 2), mask 6
Fusing gate 26(1) for rank 1
c,t 20,19
Matrix Multiplication (5, 2), mask 6
Gate 9: [22, 18, ]
Fusing gate 26(1) for rank 0
c,t 22,18
Matrix Multiplication (5, 2), mask 17
Fusing gate 26(1) for rank 1
c,t 22,18
Matrix Multiplication (5, 2), mask 17
Gate 10: [21, 18, ]
Fusing gate 26(1) for rank 0
c,t 21,18
Matrix Multiplication (5, 2), mask 9
Fusing gate 26(1) for rank 1
c,t 21,18
Matrix Multiplication (5, 2), mask 9
Gate 11: [20, 18, ]
Fusing gate 26(1) for rank 0
c,t 20,18
Matrix Multiplication (5, 2), mask 5
Fusing gate 26(1) for rank 1
c,t 20,18
Matrix Multiplication (5, 2), mask 5
Gate 12: [19, ]
Fusing gate 0(0) for rank 0
t 19
Matrix Multiplication (5, 1), mask 2
Fusing gate 0(0) for rank 1
t 19
Matrix Multiplication (5, 1), mask 2
Gate 13: [19, 18, ]
Fusing gate 26(1) for rank 0
c,t 19,18
Matrix Multiplication (5, 2), mask 3
Fusing gate 26(1) for rank 1
c,t 19,18
Matrix Multiplication (5, 2), mask 3
SHM Kernel Physical (126): [ 16,17,18]
shared_memory, qubits [16, 17, 18], gates CircuitSeq {
  [Q22, Q17] = cp(Q22, Q17, P4)
  [Q21, Q17] = cp(Q21, Q17, P3)
  [Q20, Q17] = cp(Q20, Q17, P2)
  [Q19, Q17] = cp(Q19, Q17, P1)
  Q18 = h(Q18)
  [Q18, Q17] = cp(Q18, Q17, P0)
  [Q22, Q16] = cp(Q22, Q16, P5)
  [Q21, Q16] = cp(Q21, Q16, P4)
  [Q20, Q16] = cp(Q20, Q16, P3)
  [Q19, Q16] = cp(Q19, Q16, P2)
  [Q18, Q16] = cp(Q18, Q16, P1)
  Q17 = h(Q17)
  [Q17, Q16] = cp(Q17, Q16, P0)
  [Q22, Q15] = cp(Q22, Q15, P6)
  [Q21, Q15] = cp(Q21, Q15, P5)
  [Q20, Q15] = cp(Q20, Q15, P4)
  [Q19, Q15] = cp(Q19, Q15, P3)
  [Q18, Q15] = cp(Q18, Q15, P2)
  [Q17, Q15] = cp(Q17, Q15, P1)
  Q16 = h(Q16)
  [Q16, Q15] = cp(Q16, Q15, P0)
  [Q22, Q14] = cp(Q22, Q14, P7)
  [Q21, Q14] = cp(Q21, Q14, P6)
  [Q20, Q14] = cp(Q20, Q14, P5)
  [Q19, Q14] = cp(Q19, Q14, P4)
  [Q18, Q14] = cp(Q18, Q14, P3)
  [Q17, Q14] = cp(Q17, Q14, P2)
  [Q16, Q14] = cp(Q16, Q14, P1)
  [Q22, Q13] = cp(Q22, Q13, P8)
  [Q21, Q13] = cp(Q21, Q13, P7)
  [Q20, Q13] = cp(Q20, Q13, P6)
  [Q19, Q13] = cp(Q19, Q13, P5)
  [Q18, Q13] = cp(Q18, Q13, P4)
  [Q17, Q13] = cp(Q17, Q13, P3)
  [Q16, Q13] = cp(Q16, Q13, P2)
  [Q22, Q12] = cp(Q22, Q12, P9)
  [Q21, Q12] = cp(Q21, Q12, P8)
  [Q20, Q12] = cp(Q20, Q12, P7)
  [Q19, Q12] = cp(Q19, Q12, P6)
  [Q18, Q12] = cp(Q18, Q12, P5)
  [Q17, Q12] = cp(Q17, Q12, P4)
  [Q16, Q12] = cp(Q16, Q12, P3)
  [Q22, Q11] = cp(Q22, Q11, P10)
  [Q21, Q11] = cp(Q21, Q11, P9)
  [Q20, Q11] = cp(Q20, Q11, P8)
  [Q19, Q11] = cp(Q19, Q11, P7)
  [Q18, Q11] = cp(Q18, Q11, P6)
  [Q17, Q11] = cp(Q17, Q11, P5)
  [Q16, Q11] = cp(Q16, Q11, P4)
  [Q22, Q10] = cp(Q22, Q10, P11)
  [Q21, Q10] = cp(Q21, Q10, P10)
  [Q20, Q10] = cp(Q20, Q10, P9)
  [Q19, Q10] = cp(Q19, Q10, P8)
  [Q18, Q10] = cp(Q18, Q10, P7)
  [Q17, Q10] = cp(Q17, Q10, P6)
  [Q16, Q10] = cp(Q16, Q10, P5)
  [Q22, Q9] = cp(Q22, Q9, P12)
  [Q21, Q9] = cp(Q21, Q9, P11)
  [Q20, Q9] = cp(Q20, Q9, P10)
  [Q19, Q9] = cp(Q19, Q9, P9)
  [Q18, Q9] = cp(Q18, Q9, P8)
  [Q17, Q9] = cp(Q17, Q9, P7)
  [Q16, Q9] = cp(Q16, Q9, P6)
  [Q22, Q8] = cp(Q22, Q8, P13)
  [Q21, Q8] = cp(Q21, Q8, P12)
  [Q20, Q8] = cp(Q20, Q8, P11)
  [Q19, Q8] = cp(Q19, Q8, P10)
  [Q18, Q8] = cp(Q18, Q8, P9)
  [Q17, Q8] = cp(Q17, Q8, P8)
  [Q16, Q8] = cp(Q16, Q8, P7)
  [Q22, Q7] = cp(Q22, Q7, P14)
  [Q21, Q7] = cp(Q21, Q7, P13)
  [Q20, Q7] = cp(Q20, Q7, P12)
  [Q19, Q7] = cp(Q19, Q7, P11)
  [Q18, Q7] = cp(Q18, Q7, P10)
  [Q17, Q7] = cp(Q17, Q7, P9)
  [Q16, Q7] = cp(Q16, Q7, P8)
  [Q22, Q6] = cp(Q22, Q6, P15)
  [Q21, Q6] = cp(Q21, Q6, P14)
  [Q20, Q6] = cp(Q20, Q6, P13)
  [Q19, Q6] = cp(Q19, Q6, P12)
  [Q18, Q6] = cp(Q18, Q6, P11)
  [Q17, Q6] = cp(Q17, Q6, P10)
  [Q16, Q6] = cp(Q16, Q6, P9)
  [Q22, Q5] = cp(Q22, Q5, P16)
  [Q21, Q5] = cp(Q21, Q5, P15)
  [Q20, Q5] = cp(Q20, Q5, P14)
  [Q19, Q5] = cp(Q19, Q5, P13)
  [Q18, Q5] = cp(Q18, Q5, P12)
  [Q17, Q5] = cp(Q17, Q5, P11)
  [Q16, Q5] = cp(Q16, Q5, P10)
  [Q22, Q4] = cp(Q22, Q4, P17)
  [Q21, Q4] = cp(Q21, Q4, P16)
  [Q20, Q4] = cp(Q20, Q4, P15)
  [Q19, Q4] = cp(Q19, Q4, P14)
  [Q18, Q4] = cp(Q18, Q4, P13)
  [Q17, Q4] = cp(Q17, Q4, P12)
  [Q16, Q4] = cp(Q16, Q4, P11)
  [Q22, Q3] = cp(Q22, Q3, P18)
  [Q21, Q3] = cp(Q21, Q3, P17)
  [Q20, Q3] = cp(Q20, Q3, P16)
  [Q19, Q3] = cp(Q19, Q3, P15)
  [Q18, Q3] = cp(Q18, Q3, P14)
  [Q17, Q3] = cp(Q17, Q3, P13)
  [Q16, Q3] = cp(Q16, Q3, P12)
  [Q22, Q2] = cp(Q22, Q2, P19)
  [Q21, Q2] = cp(Q21, Q2, P18)
  [Q20, Q2] = cp(Q20, Q2, P17)
  [Q19, Q2] = cp(Q19, Q2, P16)
  [Q18, Q2] = cp(Q18, Q2, P15)
  [Q17, Q2] = cp(Q17, Q2, P14)
  [Q16, Q2] = cp(Q16, Q2, P13)
  [Q22, Q1] = cp(Q22, Q1, P20)
  [Q21, Q1] = cp(Q21, Q1, P19)
  [Q20, Q1] = cp(Q20, Q1, P18)
  [Q19, Q1] = cp(Q19, Q1, P17)
  [Q18, Q1] = cp(Q18, Q1, P16)
  [Q17, Q1] = cp(Q17, Q1, P15)
  [Q16, Q1] = cp(Q16, Q1, P14)
  [Q22, Q0] = cp(Q22, Q0, P21)
  [Q21, Q0] = cp(Q21, Q0, P20)
  [Q20, Q0] = cp(Q20, Q0, P19)
  [Q19, Q0] = cp(Q19, Q0, P18)
  [Q18, Q0] = cp(Q18, Q0, P17)
  [Q17, Q0] = cp(Q17, Q0, P16)
  [Q16, Q0] = cp(Q16, Q0, P15)
}

Start fusing gates...
Reset qubit group map
(11, 11) (12, 12) (13, 13) (14, 14) (15, 15) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,22,28,]
Fusing Kernel (14 gates): qubits [11, 12, 13, 14, 15], gates fusion, qubits [11, 12, 13, 14, 15], gates CircuitSeq {
  Q15 = h(Q15)
  [Q15, Q14] = cp(Q15, Q14, P0)
  [Q15, Q13] = cp(Q15, Q13, P1)
  Q14 = h(Q14)
  [Q14, Q13] = cp(Q14, Q13, P0)
  [Q15, Q12] = cp(Q15, Q12, P2)
  [Q14, Q12] = cp(Q14, Q12, P1)
  Q13 = h(Q13)
  [Q13, Q12] = cp(Q13, Q12, P0)
  [Q15, Q11] = cp(Q15, Q11, P3)
  [Q14, Q11] = cp(Q14, Q11, P2)
  [Q13, Q11] = cp(Q13, Q11, P1)
  Q12 = h(Q12)
  [Q12, Q11] = cp(Q12, Q11, P0)
}

Gate 0: [15, ]
Fusing gate 0(0) for rank 0
t 15
Matrix Multiplication (5, 1), mask 16
Fusing gate 0(0) for rank 1
t 15
Matrix Multiplication (5, 1), mask 16
Gate 1: [15, 14, ]
Fusing gate 26(1) for rank 0
c,t 15,14
Matrix Multiplication (5, 2), mask 24
Fusing gate 26(1) for rank 1
c,t 15,14
Matrix Multiplication (5, 2), mask 24
Gate 2: [15, 13, ]
Fusing gate 26(1) for rank 0
c,t 15,13
Matrix Multiplication (5, 2), mask 20
Fusing gate 26(1) for rank 1
c,t 15,13
Matrix Multiplication (5, 2), mask 20
Gate 3: [14, ]
Fusing gate 0(0) for rank 0
t 14
Matrix Multiplication (5, 1), mask 8
Fusing gate 0(0) for rank 1
t 14
Matrix Multiplication (5, 1), mask 8
Gate 4: [14, 13, ]
Fusing gate 26(1) for rank 0
c,t 14,13
Matrix Multiplication (5, 2), mask 12
Fusing gate 26(1) for rank 1
c,t 14,13
Matrix Multiplication (5, 2), mask 12
Gate 5: [15, 12, ]
Fusing gate 26(1) for rank 0
c,t 15,12
Matrix Multiplication (5, 2), mask 18
Fusing gate 26(1) for rank 1
c,t 15,12
Matrix Multiplication (5, 2), mask 18
Gate 6: [14, 12, ]
Fusing gate 26(1) for rank 0
c,t 14,12
Matrix Multiplication (5, 2), mask 10
Fusing gate 26(1) for rank 1
c,t 14,12
Matrix Multiplication (5, 2), mask 10
Gate 7: [13, ]
Fusing gate 0(0) for rank 0
t 13
Matrix Multiplication (5, 1), mask 4
Fusing gate 0(0) for rank 1
t 13
Matrix Multiplication (5, 1), mask 4
Gate 8: [13, 12, ]
Fusing gate 26(1) for rank 0
c,t 13,12
Matrix Multiplication (5, 2), mask 6
Fusing gate 26(1) for rank 1
c,t 13,12
Matrix Multiplication (5, 2), mask 6
Gate 9: [15, 11, ]
Fusing gate 26(1) for rank 0
c,t 15,11
Matrix Multiplication (5, 2), mask 17
Fusing gate 26(1) for rank 1
c,t 15,11
Matrix Multiplication (5, 2), mask 17
Gate 10: [14, 11, ]
Fusing gate 26(1) for rank 0
c,t 14,11
Matrix Multiplication (5, 2), mask 9
Fusing gate 26(1) for rank 1
c,t 14,11
Matrix Multiplication (5, 2), mask 9
Gate 11: [13, 11, ]
Fusing gate 26(1) for rank 0
c,t 13,11
Matrix Multiplication (5, 2), mask 5
Fusing gate 26(1) for rank 1
c,t 13,11
Matrix Multiplication (5, 2), mask 5
Gate 12: [12, ]
Fusing gate 0(0) for rank 0
t 12
Matrix Multiplication (5, 1), mask 2
Fusing gate 0(0) for rank 1
t 12
Matrix Multiplication (5, 1), mask 2
Gate 13: [12, 11, ]
Fusing gate 26(1) for rank 0
c,t 12,11
Matrix Multiplication (5, 2), mask 3
Fusing gate 26(1) for rank 1
c,t 12,11
Matrix Multiplication (5, 2), mask 3
SHM Kernel Physical (107): [ 5,6,7,8,9,10,11]
shared_memory, qubits [5, 6, 7, 8, 9, 10, 11], gates CircuitSeq {
  [Q15, Q10] = cp(Q15, Q10, P4)
  [Q14, Q10] = cp(Q14, Q10, P3)
  [Q13, Q10] = cp(Q13, Q10, P2)
  [Q12, Q10] = cp(Q12, Q10, P1)
  Q11 = h(Q11)
  [Q11, Q10] = cp(Q11, Q10, P0)
  [Q15, Q9] = cp(Q15, Q9, P5)
  [Q14, Q9] = cp(Q14, Q9, P4)
  [Q13, Q9] = cp(Q13, Q9, P3)
  [Q12, Q9] = cp(Q12, Q9, P2)
  [Q11, Q9] = cp(Q11, Q9, P1)
  Q10 = h(Q10)
  [Q10, Q9] = cp(Q10, Q9, P0)
  [Q15, Q8] = cp(Q15, Q8, P6)
  [Q14, Q8] = cp(Q14, Q8, P5)
  [Q13, Q8] = cp(Q13, Q8, P4)
  [Q12, Q8] = cp(Q12, Q8, P3)
  [Q11, Q8] = cp(Q11, Q8, P2)
  [Q10, Q8] = cp(Q10, Q8, P1)
  [Q15, Q7] = cp(Q15, Q7, P7)
  [Q14, Q7] = cp(Q14, Q7, P6)
  [Q13, Q7] = cp(Q13, Q7, P5)
  [Q12, Q7] = cp(Q12, Q7, P4)
  [Q11, Q7] = cp(Q11, Q7, P3)
  [Q10, Q7] = cp(Q10, Q7, P2)
  [Q15, Q6] = cp(Q15, Q6, P8)
  [Q14, Q6] = cp(Q14, Q6, P7)
  [Q13, Q6] = cp(Q13, Q6, P6)
  [Q12, Q6] = cp(Q12, Q6, P5)
  [Q11, Q6] = cp(Q11, Q6, P4)
  [Q10, Q6] = cp(Q10, Q6, P3)
  [Q15, Q5] = cp(Q15, Q5, P9)
  [Q14, Q5] = cp(Q14, Q5, P8)
  [Q13, Q5] = cp(Q13, Q5, P7)
  [Q12, Q5] = cp(Q12, Q5, P6)
  [Q11, Q5] = cp(Q11, Q5, P5)
  [Q10, Q5] = cp(Q10, Q5, P4)
  [Q15, Q4] = cp(Q15, Q4, P10)
  [Q14, Q4] = cp(Q14, Q4, P9)
  [Q13, Q4] = cp(Q13, Q4, P8)
  [Q12, Q4] = cp(Q12, Q4, P7)
  [Q11, Q4] = cp(Q11, Q4, P6)
  [Q10, Q4] = cp(Q10, Q4, P5)
  [Q15, Q3] = cp(Q15, Q3, P11)
  [Q14, Q3] = cp(Q14, Q3, P10)
  [Q13, Q3] = cp(Q13, Q3, P9)
  [Q12, Q3] = cp(Q12, Q3, P8)
  [Q11, Q3] = cp(Q11, Q3, P7)
  [Q10, Q3] = cp(Q10, Q3, P6)
  [Q15, Q2] = cp(Q15, Q2, P12)
  [Q14, Q2] = cp(Q14, Q2, P11)
  [Q13, Q2] = cp(Q13, Q2, P10)
  [Q12, Q2] = cp(Q12, Q2, P9)
  [Q11, Q2] = cp(Q11, Q2, P8)
  [Q10, Q2] = cp(Q10, Q2, P7)
  [Q15, Q1] = cp(Q15, Q1, P13)
  [Q14, Q1] = cp(Q14, Q1, P12)
  [Q13, Q1] = cp(Q13, Q1, P11)
  [Q12, Q1] = cp(Q12, Q1, P10)
  [Q11, Q1] = cp(Q11, Q1, P9)
  [Q10, Q1] = cp(Q10, Q1, P8)
  [Q15, Q0] = cp(Q15, Q0, P14)
  [Q14, Q0] = cp(Q14, Q0, P13)
  [Q13, Q0] = cp(Q13, Q0, P12)
  [Q12, Q0] = cp(Q12, Q0, P11)
  [Q11, Q0] = cp(Q11, Q0, P10)
  [Q10, Q0] = cp(Q10, Q0, P9)
  Q9 = h(Q9)
  [Q9, Q8] = cp(Q9, Q8, P0)
  [Q9, Q7] = cp(Q9, Q7, P1)
  Q8 = h(Q8)
  [Q8, Q7] = cp(Q8, Q7, P0)
  [Q9, Q6] = cp(Q9, Q6, P2)
  [Q8, Q6] = cp(Q8, Q6, P1)
  Q7 = h(Q7)
  [Q7, Q6] = cp(Q7, Q6, P0)
  [Q9, Q5] = cp(Q9, Q5, P3)
  [Q8, Q5] = cp(Q8, Q5, P2)
  [Q7, Q5] = cp(Q7, Q5, P1)
  Q6 = h(Q6)
  [Q6, Q5] = cp(Q6, Q5, P0)
  [Q9, Q4] = cp(Q9, Q4, P4)
  [Q8, Q4] = cp(Q8, Q4, P3)
  [Q7, Q4] = cp(Q7, Q4, P2)
  [Q6, Q4] = cp(Q6, Q4, P1)
  Q5 = h(Q5)
  [Q5, Q4] = cp(Q5, Q4, P0)
  [Q9, Q3] = cp(Q9, Q3, P5)
  [Q8, Q3] = cp(Q8, Q3, P4)
  [Q7, Q3] = cp(Q7, Q3, P3)
  [Q6, Q3] = cp(Q6, Q3, P2)
  [Q5, Q3] = cp(Q5, Q3, P1)
  [Q9, Q2] = cp(Q9, Q2, P6)
  [Q8, Q2] = cp(Q8, Q2, P5)
  [Q7, Q2] = cp(Q7, Q2, P4)
  [Q6, Q2] = cp(Q6, Q2, P3)
  [Q5, Q2] = cp(Q5, Q2, P2)
  [Q9, Q1] = cp(Q9, Q1, P7)
  [Q8, Q1] = cp(Q8, Q1, P6)
  [Q7, Q1] = cp(Q7, Q1, P5)
  [Q6, Q1] = cp(Q6, Q1, P4)
  [Q5, Q1] = cp(Q5, Q1, P3)
  [Q9, Q0] = cp(Q9, Q0, P8)
  [Q8, Q0] = cp(Q8, Q0, P7)
  [Q7, Q0] = cp(Q7, Q0, P6)
  [Q6, Q0] = cp(Q6, Q0, P5)
  [Q5, Q0] = cp(Q5, Q0, P4)
}

Start fusing gates...
Reset qubit group map
(0, 0) (1, 1) (2, 2) (3, 3) (4, 4) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,22,28,]
Fusing Kernel (15 gates): qubits [0, 1, 2, 3, 4], gates fusion, qubits [0, 1, 2, 3, 4], gates CircuitSeq {
  Q4 = h(Q4)
  [Q4, Q3] = cp(Q4, Q3, P0)
  [Q4, Q2] = cp(Q4, Q2, P1)
  Q3 = h(Q3)
  [Q3, Q2] = cp(Q3, Q2, P0)
  [Q4, Q1] = cp(Q4, Q1, P2)
  [Q3, Q1] = cp(Q3, Q1, P1)
  Q2 = h(Q2)
  [Q2, Q1] = cp(Q2, Q1, P0)
  [Q4, Q0] = cp(Q4, Q0, P3)
  [Q3, Q0] = cp(Q3, Q0, P2)
  [Q2, Q0] = cp(Q2, Q0, P1)
  Q1 = h(Q1)
  [Q1, Q0] = cp(Q1, Q0, P0)
  Q0 = h(Q0)
}

Gate 0: [4, ]
Fusing gate 0(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 16
Fusing gate 0(0) for rank 1
t 4
Matrix Multiplication (5, 1), mask 16
Gate 1: [4, 3, ]
Fusing gate 26(1) for rank 0
c,t 4,3
Matrix Multiplication (5, 2), mask 24
Fusing gate 26(1) for rank 1
c,t 4,3
Matrix Multiplication (5, 2), mask 24
Gate 2: [4, 2, ]
Fusing gate 26(1) for rank 0
c,t 4,2
Matrix Multiplication (5, 2), mask 20
Fusing gate 26(1) for rank 1
c,t 4,2
Matrix Multiplication (5, 2), mask 20
Gate 3: [3, ]
Fusing gate 0(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 0(0) for rank 1
t 3
Matrix Multiplication (5, 1), mask 8
Gate 4: [3, 2, ]
Fusing gate 26(1) for rank 0
c,t 3,2
Matrix Multiplication (5, 2), mask 12
Fusing gate 26(1) for rank 1
c,t 3,2
Matrix Multiplication (5, 2), mask 12
Gate 5: [4, 1, ]
Fusing gate 26(1) for rank 0
c,t 4,1
Matrix Multiplication (5, 2), mask 18
Fusing gate 26(1) for rank 1
c,t 4,1
Matrix Multiplication (5, 2), mask 18
Gate 6: [3, 1, ]
Fusing gate 26(1) for rank 0
c,t 3,1
Matrix Multiplication (5, 2), mask 10
Fusing gate 26(1) for rank 1
c,t 3,1
Matrix Multiplication (5, 2), mask 10
Gate 7: [2, ]
Fusing gate 0(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 0(0) for rank 1
t 2
Matrix Multiplication (5, 1), mask 4
Gate 8: [2, 1, ]
Fusing gate 26(1) for rank 0
c,t 2,1
Matrix Multiplication (5, 2), mask 6
Fusing gate 26(1) for rank 1
c,t 2,1
Matrix Multiplication (5, 2), mask 6
Gate 9: [4, 0, ]
Fusing gate 26(1) for rank 0
c,t 4,0
Matrix Multiplication (5, 2), mask 17
Fusing gate 26(1) for rank 1
c,t 4,0
Matrix Multiplication (5, 2), mask 17
Gate 10: [3, 0, ]
Fusing gate 26(1) for rank 0
c,t 3,0
Matrix Multiplication (5, 2), mask 9
Fusing gate 26(1) for rank 1
c,t 3,0
Matrix Multiplication (5, 2), mask 9
Gate 11: [2, 0, ]
Fusing gate 26(1) for rank 0
c,t 2,0
Matrix Multiplication (5, 2), mask 5
Fusing gate 26(1) for rank 1
c,t 2,0
Matrix Multiplication (5, 2), mask 5
Gate 12: [1, ]
Fusing gate 0(0) for rank 0
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 0(0) for rank 1
t 1
Matrix Multiplication (5, 1), mask 2
Gate 13: [1, 0, ]
Fusing gate 26(1) for rank 0
c,t 1,0
Matrix Multiplication (5, 2), mask 3
Fusing gate 26(1) for rank 1
c,t 1,0
Matrix Multiplication (5, 2), mask 3
Gate 14: [0, ]
Fusing gate 0(0) for rank 0
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 0(0) for rank 1
t 0
Matrix Multiplication (5, 1), mask 1
Compilation Done! 
Num Shuffles: 1
Num FUSION Kernel: 4
Num SHM Kernel: 3
Start Simulating...
Simulator (offloading) is running...
Creating regions...
num_state_vectors: 2
Num_local_qubits = 28
Init done..
sizeof FusedGate: 40 Bytes
batch id 0
fused: 0
shm: 0
Apply gates batch 0
batch id 1
fused: 1
shm: 145
fused: 2
shm: 271
fused: 3
Apply gates batch 1
my chunk id 0, num_sv_cpu 2, at 0[0]
ok
my chunk id 1, num_sv_cpu 2, at 1[0]
ok
Solving ILP for num_qubits=29, num_local_qubits=28, num_global_qubits=0, num_iterations=1...
Available solvers: ['PULP_CBC_CMD']
Solving ILP for num_qubits=29, num_local_qubits=28, num_global_qubits=0, num_iterations=2...
Available solvers: ['PULP_CBC_CMD']
ELAPSED TIME = 1.3416s
