Num ranks: 1, myrank: 0
Computed and cached schedule in 42.111 seconds.
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 14, 16, Start fusing gates...
Reset qubit group map
(0, 0) (1, 1) (2, 2) (3, 3) (4, 4) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,25,26,27,28,29,14,16,]
Fusing Kernel (15 gates): qubits [0, 1, 2, 3, 4], gates fusion, qubits [0, 1, 2, 3, 4], gates CircuitSeq {
  Q1 = u3(Q1, P3, P4, P2)
  Q0 = u3(Q0, P0, P1, P2)
  [Q0, Q1] = cx(Q0, Q1)
  Q2 = u3(Q2, P5, P6, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  Q3 = u3(Q3, P7, P8, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  [Q2, Q3] = cx(Q2, Q3)
  Q4 = u3(Q4, P9, P10, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
}

Gate 0: [1, ]
Fusing gate 23(0) for rank 0
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 1
Matrix Multiplication (5, 1), mask 2
Gate 1: [0, ]
Fusing gate 23(0) for rank 0
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 0
Matrix Multiplication (5, 1), mask 1
Gate 2: [0, 1, ]
Fusing gate 6(1) for rank 0
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Gate 3: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 2
Matrix Multiplication (5, 1), mask 4
Gate 4: [0, 2, ]
Fusing gate 6(1) for rank 0
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Gate 5: [1, 2, ]
Fusing gate 6(1) for rank 0
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Gate 6: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 3
Matrix Multiplication (5, 1), mask 8
Gate 7: [0, 3, ]
Fusing gate 6(1) for rank 0
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Gate 8: [1, 3, ]
Fusing gate 6(1) for rank 0
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Gate 9: [2, 3, ]
Fusing gate 6(1) for rank 0
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 1
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 2
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 3
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Gate 10: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 4
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 4
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 4
Matrix Multiplication (5, 1), mask 16
Gate 11: [0, 4, ]
Fusing gate 6(1) for rank 0
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Gate 12: [1, 4, ]
Fusing gate 6(1) for rank 0
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Gate 13: [2, 4, ]
Fusing gate 6(1) for rank 0
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Gate 14: [3, 4, ]
Fusing gate 6(1) for rank 0
c,t 3,4
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 3,4
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 3,4
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 3,4
Matrix Multiplication (5, 2), mask 24
SHM Kernel Physical (30): [ 5,6,7,8]
shared_memory, qubits [5, 6, 7, 8], gates CircuitSeq {
  Q5 = u3(Q5, P11, P12, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  Q6 = u3(Q6, P13, P14, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
  Q7 = u3(Q7, P15, P16, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  Q8 = u3(Q8, P17, P18, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
}

SHM Kernel Physical (60): [ 9,10,11,12,13]
shared_memory, qubits [9, 10, 11, 12, 13], gates CircuitSeq {
  Q9 = u3(Q9, P19, P20, P2)
  [Q0, Q9] = cx(Q0, Q9)
  [Q1, Q9] = cx(Q1, Q9)
  [Q2, Q9] = cx(Q2, Q9)
  [Q3, Q9] = cx(Q3, Q9)
  [Q4, Q9] = cx(Q4, Q9)
  [Q5, Q9] = cx(Q5, Q9)
  [Q6, Q9] = cx(Q6, Q9)
  [Q7, Q9] = cx(Q7, Q9)
  [Q8, Q9] = cx(Q8, Q9)
  Q10 = u3(Q10, P21, P22, P2)
  [Q0, Q10] = cx(Q0, Q10)
  [Q1, Q10] = cx(Q1, Q10)
  [Q2, Q10] = cx(Q2, Q10)
  [Q3, Q10] = cx(Q3, Q10)
  [Q4, Q10] = cx(Q4, Q10)
  [Q5, Q10] = cx(Q5, Q10)
  [Q6, Q10] = cx(Q6, Q10)
  [Q7, Q10] = cx(Q7, Q10)
  [Q8, Q10] = cx(Q8, Q10)
  [Q9, Q10] = cx(Q9, Q10)
  Q11 = u3(Q11, P23, P24, P2)
  [Q0, Q11] = cx(Q0, Q11)
  [Q1, Q11] = cx(Q1, Q11)
  [Q2, Q11] = cx(Q2, Q11)
  [Q3, Q11] = cx(Q3, Q11)
  [Q4, Q11] = cx(Q4, Q11)
  [Q5, Q11] = cx(Q5, Q11)
  [Q6, Q11] = cx(Q6, Q11)
  [Q7, Q11] = cx(Q7, Q11)
  [Q8, Q11] = cx(Q8, Q11)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
  Q12 = u3(Q12, P25, P26, P2)
  [Q0, Q12] = cx(Q0, Q12)
  [Q1, Q12] = cx(Q1, Q12)
  [Q2, Q12] = cx(Q2, Q12)
  [Q3, Q12] = cx(Q3, Q12)
  [Q4, Q12] = cx(Q4, Q12)
  [Q5, Q12] = cx(Q5, Q12)
  [Q6, Q12] = cx(Q6, Q12)
  [Q7, Q12] = cx(Q7, Q12)
  [Q8, Q12] = cx(Q8, Q12)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  Q13 = u3(Q13, P27, P28, P2)
  [Q0, Q13] = cx(Q0, Q13)
  [Q1, Q13] = cx(Q1, Q13)
  [Q2, Q13] = cx(Q2, Q13)
  [Q3, Q13] = cx(Q3, Q13)
  [Q4, Q13] = cx(Q4, Q13)
  [Q5, Q13] = cx(Q5, Q13)
  [Q6, Q13] = cx(Q6, Q13)
  [Q7, Q13] = cx(Q7, Q13)
  [Q8, Q13] = cx(Q8, Q13)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
}

Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 28, 29, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 14, 16, 10, 11, SHM Kernel Physical (48): [ 26,14,27]
shared_memory, qubits [14, 15, 16], gates CircuitSeq {
  Q14 = u3(Q14, P29, P30, P2)
  [Q0, Q14] = cx(Q0, Q14)
  [Q1, Q14] = cx(Q1, Q14)
  [Q2, Q14] = cx(Q2, Q14)
  [Q3, Q14] = cx(Q3, Q14)
  [Q4, Q14] = cx(Q4, Q14)
  [Q5, Q14] = cx(Q5, Q14)
  [Q6, Q14] = cx(Q6, Q14)
  [Q7, Q14] = cx(Q7, Q14)
  [Q8, Q14] = cx(Q8, Q14)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
  Q15 = u3(Q15, P31, P32, P2)
  [Q0, Q15] = cx(Q0, Q15)
  [Q1, Q15] = cx(Q1, Q15)
  [Q2, Q15] = cx(Q2, Q15)
  [Q3, Q15] = cx(Q3, Q15)
  [Q4, Q15] = cx(Q4, Q15)
  [Q5, Q15] = cx(Q5, Q15)
  [Q6, Q15] = cx(Q6, Q15)
  [Q7, Q15] = cx(Q7, Q15)
  [Q8, Q15] = cx(Q8, Q15)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
  Q16 = u3(Q16, P33, P34, P2)
  [Q0, Q16] = cx(Q0, Q16)
  [Q1, Q16] = cx(Q1, Q16)
  [Q2, Q16] = cx(Q2, Q16)
  [Q3, Q16] = cx(Q3, Q16)
  [Q4, Q16] = cx(Q4, Q16)
  [Q5, Q16] = cx(Q5, Q16)
  [Q6, Q16] = cx(Q6, Q16)
  [Q7, Q16] = cx(Q7, Q16)
  [Q8, Q16] = cx(Q8, Q16)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
}

SHM Kernel Physical (147): [ 15,16,17,18,19,20,21]
shared_memory, qubits [17, 18, 19, 20, 21, 22, 23], gates CircuitSeq {
  Q17 = u3(Q17, P35, P36, P2)
  [Q0, Q17] = cx(Q0, Q17)
  [Q1, Q17] = cx(Q1, Q17)
  [Q2, Q17] = cx(Q2, Q17)
  [Q3, Q17] = cx(Q3, Q17)
  [Q4, Q17] = cx(Q4, Q17)
  [Q5, Q17] = cx(Q5, Q17)
  [Q6, Q17] = cx(Q6, Q17)
  [Q7, Q17] = cx(Q7, Q17)
  [Q8, Q17] = cx(Q8, Q17)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  Q18 = u3(Q18, P37, P38, P2)
  [Q0, Q18] = cx(Q0, Q18)
  [Q1, Q18] = cx(Q1, Q18)
  [Q2, Q18] = cx(Q2, Q18)
  [Q3, Q18] = cx(Q3, Q18)
  [Q4, Q18] = cx(Q4, Q18)
  [Q5, Q18] = cx(Q5, Q18)
  [Q6, Q18] = cx(Q6, Q18)
  [Q7, Q18] = cx(Q7, Q18)
  [Q8, Q18] = cx(Q8, Q18)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
  Q19 = u3(Q19, P39, P40, P2)
  [Q0, Q19] = cx(Q0, Q19)
  [Q1, Q19] = cx(Q1, Q19)
  [Q2, Q19] = cx(Q2, Q19)
  [Q3, Q19] = cx(Q3, Q19)
  [Q4, Q19] = cx(Q4, Q19)
  [Q5, Q19] = cx(Q5, Q19)
  [Q6, Q19] = cx(Q6, Q19)
  [Q7, Q19] = cx(Q7, Q19)
  [Q8, Q19] = cx(Q8, Q19)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  Q20 = u3(Q20, P41, P42, P2)
  [Q0, Q20] = cx(Q0, Q20)
  [Q1, Q20] = cx(Q1, Q20)
  [Q2, Q20] = cx(Q2, Q20)
  [Q3, Q20] = cx(Q3, Q20)
  [Q4, Q20] = cx(Q4, Q20)
  [Q5, Q20] = cx(Q5, Q20)
  [Q6, Q20] = cx(Q6, Q20)
  [Q7, Q20] = cx(Q7, Q20)
  [Q8, Q20] = cx(Q8, Q20)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
  Q21 = u3(Q21, P43, P44, P2)
  [Q0, Q21] = cx(Q0, Q21)
  [Q1, Q21] = cx(Q1, Q21)
  [Q2, Q21] = cx(Q2, Q21)
  [Q3, Q21] = cx(Q3, Q21)
  [Q4, Q21] = cx(Q4, Q21)
  [Q5, Q21] = cx(Q5, Q21)
  [Q6, Q21] = cx(Q6, Q21)
  [Q7, Q21] = cx(Q7, Q21)
  [Q8, Q21] = cx(Q8, Q21)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
  Q22 = u3(Q22, P45, P46, P2)
  [Q0, Q22] = cx(Q0, Q22)
  [Q1, Q22] = cx(Q1, Q22)
  [Q2, Q22] = cx(Q2, Q22)
  [Q3, Q22] = cx(Q3, Q22)
  [Q4, Q22] = cx(Q4, Q22)
  [Q5, Q22] = cx(Q5, Q22)
  [Q6, Q22] = cx(Q6, Q22)
  [Q7, Q22] = cx(Q7, Q22)
  [Q8, Q22] = cx(Q8, Q22)
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
  Q23 = u3(Q23, P47, P48, P2)
  [Q0, Q23] = cx(Q0, Q23)
  [Q1, Q23] = cx(Q1, Q23)
  [Q2, Q23] = cx(Q2, Q23)
  [Q3, Q23] = cx(Q3, Q23)
  [Q4, Q23] = cx(Q4, Q23)
  [Q5, Q23] = cx(Q5, Q23)
  [Q6, Q23] = cx(Q6, Q23)
  [Q7, Q23] = cx(Q7, Q23)
  [Q8, Q23] = cx(Q8, Q23)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
}

SHM Kernel Physical (135): [ 22,23,24,25,10]
shared_memory, qubits [24, 25, 26, 27, 28], gates CircuitSeq {
  Q24 = u3(Q24, P49, P50, P2)
  [Q0, Q24] = cx(Q0, Q24)
  [Q1, Q24] = cx(Q1, Q24)
  [Q2, Q24] = cx(Q2, Q24)
  [Q3, Q24] = cx(Q3, Q24)
  [Q4, Q24] = cx(Q4, Q24)
  [Q5, Q24] = cx(Q5, Q24)
  [Q6, Q24] = cx(Q6, Q24)
  [Q7, Q24] = cx(Q7, Q24)
  [Q8, Q24] = cx(Q8, Q24)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  Q25 = u3(Q25, P51, P52, P2)
  [Q0, Q25] = cx(Q0, Q25)
  [Q1, Q25] = cx(Q1, Q25)
  [Q2, Q25] = cx(Q2, Q25)
  [Q3, Q25] = cx(Q3, Q25)
  [Q4, Q25] = cx(Q4, Q25)
  [Q5, Q25] = cx(Q5, Q25)
  [Q6, Q25] = cx(Q6, Q25)
  [Q7, Q25] = cx(Q7, Q25)
  [Q8, Q25] = cx(Q8, Q25)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
  Q26 = u3(Q26, P53, P54, P2)
  [Q0, Q26] = cx(Q0, Q26)
  [Q1, Q26] = cx(Q1, Q26)
  [Q2, Q26] = cx(Q2, Q26)
  [Q3, Q26] = cx(Q3, Q26)
  [Q4, Q26] = cx(Q4, Q26)
  [Q5, Q26] = cx(Q5, Q26)
  [Q6, Q26] = cx(Q6, Q26)
  [Q7, Q26] = cx(Q7, Q26)
  [Q8, Q26] = cx(Q8, Q26)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
  Q27 = u3(Q27, P55, P56, P2)
  [Q0, Q27] = cx(Q0, Q27)
  [Q1, Q27] = cx(Q1, Q27)
  [Q2, Q27] = cx(Q2, Q27)
  [Q3, Q27] = cx(Q3, Q27)
  [Q4, Q27] = cx(Q4, Q27)
  [Q5, Q27] = cx(Q5, Q27)
  [Q6, Q27] = cx(Q6, Q27)
  [Q7, Q27] = cx(Q7, Q27)
  [Q8, Q27] = cx(Q8, Q27)
  [Q9, Q27] = cx(Q9, Q27)
  [Q10, Q27] = cx(Q10, Q27)
  [Q11, Q27] = cx(Q11, Q27)
  [Q12, Q27] = cx(Q12, Q27)
  [Q13, Q27] = cx(Q13, Q27)
  [Q14, Q27] = cx(Q14, Q27)
  [Q15, Q27] = cx(Q15, Q27)
  [Q16, Q27] = cx(Q16, Q27)
  [Q17, Q27] = cx(Q17, Q27)
  [Q18, Q27] = cx(Q18, Q27)
  [Q19, Q27] = cx(Q19, Q27)
  [Q20, Q27] = cx(Q20, Q27)
  [Q21, Q27] = cx(Q21, Q27)
  [Q22, Q27] = cx(Q22, Q27)
  [Q23, Q27] = cx(Q23, Q27)
  [Q24, Q27] = cx(Q24, Q27)
  [Q25, Q27] = cx(Q25, Q27)
  [Q26, Q27] = cx(Q26, Q27)
  Q28 = u3(Q28, P57, P58, P2)
  [Q0, Q28] = cx(Q0, Q28)
  [Q1, Q28] = cx(Q1, Q28)
  [Q2, Q28] = cx(Q2, Q28)
  [Q3, Q28] = cx(Q3, Q28)
  [Q4, Q28] = cx(Q4, Q28)
  [Q5, Q28] = cx(Q5, Q28)
  [Q6, Q28] = cx(Q6, Q28)
  [Q7, Q28] = cx(Q7, Q28)
  [Q8, Q28] = cx(Q8, Q28)
  [Q9, Q28] = cx(Q9, Q28)
  [Q10, Q28] = cx(Q10, Q28)
  [Q11, Q28] = cx(Q11, Q28)
  [Q12, Q28] = cx(Q12, Q28)
  [Q13, Q28] = cx(Q13, Q28)
  [Q14, Q28] = cx(Q14, Q28)
  [Q15, Q28] = cx(Q15, Q28)
  [Q16, Q28] = cx(Q16, Q28)
  [Q17, Q28] = cx(Q17, Q28)
  [Q18, Q28] = cx(Q18, Q28)
  [Q19, Q28] = cx(Q19, Q28)
  [Q20, Q28] = cx(Q20, Q28)
  [Q21, Q28] = cx(Q21, Q28)
  [Q22, Q28] = cx(Q22, Q28)
  [Q23, Q28] = cx(Q23, Q28)
  [Q24, Q28] = cx(Q24, Q28)
  [Q25, Q28] = cx(Q25, Q28)
  [Q26, Q28] = cx(Q26, Q28)
  [Q27, Q28] = cx(Q27, Q28)
}

Start fusing gates...
Reset qubit group map
(0, 0) (1, 1) (2, 2) (3, 3) (11, 29) current Layout: [0,1,2,3,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,14,16,10,11,]
Fusing Kernel (15 gates): qubits [0, 1, 2, 3, 29], gates fusion, qubits [0, 1, 2, 3, 29], gates CircuitSeq {
  Q29 = u3(Q29, P59, P60, P2)
  [Q0, Q29] = cx(Q0, Q29)
  [Q1, Q29] = cx(Q1, Q29)
  Q1 = u3(Q1, P63, P64, P2)
  Q0 = u3(Q0, P61, P62, P2)
  [Q0, Q1] = cx(Q0, Q1)
  [Q2, Q29] = cx(Q2, Q29)
  Q2 = u3(Q2, P65, P66, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  [Q3, Q29] = cx(Q3, Q29)
  Q3 = u3(Q3, P67, P68, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  [Q2, Q3] = cx(Q2, Q3)
}

Gate 0: [29, ]
Fusing gate 23(0) for rank 0
t 29
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 29
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 29
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 29
Matrix Multiplication (5, 1), mask 16
Gate 1: [0, 29, ]
Fusing gate 6(1) for rank 0
c,t 0,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 0,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 0,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 0,29
Matrix Multiplication (5, 2), mask 17
Gate 2: [1, 29, ]
Fusing gate 6(1) for rank 0
c,t 1,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 1,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 1,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 1,29
Matrix Multiplication (5, 2), mask 18
Gate 3: [1, ]
Fusing gate 23(0) for rank 0
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 1
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 1
Matrix Multiplication (5, 1), mask 2
Gate 4: [0, ]
Fusing gate 23(0) for rank 0
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 0
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 0
Matrix Multiplication (5, 1), mask 1
Gate 5: [0, 1, ]
Fusing gate 6(1) for rank 0
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Gate 6: [2, 29, ]
Fusing gate 6(1) for rank 0
c,t 2,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,29
Matrix Multiplication (5, 2), mask 20
Gate 7: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 2
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 2
Matrix Multiplication (5, 1), mask 4
Gate 8: [0, 2, ]
Fusing gate 6(1) for rank 0
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Gate 9: [1, 2, ]
Fusing gate 6(1) for rank 0
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Gate 10: [3, 29, ]
Fusing gate 6(1) for rank 0
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Gate 11: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 3
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 3
Matrix Multiplication (5, 1), mask 8
Gate 12: [0, 3, ]
Fusing gate 6(1) for rank 0
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Gate 13: [1, 3, ]
Fusing gate 6(1) for rank 0
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Gate 14: [2, 3, ]
Fusing gate 6(1) for rank 0
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 1
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 2
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 3
c,t 2,3
Matrix Multiplication (5, 2), mask 12
SHM Kernel Physical (70): [ 4,5,6,7,8,9,11]
shared_memory, qubits [4, 5, 6, 7, 8, 9, 29], gates CircuitSeq {
  [Q4, Q29] = cx(Q4, Q29)
  Q4 = u3(Q4, P69, P70, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
  [Q5, Q29] = cx(Q5, Q29)
  Q5 = u3(Q5, P71, P72, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  [Q6, Q29] = cx(Q6, Q29)
  Q6 = u3(Q6, P73, P74, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
  [Q7, Q29] = cx(Q7, Q29)
  Q7 = u3(Q7, P75, P76, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  [Q8, Q29] = cx(Q8, Q29)
  Q8 = u3(Q8, P77, P78, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
  [Q9, Q29] = cx(Q9, Q29)
  [Q10, Q29] = cx(Q10, Q29)
  [Q11, Q29] = cx(Q11, Q29)
  [Q12, Q29] = cx(Q12, Q29)
  [Q13, Q29] = cx(Q13, Q29)
  [Q14, Q29] = cx(Q14, Q29)
  [Q15, Q29] = cx(Q15, Q29)
  [Q16, Q29] = cx(Q16, Q29)
  [Q17, Q29] = cx(Q17, Q29)
  [Q18, Q29] = cx(Q18, Q29)
  [Q19, Q29] = cx(Q19, Q29)
  [Q20, Q29] = cx(Q20, Q29)
  [Q21, Q29] = cx(Q21, Q29)
  [Q22, Q29] = cx(Q22, Q29)
  [Q23, Q29] = cx(Q23, Q29)
  [Q24, Q29] = cx(Q24, Q29)
  [Q25, Q29] = cx(Q25, Q29)
  [Q26, Q29] = cx(Q26, Q29)
  [Q27, Q29] = cx(Q27, Q29)
  [Q28, Q29] = cx(Q28, Q29)
  Q9 = u3(Q9, P119, P120, P2)
  [Q0, Q9] = cx(Q0, Q9)
  [Q1, Q9] = cx(Q1, Q9)
  [Q2, Q9] = cx(Q2, Q9)
  [Q3, Q9] = cx(Q3, Q9)
  [Q4, Q9] = cx(Q4, Q9)
  [Q5, Q9] = cx(Q5, Q9)
  [Q6, Q9] = cx(Q6, Q9)
  [Q7, Q9] = cx(Q7, Q9)
  [Q8, Q9] = cx(Q8, Q9)
}

Current Layout0: [0, 1, 14, 16, 4, 5, 6, 7, 8, 9, 28, 29, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 10, 11, 2, 3, SHM Kernel Physical (98): [ 26,27,12,13,2,14,3]
shared_memory, qubits [10, 11, 12, 13, 14, 15, 16], gates CircuitSeq {
  Q10 = u3(Q10, P79, P80, P2)
  [Q0, Q10] = cx(Q0, Q10)
  Q11 = u3(Q11, P81, P82, P2)
  [Q0, Q11] = cx(Q0, Q11)
  Q12 = u3(Q12, P83, P84, P2)
  [Q0, Q12] = cx(Q0, Q12)
  Q13 = u3(Q13, P85, P86, P2)
  [Q0, Q13] = cx(Q0, Q13)
  Q14 = u3(Q14, P87, P88, P2)
  [Q0, Q14] = cx(Q0, Q14)
  Q15 = u3(Q15, P89, P90, P2)
  [Q0, Q15] = cx(Q0, Q15)
  Q16 = u3(Q16, P91, P92, P2)
  [Q0, Q16] = cx(Q0, Q16)
  [Q1, Q10] = cx(Q1, Q10)
  [Q1, Q11] = cx(Q1, Q11)
  [Q1, Q12] = cx(Q1, Q12)
  [Q1, Q13] = cx(Q1, Q13)
  [Q1, Q14] = cx(Q1, Q14)
  [Q1, Q15] = cx(Q1, Q15)
  [Q1, Q16] = cx(Q1, Q16)
  [Q2, Q10] = cx(Q2, Q10)
  [Q3, Q10] = cx(Q3, Q10)
  [Q4, Q10] = cx(Q4, Q10)
  [Q2, Q11] = cx(Q2, Q11)
  [Q3, Q11] = cx(Q3, Q11)
  [Q4, Q11] = cx(Q4, Q11)
  [Q2, Q12] = cx(Q2, Q12)
  [Q3, Q12] = cx(Q3, Q12)
  [Q4, Q12] = cx(Q4, Q12)
  [Q2, Q13] = cx(Q2, Q13)
  [Q3, Q13] = cx(Q3, Q13)
  [Q4, Q13] = cx(Q4, Q13)
  [Q2, Q14] = cx(Q2, Q14)
  [Q3, Q14] = cx(Q3, Q14)
  [Q4, Q14] = cx(Q4, Q14)
  [Q2, Q15] = cx(Q2, Q15)
  [Q3, Q15] = cx(Q3, Q15)
  [Q4, Q15] = cx(Q4, Q15)
  [Q2, Q16] = cx(Q2, Q16)
  [Q3, Q16] = cx(Q3, Q16)
  [Q4, Q16] = cx(Q4, Q16)
  [Q5, Q10] = cx(Q5, Q10)
  [Q5, Q11] = cx(Q5, Q11)
  [Q5, Q12] = cx(Q5, Q12)
  [Q5, Q13] = cx(Q5, Q13)
  [Q5, Q14] = cx(Q5, Q14)
  [Q5, Q15] = cx(Q5, Q15)
  [Q5, Q16] = cx(Q5, Q16)
  [Q6, Q10] = cx(Q6, Q10)
  [Q6, Q11] = cx(Q6, Q11)
  [Q6, Q12] = cx(Q6, Q12)
  [Q6, Q13] = cx(Q6, Q13)
  [Q6, Q14] = cx(Q6, Q14)
  [Q6, Q15] = cx(Q6, Q15)
  [Q6, Q16] = cx(Q6, Q16)
  [Q7, Q10] = cx(Q7, Q10)
  [Q7, Q11] = cx(Q7, Q11)
  [Q7, Q12] = cx(Q7, Q12)
  [Q7, Q13] = cx(Q7, Q13)
  [Q7, Q14] = cx(Q7, Q14)
  [Q7, Q15] = cx(Q7, Q15)
  [Q7, Q16] = cx(Q7, Q16)
  [Q8, Q10] = cx(Q8, Q10)
  [Q8, Q11] = cx(Q8, Q11)
  [Q8, Q12] = cx(Q8, Q12)
  [Q8, Q13] = cx(Q8, Q13)
  [Q8, Q14] = cx(Q8, Q14)
  [Q8, Q15] = cx(Q8, Q15)
  [Q8, Q16] = cx(Q8, Q16)
  [Q9, Q10] = cx(Q9, Q10)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
}

SHM Kernel Physical (147): [ 15,16,17,18,19,20,21]
shared_memory, qubits [17, 18, 19, 20, 21, 22, 23], gates CircuitSeq {
  Q17 = u3(Q17, P93, P94, P2)
  [Q0, Q17] = cx(Q0, Q17)
  Q18 = u3(Q18, P95, P96, P2)
  [Q0, Q18] = cx(Q0, Q18)
  Q19 = u3(Q19, P97, P98, P2)
  [Q0, Q19] = cx(Q0, Q19)
  Q20 = u3(Q20, P99, P100, P2)
  [Q0, Q20] = cx(Q0, Q20)
  Q21 = u3(Q21, P101, P102, P2)
  [Q0, Q21] = cx(Q0, Q21)
  Q22 = u3(Q22, P103, P104, P2)
  [Q0, Q22] = cx(Q0, Q22)
  Q23 = u3(Q23, P105, P106, P2)
  [Q0, Q23] = cx(Q0, Q23)
  [Q1, Q17] = cx(Q1, Q17)
  [Q1, Q18] = cx(Q1, Q18)
  [Q1, Q19] = cx(Q1, Q19)
  [Q1, Q20] = cx(Q1, Q20)
  [Q1, Q21] = cx(Q1, Q21)
  [Q1, Q22] = cx(Q1, Q22)
  [Q1, Q23] = cx(Q1, Q23)
  [Q2, Q17] = cx(Q2, Q17)
  [Q3, Q17] = cx(Q3, Q17)
  [Q4, Q17] = cx(Q4, Q17)
  [Q2, Q18] = cx(Q2, Q18)
  [Q3, Q18] = cx(Q3, Q18)
  [Q4, Q18] = cx(Q4, Q18)
  [Q2, Q19] = cx(Q2, Q19)
  [Q3, Q19] = cx(Q3, Q19)
  [Q4, Q19] = cx(Q4, Q19)
  [Q2, Q20] = cx(Q2, Q20)
  [Q3, Q20] = cx(Q3, Q20)
  [Q4, Q20] = cx(Q4, Q20)
  [Q2, Q21] = cx(Q2, Q21)
  [Q3, Q21] = cx(Q3, Q21)
  [Q4, Q21] = cx(Q4, Q21)
  [Q2, Q22] = cx(Q2, Q22)
  [Q3, Q22] = cx(Q3, Q22)
  [Q4, Q22] = cx(Q4, Q22)
  [Q2, Q23] = cx(Q2, Q23)
  [Q3, Q23] = cx(Q3, Q23)
  [Q4, Q23] = cx(Q4, Q23)
  [Q5, Q17] = cx(Q5, Q17)
  [Q5, Q18] = cx(Q5, Q18)
  [Q5, Q19] = cx(Q5, Q19)
  [Q5, Q20] = cx(Q5, Q20)
  [Q5, Q21] = cx(Q5, Q21)
  [Q5, Q22] = cx(Q5, Q22)
  [Q5, Q23] = cx(Q5, Q23)
  [Q6, Q17] = cx(Q6, Q17)
  [Q6, Q18] = cx(Q6, Q18)
  [Q6, Q19] = cx(Q6, Q19)
  [Q6, Q20] = cx(Q6, Q20)
  [Q6, Q21] = cx(Q6, Q21)
  [Q6, Q22] = cx(Q6, Q22)
  [Q6, Q23] = cx(Q6, Q23)
  [Q7, Q17] = cx(Q7, Q17)
  [Q7, Q18] = cx(Q7, Q18)
  [Q7, Q19] = cx(Q7, Q19)
  [Q7, Q20] = cx(Q7, Q20)
  [Q7, Q21] = cx(Q7, Q21)
  [Q7, Q22] = cx(Q7, Q22)
  [Q7, Q23] = cx(Q7, Q23)
  [Q8, Q17] = cx(Q8, Q17)
  [Q8, Q18] = cx(Q8, Q18)
  [Q8, Q19] = cx(Q8, Q19)
  [Q8, Q20] = cx(Q8, Q20)
  [Q8, Q21] = cx(Q8, Q21)
  [Q8, Q22] = cx(Q8, Q22)
  [Q8, Q23] = cx(Q8, Q23)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
}

SHM Kernel Physical (170): [ 0,1,22,23,24,25,10,11]
shared_memory, qubits [0, 1, 24, 25, 26, 27, 28, 29], gates CircuitSeq {
  Q24 = u3(Q24, P107, P108, P2)
  [Q0, Q24] = cx(Q0, Q24)
  Q25 = u3(Q25, P109, P110, P2)
  [Q0, Q25] = cx(Q0, Q25)
  Q26 = u3(Q26, P111, P112, P2)
  [Q0, Q26] = cx(Q0, Q26)
  Q27 = u3(Q27, P113, P114, P2)
  [Q0, Q27] = cx(Q0, Q27)
  Q28 = u3(Q28, P115, P116, P2)
  [Q0, Q28] = cx(Q0, Q28)
  Q29 = u3(Q29, P117, P118, P2)
  [Q0, Q29] = cx(Q0, Q29)
  [Q1, Q24] = cx(Q1, Q24)
  [Q1, Q25] = cx(Q1, Q25)
  [Q1, Q26] = cx(Q1, Q26)
  [Q1, Q27] = cx(Q1, Q27)
  [Q1, Q28] = cx(Q1, Q28)
  [Q1, Q29] = cx(Q1, Q29)
  Q1 = u3(Q1, P123, P124, P2)
  Q0 = u3(Q0, P121, P122, P2)
  [Q0, Q1] = cx(Q0, Q1)
  Q0 = u3(Q0, P181, P182, P2)
  Q1 = u3(Q1, P183, P184, P2)
  [Q2, Q24] = cx(Q2, Q24)
  [Q3, Q24] = cx(Q3, Q24)
  [Q4, Q24] = cx(Q4, Q24)
  [Q2, Q25] = cx(Q2, Q25)
  [Q3, Q25] = cx(Q3, Q25)
  [Q4, Q25] = cx(Q4, Q25)
  [Q2, Q26] = cx(Q2, Q26)
  [Q3, Q26] = cx(Q3, Q26)
  [Q4, Q26] = cx(Q4, Q26)
  [Q2, Q27] = cx(Q2, Q27)
  [Q3, Q27] = cx(Q3, Q27)
  [Q4, Q27] = cx(Q4, Q27)
  [Q2, Q28] = cx(Q2, Q28)
  [Q3, Q28] = cx(Q3, Q28)
  [Q4, Q28] = cx(Q4, Q28)
  [Q2, Q29] = cx(Q2, Q29)
  [Q3, Q29] = cx(Q3, Q29)
  [Q4, Q29] = cx(Q4, Q29)
  [Q5, Q24] = cx(Q5, Q24)
  [Q5, Q25] = cx(Q5, Q25)
  [Q5, Q26] = cx(Q5, Q26)
  [Q5, Q27] = cx(Q5, Q27)
  [Q5, Q28] = cx(Q5, Q28)
  [Q5, Q29] = cx(Q5, Q29)
  [Q6, Q24] = cx(Q6, Q24)
  [Q6, Q25] = cx(Q6, Q25)
  [Q6, Q26] = cx(Q6, Q26)
  [Q6, Q27] = cx(Q6, Q27)
  [Q6, Q28] = cx(Q6, Q28)
  [Q6, Q29] = cx(Q6, Q29)
  [Q7, Q24] = cx(Q7, Q24)
  [Q7, Q25] = cx(Q7, Q25)
  [Q7, Q26] = cx(Q7, Q26)
  [Q7, Q27] = cx(Q7, Q27)
  [Q7, Q28] = cx(Q7, Q28)
  [Q7, Q29] = cx(Q7, Q29)
  [Q8, Q24] = cx(Q8, Q24)
  [Q8, Q25] = cx(Q8, Q25)
  [Q8, Q26] = cx(Q8, Q26)
  [Q8, Q27] = cx(Q8, Q27)
  [Q8, Q28] = cx(Q8, Q28)
  [Q8, Q29] = cx(Q8, Q29)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
  [Q9, Q27] = cx(Q9, Q27)
  [Q10, Q27] = cx(Q10, Q27)
  [Q11, Q27] = cx(Q11, Q27)
  [Q12, Q27] = cx(Q12, Q27)
  [Q13, Q27] = cx(Q13, Q27)
  [Q14, Q27] = cx(Q14, Q27)
  [Q15, Q27] = cx(Q15, Q27)
  [Q16, Q27] = cx(Q16, Q27)
  [Q17, Q27] = cx(Q17, Q27)
  [Q18, Q27] = cx(Q18, Q27)
  [Q19, Q27] = cx(Q19, Q27)
  [Q20, Q27] = cx(Q20, Q27)
  [Q21, Q27] = cx(Q21, Q27)
  [Q22, Q27] = cx(Q22, Q27)
  [Q23, Q27] = cx(Q23, Q27)
  [Q24, Q27] = cx(Q24, Q27)
  [Q25, Q27] = cx(Q25, Q27)
  [Q26, Q27] = cx(Q26, Q27)
  [Q9, Q28] = cx(Q9, Q28)
  [Q10, Q28] = cx(Q10, Q28)
  [Q11, Q28] = cx(Q11, Q28)
  [Q12, Q28] = cx(Q12, Q28)
  [Q13, Q28] = cx(Q13, Q28)
  [Q14, Q28] = cx(Q14, Q28)
  [Q15, Q28] = cx(Q15, Q28)
  [Q16, Q28] = cx(Q16, Q28)
  [Q17, Q28] = cx(Q17, Q28)
  [Q18, Q28] = cx(Q18, Q28)
  [Q19, Q28] = cx(Q19, Q28)
  [Q20, Q28] = cx(Q20, Q28)
  [Q21, Q28] = cx(Q21, Q28)
  [Q22, Q28] = cx(Q22, Q28)
  [Q23, Q28] = cx(Q23, Q28)
  [Q24, Q28] = cx(Q24, Q28)
  [Q25, Q28] = cx(Q25, Q28)
  [Q26, Q28] = cx(Q26, Q28)
  [Q27, Q28] = cx(Q27, Q28)
  [Q9, Q29] = cx(Q9, Q29)
  [Q10, Q29] = cx(Q10, Q29)
  [Q11, Q29] = cx(Q11, Q29)
  [Q12, Q29] = cx(Q12, Q29)
  [Q13, Q29] = cx(Q13, Q29)
  [Q14, Q29] = cx(Q14, Q29)
  [Q15, Q29] = cx(Q15, Q29)
  [Q16, Q29] = cx(Q16, Q29)
  [Q17, Q29] = cx(Q17, Q29)
  [Q18, Q29] = cx(Q18, Q29)
  [Q19, Q29] = cx(Q19, Q29)
  [Q20, Q29] = cx(Q20, Q29)
  [Q21, Q29] = cx(Q21, Q29)
  [Q22, Q29] = cx(Q22, Q29)
  [Q23, Q29] = cx(Q23, Q29)
  [Q24, Q29] = cx(Q24, Q29)
  [Q25, Q29] = cx(Q25, Q29)
  [Q26, Q29] = cx(Q26, Q29)
  [Q27, Q29] = cx(Q27, Q29)
  [Q28, Q29] = cx(Q28, Q29)
}

Current Layout0: [10, 11, 14, 16, 4, 5, 6, 7, 8, 9, 28, 29, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 2, 3, 0, 1, Start fusing gates...
Reset qubit group map
(4, 4) (5, 5) (6, 6) (26, 2) (27, 3) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (25 gates): qubits [2, 3, 4, 5, 6], gates fusion, qubits [2, 3, 4, 5, 6], gates CircuitSeq {
  Q3 = u3(Q3, P127, P128, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  Q2 = u3(Q2, P125, P126, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  [Q2, Q3] = cx(Q2, Q3)
  Q4 = u3(Q4, P129, P130, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
  Q5 = u3(Q5, P131, P132, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  Q6 = u3(Q6, P133, P134, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
}

Gate 0: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 3
Matrix Multiplication (5, 1), mask 16
Gate 1: [0, 3, ]
Fusing gate 6(1) for rank 0
c,t 0,3
Fusing gate 6(1) for rank 1
c,t 0,3
Matrix Multiplication (5, 1), mask 16
Fusing gate 6(1) for rank 2
c,t 0,3
Fusing gate 6(1) for rank 3
c,t 0,3
Matrix Multiplication (5, 1), mask 16
Gate 2: [1, 3, ]
Fusing gate 6(1) for rank 0
c,t 1,3
Fusing gate 6(1) for rank 1
c,t 1,3
Fusing gate 6(1) for rank 2
c,t 1,3
Matrix Multiplication (5, 1), mask 16
Fusing gate 6(1) for rank 3
c,t 1,3
Matrix Multiplication (5, 1), mask 16
Gate 3: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 2
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 2
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 2
Matrix Multiplication (5, 1), mask 8
Gate 4: [0, 2, ]
Fusing gate 6(1) for rank 0
c,t 0,2
Fusing gate 6(1) for rank 1
c,t 0,2
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 0,2
Fusing gate 6(1) for rank 3
c,t 0,2
Matrix Multiplication (5, 1), mask 8
Gate 5: [1, 2, ]
Fusing gate 6(1) for rank 0
c,t 1,2
Fusing gate 6(1) for rank 1
c,t 1,2
Fusing gate 6(1) for rank 2
c,t 1,2
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 3
c,t 1,2
Matrix Multiplication (5, 1), mask 8
Gate 6: [2, 3, ]
Fusing gate 6(1) for rank 0
c,t 2,3
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 2,3
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 2,3
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 2,3
Matrix Multiplication (5, 2), mask 24
Gate 7: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 4
Matrix Multiplication (5, 1), mask 1
Gate 8: [0, 4, ]
Fusing gate 6(1) for rank 0
c,t 0,4
Fusing gate 6(1) for rank 1
c,t 0,4
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 2
c,t 0,4
Fusing gate 6(1) for rank 3
c,t 0,4
Matrix Multiplication (5, 1), mask 1
Gate 9: [1, 4, ]
Fusing gate 6(1) for rank 0
c,t 1,4
Fusing gate 6(1) for rank 1
c,t 1,4
Fusing gate 6(1) for rank 2
c,t 1,4
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 3
c,t 1,4
Matrix Multiplication (5, 1), mask 1
Gate 10: [2, 4, ]
Fusing gate 6(1) for rank 0
c,t 2,4
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 2,4
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 2,4
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 2,4
Matrix Multiplication (5, 2), mask 9
Gate 11: [3, 4, ]
Fusing gate 6(1) for rank 0
c,t 3,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 3,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 3,4
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 3,4
Matrix Multiplication (5, 2), mask 17
Gate 12: [5, ]
Fusing gate 23(0) for rank 0
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 5
Matrix Multiplication (5, 1), mask 2
Gate 13: [0, 5, ]
Fusing gate 6(1) for rank 0
c,t 0,5
Fusing gate 6(1) for rank 1
c,t 0,5
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 2
c,t 0,5
Fusing gate 6(1) for rank 3
c,t 0,5
Matrix Multiplication (5, 1), mask 2
Gate 14: [1, 5, ]
Fusing gate 6(1) for rank 0
c,t 1,5
Fusing gate 6(1) for rank 1
c,t 1,5
Fusing gate 6(1) for rank 2
c,t 1,5
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 3
c,t 1,5
Matrix Multiplication (5, 1), mask 2
Gate 15: [2, 5, ]
Fusing gate 6(1) for rank 0
c,t 2,5
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 2,5
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 2,5
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 2,5
Matrix Multiplication (5, 2), mask 10
Gate 16: [3, 5, ]
Fusing gate 6(1) for rank 0
c,t 3,5
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 3,5
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 3,5
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 3,5
Matrix Multiplication (5, 2), mask 18
Gate 17: [4, 5, ]
Fusing gate 6(1) for rank 0
c,t 4,5
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 4,5
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 4,5
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 4,5
Matrix Multiplication (5, 2), mask 3
Gate 18: [6, ]
Fusing gate 23(0) for rank 0
t 6
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 6
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 6
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 6
Matrix Multiplication (5, 1), mask 4
Gate 19: [0, 6, ]
Fusing gate 6(1) for rank 0
c,t 0,6
Fusing gate 6(1) for rank 1
c,t 0,6
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 2
c,t 0,6
Fusing gate 6(1) for rank 3
c,t 0,6
Matrix Multiplication (5, 1), mask 4
Gate 20: [1, 6, ]
Fusing gate 6(1) for rank 0
c,t 1,6
Fusing gate 6(1) for rank 1
c,t 1,6
Fusing gate 6(1) for rank 2
c,t 1,6
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 3
c,t 1,6
Matrix Multiplication (5, 1), mask 4
Gate 21: [2, 6, ]
Fusing gate 6(1) for rank 0
c,t 2,6
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 1
c,t 2,6
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 2
c,t 2,6
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 3
c,t 2,6
Matrix Multiplication (5, 2), mask 12
Gate 22: [3, 6, ]
Fusing gate 6(1) for rank 0
c,t 3,6
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 3,6
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 3,6
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 3,6
Matrix Multiplication (5, 2), mask 20
Gate 23: [4, 6, ]
Fusing gate 6(1) for rank 0
c,t 4,6
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 4,6
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 4,6
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 4,6
Matrix Multiplication (5, 2), mask 5
Gate 24: [5, 6, ]
Fusing gate 6(1) for rank 0
c,t 5,6
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 5,6
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 5,6
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 5,6
Matrix Multiplication (5, 2), mask 6
SHM Kernel Physical (77): [ 7,8,9,0,1,12,13]
shared_memory, qubits [7, 8, 9, 10, 11, 12, 13], gates CircuitSeq {
  Q7 = u3(Q7, P135, P136, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  Q8 = u3(Q8, P137, P138, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
  Q9 = u3(Q9, P179, P180, P2)
  [Q0, Q9] = cx(Q0, Q9)
  [Q1, Q9] = cx(Q1, Q9)
  [Q2, Q9] = cx(Q2, Q9)
  Q10 = u3(Q10, P139, P140, P2)
  [Q0, Q10] = cx(Q0, Q10)
  [Q1, Q10] = cx(Q1, Q10)
  [Q2, Q10] = cx(Q2, Q10)
  Q11 = u3(Q11, P141, P142, P2)
  [Q0, Q11] = cx(Q0, Q11)
  [Q1, Q11] = cx(Q1, Q11)
  [Q2, Q11] = cx(Q2, Q11)
  Q12 = u3(Q12, P143, P144, P2)
  [Q0, Q12] = cx(Q0, Q12)
  [Q1, Q12] = cx(Q1, Q12)
  [Q2, Q12] = cx(Q2, Q12)
  Q13 = u3(Q13, P145, P146, P2)
  [Q0, Q13] = cx(Q0, Q13)
  [Q1, Q13] = cx(Q1, Q13)
  [Q2, Q13] = cx(Q2, Q13)
  [Q3, Q9] = cx(Q3, Q9)
  [Q3, Q10] = cx(Q3, Q10)
  [Q3, Q11] = cx(Q3, Q11)
  [Q3, Q12] = cx(Q3, Q12)
  [Q3, Q13] = cx(Q3, Q13)
  [Q4, Q9] = cx(Q4, Q9)
  [Q4, Q10] = cx(Q4, Q10)
  [Q4, Q11] = cx(Q4, Q11)
  [Q4, Q12] = cx(Q4, Q12)
  [Q4, Q13] = cx(Q4, Q13)
  [Q5, Q9] = cx(Q5, Q9)
  [Q5, Q10] = cx(Q5, Q10)
  [Q5, Q11] = cx(Q5, Q11)
  [Q5, Q12] = cx(Q5, Q12)
  [Q5, Q13] = cx(Q5, Q13)
  [Q6, Q9] = cx(Q6, Q9)
  [Q6, Q10] = cx(Q6, Q10)
  [Q6, Q11] = cx(Q6, Q11)
  [Q6, Q12] = cx(Q6, Q12)
  [Q6, Q13] = cx(Q6, Q13)
  [Q7, Q9] = cx(Q7, Q9)
  [Q7, Q10] = cx(Q7, Q10)
  [Q7, Q11] = cx(Q7, Q11)
  [Q7, Q12] = cx(Q7, Q12)
  [Q7, Q13] = cx(Q7, Q13)
  [Q8, Q9] = cx(Q8, Q9)
  [Q8, Q10] = cx(Q8, Q10)
  [Q8, Q11] = cx(Q8, Q11)
  [Q8, Q12] = cx(Q8, Q12)
  [Q8, Q13] = cx(Q8, Q13)
  [Q9, Q10] = cx(Q9, Q10)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
}

Start fusing gates...
Reset qubit group map
(2, 14) (3, 16) (14, 15) (15, 17) (26, 2) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (16 gates): qubits [2, 14, 15, 16, 17], gates fusion, qubits [2, 14, 15, 16, 17], gates CircuitSeq {
  Q14 = u3(Q14, P147, P148, P2)
  [Q0, Q14] = cx(Q0, Q14)
  [Q1, Q14] = cx(Q1, Q14)
  [Q2, Q14] = cx(Q2, Q14)
  Q15 = u3(Q15, P149, P150, P2)
  [Q0, Q15] = cx(Q0, Q15)
  [Q1, Q15] = cx(Q1, Q15)
  [Q2, Q15] = cx(Q2, Q15)
  Q16 = u3(Q16, P151, P152, P2)
  [Q0, Q16] = cx(Q0, Q16)
  [Q1, Q16] = cx(Q1, Q16)
  [Q2, Q16] = cx(Q2, Q16)
  Q17 = u3(Q17, P153, P154, P2)
  [Q0, Q17] = cx(Q0, Q17)
  [Q1, Q17] = cx(Q1, Q17)
  [Q2, Q17] = cx(Q2, Q17)
}

Gate 0: [14, ]
Fusing gate 23(0) for rank 0
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 14
Matrix Multiplication (5, 1), mask 1
Gate 1: [0, 14, ]
Fusing gate 6(1) for rank 0
c,t 0,14
Fusing gate 6(1) for rank 1
c,t 0,14
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 2
c,t 0,14
Fusing gate 6(1) for rank 3
c,t 0,14
Matrix Multiplication (5, 1), mask 1
Gate 2: [1, 14, ]
Fusing gate 6(1) for rank 0
c,t 1,14
Fusing gate 6(1) for rank 1
c,t 1,14
Fusing gate 6(1) for rank 2
c,t 1,14
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 3
c,t 1,14
Matrix Multiplication (5, 1), mask 1
Gate 3: [2, 14, ]
Fusing gate 6(1) for rank 0
c,t 2,14
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 2,14
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 2,14
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 2,14
Matrix Multiplication (5, 2), mask 17
Gate 4: [15, ]
Fusing gate 23(0) for rank 0
t 15
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 15
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 15
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 15
Matrix Multiplication (5, 1), mask 4
Gate 5: [0, 15, ]
Fusing gate 6(1) for rank 0
c,t 0,15
Fusing gate 6(1) for rank 1
c,t 0,15
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 2
c,t 0,15
Fusing gate 6(1) for rank 3
c,t 0,15
Matrix Multiplication (5, 1), mask 4
Gate 6: [1, 15, ]
Fusing gate 6(1) for rank 0
c,t 1,15
Fusing gate 6(1) for rank 1
c,t 1,15
Fusing gate 6(1) for rank 2
c,t 1,15
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 3
c,t 1,15
Matrix Multiplication (5, 1), mask 4
Gate 7: [2, 15, ]
Fusing gate 6(1) for rank 0
c,t 2,15
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,15
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,15
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,15
Matrix Multiplication (5, 2), mask 20
Gate 8: [16, ]
Fusing gate 23(0) for rank 0
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 16
Matrix Multiplication (5, 1), mask 2
Gate 9: [0, 16, ]
Fusing gate 6(1) for rank 0
c,t 0,16
Fusing gate 6(1) for rank 1
c,t 0,16
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 2
c,t 0,16
Fusing gate 6(1) for rank 3
c,t 0,16
Matrix Multiplication (5, 1), mask 2
Gate 10: [1, 16, ]
Fusing gate 6(1) for rank 0
c,t 1,16
Fusing gate 6(1) for rank 1
c,t 1,16
Fusing gate 6(1) for rank 2
c,t 1,16
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 3
c,t 1,16
Matrix Multiplication (5, 1), mask 2
Gate 11: [2, 16, ]
Fusing gate 6(1) for rank 0
c,t 2,16
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 2,16
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 2,16
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 2,16
Matrix Multiplication (5, 2), mask 18
Gate 12: [17, ]
Fusing gate 23(0) for rank 0
t 17
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 17
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 17
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 17
Matrix Multiplication (5, 1), mask 8
Gate 13: [0, 17, ]
Fusing gate 6(1) for rank 0
c,t 0,17
Fusing gate 6(1) for rank 1
c,t 0,17
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 0,17
Fusing gate 6(1) for rank 3
c,t 0,17
Matrix Multiplication (5, 1), mask 8
Gate 14: [1, 17, ]
Fusing gate 6(1) for rank 0
c,t 1,17
Fusing gate 6(1) for rank 1
c,t 1,17
Fusing gate 6(1) for rank 2
c,t 1,17
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 3
c,t 1,17
Matrix Multiplication (5, 1), mask 8
Gate 15: [2, 17, ]
Fusing gate 6(1) for rank 0
c,t 2,17
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 2,17
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 2,17
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 2,17
Matrix Multiplication (5, 2), mask 24
Start fusing gates...
Reset qubit group map
(16, 18) (17, 19) (18, 20) (19, 21) (26, 2) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (16 gates): qubits [2, 18, 19, 20, 21], gates fusion, qubits [2, 18, 19, 20, 21], gates CircuitSeq {
  Q18 = u3(Q18, P155, P156, P2)
  [Q0, Q18] = cx(Q0, Q18)
  [Q1, Q18] = cx(Q1, Q18)
  [Q2, Q18] = cx(Q2, Q18)
  Q19 = u3(Q19, P157, P158, P2)
  [Q0, Q19] = cx(Q0, Q19)
  [Q1, Q19] = cx(Q1, Q19)
  [Q2, Q19] = cx(Q2, Q19)
  Q20 = u3(Q20, P159, P160, P2)
  [Q0, Q20] = cx(Q0, Q20)
  [Q1, Q20] = cx(Q1, Q20)
  [Q2, Q20] = cx(Q2, Q20)
  Q21 = u3(Q21, P161, P162, P2)
  [Q0, Q21] = cx(Q0, Q21)
  [Q1, Q21] = cx(Q1, Q21)
  [Q2, Q21] = cx(Q2, Q21)
}

Gate 0: [18, ]
Fusing gate 23(0) for rank 0
t 18
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 18
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 18
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 18
Matrix Multiplication (5, 1), mask 1
Gate 1: [0, 18, ]
Fusing gate 6(1) for rank 0
c,t 0,18
Fusing gate 6(1) for rank 1
c,t 0,18
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 2
c,t 0,18
Fusing gate 6(1) for rank 3
c,t 0,18
Matrix Multiplication (5, 1), mask 1
Gate 2: [1, 18, ]
Fusing gate 6(1) for rank 0
c,t 1,18
Fusing gate 6(1) for rank 1
c,t 1,18
Fusing gate 6(1) for rank 2
c,t 1,18
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 3
c,t 1,18
Matrix Multiplication (5, 1), mask 1
Gate 3: [2, 18, ]
Fusing gate 6(1) for rank 0
c,t 2,18
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 2,18
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 2,18
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 2,18
Matrix Multiplication (5, 2), mask 17
Gate 4: [19, ]
Fusing gate 23(0) for rank 0
t 19
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 19
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 19
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 19
Matrix Multiplication (5, 1), mask 2
Gate 5: [0, 19, ]
Fusing gate 6(1) for rank 0
c,t 0,19
Fusing gate 6(1) for rank 1
c,t 0,19
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 2
c,t 0,19
Fusing gate 6(1) for rank 3
c,t 0,19
Matrix Multiplication (5, 1), mask 2
Gate 6: [1, 19, ]
Fusing gate 6(1) for rank 0
c,t 1,19
Fusing gate 6(1) for rank 1
c,t 1,19
Fusing gate 6(1) for rank 2
c,t 1,19
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 3
c,t 1,19
Matrix Multiplication (5, 1), mask 2
Gate 7: [2, 19, ]
Fusing gate 6(1) for rank 0
c,t 2,19
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 2,19
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 2,19
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 2,19
Matrix Multiplication (5, 2), mask 18
Gate 8: [20, ]
Fusing gate 23(0) for rank 0
t 20
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 20
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 20
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 20
Matrix Multiplication (5, 1), mask 4
Gate 9: [0, 20, ]
Fusing gate 6(1) for rank 0
c,t 0,20
Fusing gate 6(1) for rank 1
c,t 0,20
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 2
c,t 0,20
Fusing gate 6(1) for rank 3
c,t 0,20
Matrix Multiplication (5, 1), mask 4
Gate 10: [1, 20, ]
Fusing gate 6(1) for rank 0
c,t 1,20
Fusing gate 6(1) for rank 1
c,t 1,20
Fusing gate 6(1) for rank 2
c,t 1,20
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 3
c,t 1,20
Matrix Multiplication (5, 1), mask 4
Gate 11: [2, 20, ]
Fusing gate 6(1) for rank 0
c,t 2,20
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,20
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,20
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,20
Matrix Multiplication (5, 2), mask 20
Gate 12: [21, ]
Fusing gate 23(0) for rank 0
t 21
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 21
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 21
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 21
Matrix Multiplication (5, 1), mask 8
Gate 13: [0, 21, ]
Fusing gate 6(1) for rank 0
c,t 0,21
Fusing gate 6(1) for rank 1
c,t 0,21
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 0,21
Fusing gate 6(1) for rank 3
c,t 0,21
Matrix Multiplication (5, 1), mask 8
Gate 14: [1, 21, ]
Fusing gate 6(1) for rank 0
c,t 1,21
Fusing gate 6(1) for rank 1
c,t 1,21
Fusing gate 6(1) for rank 2
c,t 1,21
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 3
c,t 1,21
Matrix Multiplication (5, 1), mask 8
Gate 15: [2, 21, ]
Fusing gate 6(1) for rank 0
c,t 2,21
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 2,21
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 2,21
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 2,21
Matrix Multiplication (5, 2), mask 24
Start fusing gates...
Reset qubit group map
(20, 22) (21, 23) (22, 24) (23, 25) (26, 2) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (16 gates): qubits [2, 22, 23, 24, 25], gates fusion, qubits [2, 22, 23, 24, 25], gates CircuitSeq {
  Q22 = u3(Q22, P163, P164, P2)
  [Q0, Q22] = cx(Q0, Q22)
  [Q1, Q22] = cx(Q1, Q22)
  [Q2, Q22] = cx(Q2, Q22)
  Q23 = u3(Q23, P165, P166, P2)
  [Q0, Q23] = cx(Q0, Q23)
  [Q1, Q23] = cx(Q1, Q23)
  [Q2, Q23] = cx(Q2, Q23)
  Q24 = u3(Q24, P167, P168, P2)
  [Q0, Q24] = cx(Q0, Q24)
  [Q1, Q24] = cx(Q1, Q24)
  [Q2, Q24] = cx(Q2, Q24)
  Q25 = u3(Q25, P169, P170, P2)
  [Q0, Q25] = cx(Q0, Q25)
  [Q1, Q25] = cx(Q1, Q25)
  [Q2, Q25] = cx(Q2, Q25)
}

Gate 0: [22, ]
Fusing gate 23(0) for rank 0
t 22
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 22
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 22
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 22
Matrix Multiplication (5, 1), mask 1
Gate 1: [0, 22, ]
Fusing gate 6(1) for rank 0
c,t 0,22
Fusing gate 6(1) for rank 1
c,t 0,22
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 2
c,t 0,22
Fusing gate 6(1) for rank 3
c,t 0,22
Matrix Multiplication (5, 1), mask 1
Gate 2: [1, 22, ]
Fusing gate 6(1) for rank 0
c,t 1,22
Fusing gate 6(1) for rank 1
c,t 1,22
Fusing gate 6(1) for rank 2
c,t 1,22
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 3
c,t 1,22
Matrix Multiplication (5, 1), mask 1
Gate 3: [2, 22, ]
Fusing gate 6(1) for rank 0
c,t 2,22
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 2,22
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 2,22
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 2,22
Matrix Multiplication (5, 2), mask 17
Gate 4: [23, ]
Fusing gate 23(0) for rank 0
t 23
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 23
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 23
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 23
Matrix Multiplication (5, 1), mask 2
Gate 5: [0, 23, ]
Fusing gate 6(1) for rank 0
c,t 0,23
Fusing gate 6(1) for rank 1
c,t 0,23
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 2
c,t 0,23
Fusing gate 6(1) for rank 3
c,t 0,23
Matrix Multiplication (5, 1), mask 2
Gate 6: [1, 23, ]
Fusing gate 6(1) for rank 0
c,t 1,23
Fusing gate 6(1) for rank 1
c,t 1,23
Fusing gate 6(1) for rank 2
c,t 1,23
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 3
c,t 1,23
Matrix Multiplication (5, 1), mask 2
Gate 7: [2, 23, ]
Fusing gate 6(1) for rank 0
c,t 2,23
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 2,23
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 2,23
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 2,23
Matrix Multiplication (5, 2), mask 18
Gate 8: [24, ]
Fusing gate 23(0) for rank 0
t 24
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 24
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 24
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 24
Matrix Multiplication (5, 1), mask 4
Gate 9: [0, 24, ]
Fusing gate 6(1) for rank 0
c,t 0,24
Fusing gate 6(1) for rank 1
c,t 0,24
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 2
c,t 0,24
Fusing gate 6(1) for rank 3
c,t 0,24
Matrix Multiplication (5, 1), mask 4
Gate 10: [1, 24, ]
Fusing gate 6(1) for rank 0
c,t 1,24
Fusing gate 6(1) for rank 1
c,t 1,24
Fusing gate 6(1) for rank 2
c,t 1,24
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 3
c,t 1,24
Matrix Multiplication (5, 1), mask 4
Gate 11: [2, 24, ]
Fusing gate 6(1) for rank 0
c,t 2,24
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,24
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,24
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,24
Matrix Multiplication (5, 2), mask 20
Gate 12: [25, ]
Fusing gate 23(0) for rank 0
t 25
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 25
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 25
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 25
Matrix Multiplication (5, 1), mask 8
Gate 13: [0, 25, ]
Fusing gate 6(1) for rank 0
c,t 0,25
Fusing gate 6(1) for rank 1
c,t 0,25
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 0,25
Fusing gate 6(1) for rank 3
c,t 0,25
Matrix Multiplication (5, 1), mask 8
Gate 14: [1, 25, ]
Fusing gate 6(1) for rank 0
c,t 1,25
Fusing gate 6(1) for rank 1
c,t 1,25
Fusing gate 6(1) for rank 2
c,t 1,25
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 3
c,t 1,25
Matrix Multiplication (5, 1), mask 8
Gate 15: [2, 25, ]
Fusing gate 6(1) for rank 0
c,t 2,25
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 2,25
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 2,25
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 2,25
Matrix Multiplication (5, 2), mask 24
SHM Kernel Physical (98): [ 2,14,3,15,16,17,18]
shared_memory, qubits [14, 15, 16, 17, 18, 19, 20], gates CircuitSeq {
  [Q3, Q14] = cx(Q3, Q14)
  [Q3, Q15] = cx(Q3, Q15)
  [Q3, Q16] = cx(Q3, Q16)
  [Q3, Q17] = cx(Q3, Q17)
  [Q3, Q18] = cx(Q3, Q18)
  [Q3, Q19] = cx(Q3, Q19)
  [Q3, Q20] = cx(Q3, Q20)
  [Q4, Q14] = cx(Q4, Q14)
  [Q4, Q15] = cx(Q4, Q15)
  [Q4, Q16] = cx(Q4, Q16)
  [Q4, Q17] = cx(Q4, Q17)
  [Q4, Q18] = cx(Q4, Q18)
  [Q4, Q19] = cx(Q4, Q19)
  [Q4, Q20] = cx(Q4, Q20)
  [Q5, Q14] = cx(Q5, Q14)
  [Q5, Q15] = cx(Q5, Q15)
  [Q5, Q16] = cx(Q5, Q16)
  [Q5, Q17] = cx(Q5, Q17)
  [Q5, Q18] = cx(Q5, Q18)
  [Q5, Q19] = cx(Q5, Q19)
  [Q5, Q20] = cx(Q5, Q20)
  [Q6, Q14] = cx(Q6, Q14)
  [Q6, Q15] = cx(Q6, Q15)
  [Q6, Q16] = cx(Q6, Q16)
  [Q6, Q17] = cx(Q6, Q17)
  [Q6, Q18] = cx(Q6, Q18)
  [Q6, Q19] = cx(Q6, Q19)
  [Q6, Q20] = cx(Q6, Q20)
  [Q7, Q14] = cx(Q7, Q14)
  [Q7, Q15] = cx(Q7, Q15)
  [Q7, Q16] = cx(Q7, Q16)
  [Q7, Q17] = cx(Q7, Q17)
  [Q7, Q18] = cx(Q7, Q18)
  [Q7, Q19] = cx(Q7, Q19)
  [Q7, Q20] = cx(Q7, Q20)
  [Q8, Q14] = cx(Q8, Q14)
  [Q8, Q15] = cx(Q8, Q15)
  [Q8, Q16] = cx(Q8, Q16)
  [Q8, Q17] = cx(Q8, Q17)
  [Q8, Q18] = cx(Q8, Q18)
  [Q8, Q19] = cx(Q8, Q19)
  [Q8, Q20] = cx(Q8, Q20)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
}

Start fusing gates...
Reset qubit group map
(10, 28) (11, 29) (24, 26) (25, 27) (26, 2) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (17 gates): qubits [2, 26, 27, 28, 29], gates fusion, qubits [2, 26, 27, 28, 29], gates CircuitSeq {
  Q26 = u3(Q26, P171, P172, P2)
  [Q0, Q26] = cx(Q0, Q26)
  [Q1, Q26] = cx(Q1, Q26)
  [Q2, Q26] = cx(Q2, Q26)
  Q27 = u3(Q27, P173, P174, P2)
  [Q0, Q27] = cx(Q0, Q27)
  [Q1, Q27] = cx(Q1, Q27)
  [Q2, Q27] = cx(Q2, Q27)
  Q28 = u3(Q28, P175, P176, P2)
  [Q0, Q28] = cx(Q0, Q28)
  [Q1, Q28] = cx(Q1, Q28)
  [Q2, Q28] = cx(Q2, Q28)
  Q29 = u3(Q29, P177, P178, P2)
  [Q0, Q29] = cx(Q0, Q29)
  [Q1, Q29] = cx(Q1, Q29)
  [Q2, Q29] = cx(Q2, Q29)
  Q2 = u3(Q2, P185, P186, P2)
}

Gate 0: [26, ]
Fusing gate 23(0) for rank 0
t 26
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 26
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 26
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 26
Matrix Multiplication (5, 1), mask 4
Gate 1: [0, 26, ]
Fusing gate 6(1) for rank 0
c,t 0,26
Fusing gate 6(1) for rank 1
c,t 0,26
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 2
c,t 0,26
Fusing gate 6(1) for rank 3
c,t 0,26
Matrix Multiplication (5, 1), mask 4
Gate 2: [1, 26, ]
Fusing gate 6(1) for rank 0
c,t 1,26
Fusing gate 6(1) for rank 1
c,t 1,26
Fusing gate 6(1) for rank 2
c,t 1,26
Matrix Multiplication (5, 1), mask 4
Fusing gate 6(1) for rank 3
c,t 1,26
Matrix Multiplication (5, 1), mask 4
Gate 3: [2, 26, ]
Fusing gate 6(1) for rank 0
c,t 2,26
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 2,26
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 2,26
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 2,26
Matrix Multiplication (5, 2), mask 20
Gate 4: [27, ]
Fusing gate 23(0) for rank 0
t 27
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 27
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 27
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 27
Matrix Multiplication (5, 1), mask 8
Gate 5: [0, 27, ]
Fusing gate 6(1) for rank 0
c,t 0,27
Fusing gate 6(1) for rank 1
c,t 0,27
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 0,27
Fusing gate 6(1) for rank 3
c,t 0,27
Matrix Multiplication (5, 1), mask 8
Gate 6: [1, 27, ]
Fusing gate 6(1) for rank 0
c,t 1,27
Fusing gate 6(1) for rank 1
c,t 1,27
Fusing gate 6(1) for rank 2
c,t 1,27
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 3
c,t 1,27
Matrix Multiplication (5, 1), mask 8
Gate 7: [2, 27, ]
Fusing gate 6(1) for rank 0
c,t 2,27
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 2,27
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 2,27
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 2,27
Matrix Multiplication (5, 2), mask 24
Gate 8: [28, ]
Fusing gate 23(0) for rank 0
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 28
Matrix Multiplication (5, 1), mask 1
Gate 9: [0, 28, ]
Fusing gate 6(1) for rank 0
c,t 0,28
Fusing gate 6(1) for rank 1
c,t 0,28
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 2
c,t 0,28
Fusing gate 6(1) for rank 3
c,t 0,28
Matrix Multiplication (5, 1), mask 1
Gate 10: [1, 28, ]
Fusing gate 6(1) for rank 0
c,t 1,28
Fusing gate 6(1) for rank 1
c,t 1,28
Fusing gate 6(1) for rank 2
c,t 1,28
Matrix Multiplication (5, 1), mask 1
Fusing gate 6(1) for rank 3
c,t 1,28
Matrix Multiplication (5, 1), mask 1
Gate 11: [2, 28, ]
Fusing gate 6(1) for rank 0
c,t 2,28
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 2,28
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 2,28
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 2,28
Matrix Multiplication (5, 2), mask 17
Gate 12: [29, ]
Fusing gate 23(0) for rank 0
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 29
Matrix Multiplication (5, 1), mask 2
Gate 13: [0, 29, ]
Fusing gate 6(1) for rank 0
c,t 0,29
Fusing gate 6(1) for rank 1
c,t 0,29
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 2
c,t 0,29
Fusing gate 6(1) for rank 3
c,t 0,29
Matrix Multiplication (5, 1), mask 2
Gate 14: [1, 29, ]
Fusing gate 6(1) for rank 0
c,t 1,29
Fusing gate 6(1) for rank 1
c,t 1,29
Fusing gate 6(1) for rank 2
c,t 1,29
Matrix Multiplication (5, 1), mask 2
Fusing gate 6(1) for rank 3
c,t 1,29
Matrix Multiplication (5, 1), mask 2
Gate 15: [2, 29, ]
Fusing gate 6(1) for rank 0
c,t 2,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 2,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 2,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 2,29
Matrix Multiplication (5, 2), mask 18
Gate 16: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 2
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 2
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 2
Matrix Multiplication (5, 1), mask 16
SHM Kernel Physical (147): [ 19,20,21,22,23,24,25]
shared_memory, qubits [21, 22, 23, 24, 25, 26, 27], gates CircuitSeq {
  [Q3, Q21] = cx(Q3, Q21)
  [Q3, Q22] = cx(Q3, Q22)
  [Q3, Q23] = cx(Q3, Q23)
  [Q3, Q24] = cx(Q3, Q24)
  [Q3, Q25] = cx(Q3, Q25)
  [Q3, Q26] = cx(Q3, Q26)
  [Q3, Q27] = cx(Q3, Q27)
  [Q4, Q21] = cx(Q4, Q21)
  [Q4, Q22] = cx(Q4, Q22)
  [Q4, Q23] = cx(Q4, Q23)
  [Q4, Q24] = cx(Q4, Q24)
  [Q4, Q25] = cx(Q4, Q25)
  [Q4, Q26] = cx(Q4, Q26)
  [Q4, Q27] = cx(Q4, Q27)
  [Q5, Q21] = cx(Q5, Q21)
  [Q5, Q22] = cx(Q5, Q22)
  [Q5, Q23] = cx(Q5, Q23)
  [Q5, Q24] = cx(Q5, Q24)
  [Q5, Q25] = cx(Q5, Q25)
  [Q5, Q26] = cx(Q5, Q26)
  [Q5, Q27] = cx(Q5, Q27)
  [Q6, Q21] = cx(Q6, Q21)
  [Q6, Q22] = cx(Q6, Q22)
  [Q6, Q23] = cx(Q6, Q23)
  [Q6, Q24] = cx(Q6, Q24)
  [Q6, Q25] = cx(Q6, Q25)
  [Q6, Q26] = cx(Q6, Q26)
  [Q6, Q27] = cx(Q6, Q27)
  [Q7, Q21] = cx(Q7, Q21)
  [Q7, Q22] = cx(Q7, Q22)
  [Q7, Q23] = cx(Q7, Q23)
  [Q7, Q24] = cx(Q7, Q24)
  [Q7, Q25] = cx(Q7, Q25)
  [Q7, Q26] = cx(Q7, Q26)
  [Q7, Q27] = cx(Q7, Q27)
  [Q8, Q21] = cx(Q8, Q21)
  [Q8, Q22] = cx(Q8, Q22)
  [Q8, Q23] = cx(Q8, Q23)
  [Q8, Q24] = cx(Q8, Q24)
  [Q8, Q25] = cx(Q8, Q25)
  [Q8, Q26] = cx(Q8, Q26)
  [Q8, Q27] = cx(Q8, Q27)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
  [Q9, Q27] = cx(Q9, Q27)
  [Q10, Q27] = cx(Q10, Q27)
  [Q11, Q27] = cx(Q11, Q27)
  [Q12, Q27] = cx(Q12, Q27)
  [Q13, Q27] = cx(Q13, Q27)
  [Q14, Q27] = cx(Q14, Q27)
  [Q15, Q27] = cx(Q15, Q27)
  [Q16, Q27] = cx(Q16, Q27)
  [Q17, Q27] = cx(Q17, Q27)
  [Q18, Q27] = cx(Q18, Q27)
  [Q19, Q27] = cx(Q19, Q27)
  [Q20, Q27] = cx(Q20, Q27)
  [Q21, Q27] = cx(Q21, Q27)
  [Q22, Q27] = cx(Q22, Q27)
  [Q23, Q27] = cx(Q23, Q27)
  [Q24, Q27] = cx(Q24, Q27)
  [Q25, Q27] = cx(Q25, Q27)
  [Q26, Q27] = cx(Q26, Q27)
}

Start fusing gates...
Reset qubit group map
(4, 4) (5, 5) (10, 28) (11, 29) (27, 3) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (9 gates): qubits [3, 4, 5, 28, 29], gates fusion, qubits [3, 4, 5, 28, 29], gates CircuitSeq {
  [Q3, Q28] = cx(Q3, Q28)
  [Q3, Q29] = cx(Q3, Q29)
  Q3 = u3(Q3, P187, P188, P2)
  [Q4, Q28] = cx(Q4, Q28)
  [Q4, Q29] = cx(Q4, Q29)
  Q4 = u3(Q4, P189, P190, P2)
  [Q5, Q28] = cx(Q5, Q28)
  [Q5, Q29] = cx(Q5, Q29)
  Q5 = u3(Q5, P191, P192, P2)
}

Gate 0: [3, 28, ]
Fusing gate 6(1) for rank 0
c,t 3,28
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 3,28
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 3,28
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 3,28
Matrix Multiplication (5, 2), mask 20
Gate 1: [3, 29, ]
Fusing gate 6(1) for rank 0
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 3,29
Matrix Multiplication (5, 2), mask 24
Gate 2: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 3
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 3
Matrix Multiplication (5, 1), mask 16
Gate 3: [4, 28, ]
Fusing gate 6(1) for rank 0
c,t 4,28
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 4,28
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 4,28
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 4,28
Matrix Multiplication (5, 2), mask 5
Gate 4: [4, 29, ]
Fusing gate 6(1) for rank 0
c,t 4,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 4,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 4,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 4,29
Matrix Multiplication (5, 2), mask 9
Gate 5: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 4
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 4
Matrix Multiplication (5, 1), mask 1
Gate 6: [5, 28, ]
Fusing gate 6(1) for rank 0
c,t 5,28
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 5,28
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 5,28
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 5,28
Matrix Multiplication (5, 2), mask 6
Gate 7: [5, 29, ]
Fusing gate 6(1) for rank 0
c,t 5,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 5,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 5,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 5,29
Matrix Multiplication (5, 2), mask 10
Gate 8: [5, ]
Fusing gate 23(0) for rank 0
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 5
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 5
Matrix Multiplication (5, 1), mask 2
SHM Kernel Physical (24): [ 6,19,20,21,22,10,11]
shared_memory, qubits [6, 21, 22, 23, 24, 28, 29], gates CircuitSeq {
  [Q6, Q28] = cx(Q6, Q28)
  [Q6, Q29] = cx(Q6, Q29)
  Q6 = u3(Q6, P193, P194, P2)
  [Q7, Q28] = cx(Q7, Q28)
  [Q8, Q28] = cx(Q8, Q28)
  [Q9, Q28] = cx(Q9, Q28)
  [Q10, Q28] = cx(Q10, Q28)
  [Q11, Q28] = cx(Q11, Q28)
  [Q12, Q28] = cx(Q12, Q28)
  [Q13, Q28] = cx(Q13, Q28)
  [Q14, Q28] = cx(Q14, Q28)
  [Q15, Q28] = cx(Q15, Q28)
  [Q16, Q28] = cx(Q16, Q28)
  [Q17, Q28] = cx(Q17, Q28)
  [Q18, Q28] = cx(Q18, Q28)
  [Q19, Q28] = cx(Q19, Q28)
  [Q20, Q28] = cx(Q20, Q28)
  [Q21, Q28] = cx(Q21, Q28)
  [Q22, Q28] = cx(Q22, Q28)
  [Q23, Q28] = cx(Q23, Q28)
  [Q24, Q28] = cx(Q24, Q28)
  [Q25, Q28] = cx(Q25, Q28)
  [Q26, Q28] = cx(Q26, Q28)
  [Q27, Q28] = cx(Q27, Q28)
}

SHM Kernel Physical (4): [ 7,8,23,24,25,10,11]
shared_memory, qubits [7, 8, 25, 26, 27, 28, 29], gates CircuitSeq {
  [Q7, Q29] = cx(Q7, Q29)
  Q7 = u3(Q7, P195, P196, P2)
  [Q8, Q29] = cx(Q8, Q29)
  Q8 = u3(Q8, P197, P198, P2)
}

Start fusing gates...
Reset qubit group map
(0, 10) (1, 11) (9, 9) (11, 29) (12, 12) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (8 gates): qubits [9, 10, 11, 12, 29], gates fusion, qubits [9, 10, 11, 12, 29], gates CircuitSeq {
  [Q9, Q29] = cx(Q9, Q29)
  Q9 = u3(Q9, P239, P240, P2)
  [Q10, Q29] = cx(Q10, Q29)
  Q10 = u3(Q10, P199, P200, P2)
  [Q11, Q29] = cx(Q11, Q29)
  Q11 = u3(Q11, P201, P202, P2)
  [Q12, Q29] = cx(Q12, Q29)
  Q12 = u3(Q12, P203, P204, P2)
}

Gate 0: [9, 29, ]
Fusing gate 6(1) for rank 0
c,t 9,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 1
c,t 9,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 2
c,t 9,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 3
c,t 9,29
Matrix Multiplication (5, 2), mask 12
Gate 1: [9, ]
Fusing gate 23(0) for rank 0
t 9
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 9
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 9
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 9
Matrix Multiplication (5, 1), mask 4
Gate 2: [10, 29, ]
Fusing gate 6(1) for rank 0
c,t 10,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 10,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 10,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 10,29
Matrix Multiplication (5, 2), mask 9
Gate 3: [10, ]
Fusing gate 23(0) for rank 0
t 10
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 10
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 10
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 10
Matrix Multiplication (5, 1), mask 1
Gate 4: [11, 29, ]
Fusing gate 6(1) for rank 0
c,t 11,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 11,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 11,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 11,29
Matrix Multiplication (5, 2), mask 10
Gate 5: [11, ]
Fusing gate 23(0) for rank 0
t 11
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 11
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 11
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 11
Matrix Multiplication (5, 1), mask 2
Gate 6: [12, 29, ]
Fusing gate 6(1) for rank 0
c,t 12,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 1
c,t 12,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 2
c,t 12,29
Matrix Multiplication (5, 2), mask 24
Fusing gate 6(1) for rank 3
c,t 12,29
Matrix Multiplication (5, 2), mask 24
Gate 7: [12, ]
Fusing gate 23(0) for rank 0
t 12
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 12
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 12
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 12
Matrix Multiplication (5, 1), mask 16
Start fusing gates...
Reset qubit group map
(2, 14) (3, 16) (11, 29) (13, 13) (14, 15) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (8 gates): qubits [13, 14, 15, 16, 29], gates fusion, qubits [13, 14, 15, 16, 29], gates CircuitSeq {
  [Q13, Q29] = cx(Q13, Q29)
  Q13 = u3(Q13, P205, P206, P2)
  [Q14, Q29] = cx(Q14, Q29)
  Q14 = u3(Q14, P207, P208, P2)
  [Q15, Q29] = cx(Q15, Q29)
  Q15 = u3(Q15, P209, P210, P2)
  [Q16, Q29] = cx(Q16, Q29)
  Q16 = u3(Q16, P211, P212, P2)
}

Gate 0: [13, 29, ]
Fusing gate 6(1) for rank 0
c,t 13,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 1
c,t 13,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 2
c,t 13,29
Matrix Multiplication (5, 2), mask 12
Fusing gate 6(1) for rank 3
c,t 13,29
Matrix Multiplication (5, 2), mask 12
Gate 1: [13, ]
Fusing gate 23(0) for rank 0
t 13
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 13
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 13
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 13
Matrix Multiplication (5, 1), mask 8
Gate 2: [14, 29, ]
Fusing gate 6(1) for rank 0
c,t 14,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 14,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 14,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 14,29
Matrix Multiplication (5, 2), mask 5
Gate 3: [14, ]
Fusing gate 23(0) for rank 0
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 14
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 14
Matrix Multiplication (5, 1), mask 1
Gate 4: [15, 29, ]
Fusing gate 6(1) for rank 0
c,t 15,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 15,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 15,29
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 15,29
Matrix Multiplication (5, 2), mask 20
Gate 5: [15, ]
Fusing gate 23(0) for rank 0
t 15
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 15
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 15
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 15
Matrix Multiplication (5, 1), mask 16
Gate 6: [16, 29, ]
Fusing gate 6(1) for rank 0
c,t 16,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 16,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 16,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 16,29
Matrix Multiplication (5, 2), mask 6
Gate 7: [16, ]
Fusing gate 23(0) for rank 0
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 16
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 16
Matrix Multiplication (5, 1), mask 2
Start fusing gates...
Reset qubit group map
(11, 29) (15, 17) (16, 18) (17, 19) (18, 20) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (8 gates): qubits [17, 18, 19, 20, 29], gates fusion, qubits [17, 18, 19, 20, 29], gates CircuitSeq {
  [Q17, Q29] = cx(Q17, Q29)
  Q17 = u3(Q17, P213, P214, P2)
  [Q18, Q29] = cx(Q18, Q29)
  Q18 = u3(Q18, P215, P216, P2)
  [Q19, Q29] = cx(Q19, Q29)
  Q19 = u3(Q19, P217, P218, P2)
  [Q20, Q29] = cx(Q20, Q29)
  Q20 = u3(Q20, P219, P220, P2)
}

Gate 0: [17, 29, ]
Fusing gate 6(1) for rank 0
c,t 17,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 17,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 17,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 17,29
Matrix Multiplication (5, 2), mask 3
Gate 1: [17, ]
Fusing gate 23(0) for rank 0
t 17
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 17
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 17
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 17
Matrix Multiplication (5, 1), mask 2
Gate 2: [18, 29, ]
Fusing gate 6(1) for rank 0
c,t 18,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 18,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 18,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 18,29
Matrix Multiplication (5, 2), mask 5
Gate 3: [18, ]
Fusing gate 23(0) for rank 0
t 18
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 18
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 18
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 18
Matrix Multiplication (5, 1), mask 4
Gate 4: [19, 29, ]
Fusing gate 6(1) for rank 0
c,t 19,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 19,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 19,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 19,29
Matrix Multiplication (5, 2), mask 9
Gate 5: [19, ]
Fusing gate 23(0) for rank 0
t 19
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 19
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 19
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 19
Matrix Multiplication (5, 1), mask 8
Gate 6: [20, 29, ]
Fusing gate 6(1) for rank 0
c,t 20,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 20,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 20,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 20,29
Matrix Multiplication (5, 2), mask 17
Gate 7: [20, ]
Fusing gate 23(0) for rank 0
t 20
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 20
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 20
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 20
Matrix Multiplication (5, 1), mask 16
Start fusing gates...
Reset qubit group map
(11, 29) (19, 21) (20, 22) (21, 23) (22, 24) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (8 gates): qubits [21, 22, 23, 24, 29], gates fusion, qubits [21, 22, 23, 24, 29], gates CircuitSeq {
  [Q21, Q29] = cx(Q21, Q29)
  Q21 = u3(Q21, P221, P222, P2)
  [Q22, Q29] = cx(Q22, Q29)
  Q22 = u3(Q22, P223, P224, P2)
  [Q23, Q29] = cx(Q23, Q29)
  Q23 = u3(Q23, P225, P226, P2)
  [Q24, Q29] = cx(Q24, Q29)
  Q24 = u3(Q24, P227, P228, P2)
}

Gate 0: [21, 29, ]
Fusing gate 6(1) for rank 0
c,t 21,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 21,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 21,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 21,29
Matrix Multiplication (5, 2), mask 3
Gate 1: [21, ]
Fusing gate 23(0) for rank 0
t 21
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 21
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 21
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 21
Matrix Multiplication (5, 1), mask 2
Gate 2: [22, 29, ]
Fusing gate 6(1) for rank 0
c,t 22,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 22,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 22,29
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 22,29
Matrix Multiplication (5, 2), mask 5
Gate 3: [22, ]
Fusing gate 23(0) for rank 0
t 22
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 22
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 22
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 22
Matrix Multiplication (5, 1), mask 4
Gate 4: [23, 29, ]
Fusing gate 6(1) for rank 0
c,t 23,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 1
c,t 23,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 2
c,t 23,29
Matrix Multiplication (5, 2), mask 9
Fusing gate 6(1) for rank 3
c,t 23,29
Matrix Multiplication (5, 2), mask 9
Gate 5: [23, ]
Fusing gate 23(0) for rank 0
t 23
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 23
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 23
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 23
Matrix Multiplication (5, 1), mask 8
Gate 6: [24, 29, ]
Fusing gate 6(1) for rank 0
c,t 24,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 1
c,t 24,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 2
c,t 24,29
Matrix Multiplication (5, 2), mask 17
Fusing gate 6(1) for rank 3
c,t 24,29
Matrix Multiplication (5, 2), mask 17
Gate 7: [24, ]
Fusing gate 23(0) for rank 0
t 24
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 24
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 24
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 24
Matrix Multiplication (5, 1), mask 16
Start fusing gates...
Reset qubit group map
(10, 28) (11, 29) (23, 25) (24, 26) (25, 27) current Layout: [10,11,14,16,4,5,6,7,8,9,28,29,12,13,15,17,18,19,20,21,22,23,24,25,26,27,2,3,0,1,]
Fusing Kernel (9 gates): qubits [25, 26, 27, 28, 29], gates fusion, qubits [25, 26, 27, 28, 29], gates CircuitSeq {
  [Q25, Q29] = cx(Q25, Q29)
  Q25 = u3(Q25, P229, P230, P2)
  [Q26, Q29] = cx(Q26, Q29)
  Q26 = u3(Q26, P231, P232, P2)
  [Q27, Q29] = cx(Q27, Q29)
  Q27 = u3(Q27, P233, P234, P2)
  [Q28, Q29] = cx(Q28, Q29)
  Q28 = u3(Q28, P235, P236, P2)
  Q29 = u3(Q29, P237, P238, P2)
}

Gate 0: [25, 29, ]
Fusing gate 6(1) for rank 0
c,t 25,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 25,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 25,29
Matrix Multiplication (5, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 25,29
Matrix Multiplication (5, 2), mask 6
Gate 1: [25, ]
Fusing gate 23(0) for rank 0
t 25
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 1
t 25
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 2
t 25
Matrix Multiplication (5, 1), mask 4
Fusing gate 23(0) for rank 3
t 25
Matrix Multiplication (5, 1), mask 4
Gate 2: [26, 29, ]
Fusing gate 6(1) for rank 0
c,t 26,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 26,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 26,29
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 26,29
Matrix Multiplication (5, 2), mask 10
Gate 3: [26, ]
Fusing gate 23(0) for rank 0
t 26
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 1
t 26
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 2
t 26
Matrix Multiplication (5, 1), mask 8
Fusing gate 23(0) for rank 3
t 26
Matrix Multiplication (5, 1), mask 8
Gate 4: [27, 29, ]
Fusing gate 6(1) for rank 0
c,t 27,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 1
c,t 27,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 2
c,t 27,29
Matrix Multiplication (5, 2), mask 18
Fusing gate 6(1) for rank 3
c,t 27,29
Matrix Multiplication (5, 2), mask 18
Gate 5: [27, ]
Fusing gate 23(0) for rank 0
t 27
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 1
t 27
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 2
t 27
Matrix Multiplication (5, 1), mask 16
Fusing gate 23(0) for rank 3
t 27
Matrix Multiplication (5, 1), mask 16
Gate 6: [28, 29, ]
Fusing gate 6(1) for rank 0
c,t 28,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 28,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 28,29
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 28,29
Matrix Multiplication (5, 2), mask 3
Gate 7: [28, ]
Fusing gate 23(0) for rank 0
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 1
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 2
t 28
Matrix Multiplication (5, 1), mask 1
Fusing gate 23(0) for rank 3
t 28
Matrix Multiplication (5, 1), mask 1
Gate 8: [29, ]
Fusing gate 23(0) for rank 0
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 1
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 2
t 29
Matrix Multiplication (5, 1), mask 2
Fusing gate 23(0) for rank 3
t 29
Matrix Multiplication (5, 1), mask 2
Compilation Done! 
Num Shuffles: 3
Num FUSION Kernel: 13
Num SHM Kernel: 14
Start Simulating...
[warmup] size total:1073741824
NCCL comm nRanks: 4, i am 0
I am 0, mask 3, I am sending to 0
I am 0, mask 3, I am sending to 1
I am 0, mask 3, I am sending to 2
I am 0, mask 3, I am sending to 3
NCCL comm nRanks: 4, i am 1
I am 1, mask 3, I am sending to 0
I am 1, mask 3, I am sending to 1
I am 1, mask 3, I am sending to 2
I am 1, mask 3, I am sending to 3
NCCL comm nRanks: 4, i am 2
I am 2, mask 3, I am sending to 0
I am 2, mask 3, I am sending to 1
I am 2, mask 3, I am sending to 2
I am 2, mask 3, I am sending to 3
NCCL comm nRanks: 4, i am 3
I am 3, mask 3, I am sending to 0
I am 3, mask 3, I am sending to 1
I am 3, mask 3, I am sending to 2
I am 3, mask 3, I am sending to 3
hello checking all2all
Init State Vectors!
Using NCCL for cross-node shuffle
My physical id:0, 3
NCCL comm nRanks: 4, i am 0
I am 0, mask 3, I am sending to 0
I am 0, mask 3, I am sending to 1
I am 0, mask 3, I am sending to 2
I am 0, mask 3, I am sending to 3
My physical id:1, 3
NCCL comm nRanks: 4, i am 1
I am 1, mask 3, I am sending to 0
I am 1, mask 3, I am sending to 1
I am 1, mask 3, I am sending to 2
I am 1, mask 3, I am sending to 3
My physical id:2, 3
NCCL comm nRanks: 4, i am 2
I am 2, mask 3, I am sending to 0
I am 2, mask 3, I am sending to 1
I am 2, mask 3, I am sending to 2
I am 2, mask 3, I am sending to 3
My physical id:3, 3
NCCL comm nRanks: 4, i am 3
I am 3, mask 3, I am sending to 0
I am 3, mask 3, I am sending to 1
I am 3, mask 3, I am sending to 2
I am 3, mask 3, I am sending to 3
[NCCL Rank 0] Shuffle Time: 23.26ms
[NCCL Rank 1] Shuffle Time: 21.90ms
[NCCL Rank 2] Shuffle Time: 18.25ms
[NCCL Rank 3] Shuffle Time: 18.27ms
Using NCCL for cross-node shuffle
My physical id:0, 3
NCCL comm nRanks: 4, i am 0
I am 0, mask 3, I am sending to 0
I am 0, mask 3, I am sending to 1
I am 0, mask 3, I am sending to 2
I am 0, mask 3, I am sending to 3
My physical id:1, 3
NCCL comm nRanks: 4, i am 1
I am 1, mask 3, I am sending to 0
I am 1, mask 3, I am sending to 1
I am 1, mask 3, I am sending to 2
I am 1, mask 3, I am sending to 3
My physical id:2, 3
NCCL comm nRanks: 4, i am 2
I am 2, mask 3, I am sending to 0
I am 2, mask 3, I am sending to 1
I am 2, mask 3, I am sending to 2
I am 2, mask 3, I am sending to 3
My physical id:3, 3
NCCL comm nRanks: 4, i am 3
I am 3, mask 3, I am sending to 0
I am 3, mask 3, I am sending to 1
I am 3, mask 3, I am sending to 2
I am 3, mask 3, I am sending to 3
[NCCL Rank 0] Shuffle Time: 34.93ms
[NCCL Rank 1] Shuffle Time: 18.06ms
[NCCL Rank 2] Shuffle Time: 23.55ms
[NCCL Rank 3] Shuffle Time: 15.33ms
Using NCCL for cross-node shuffle
My physical id:0, 3
NCCL comm nRanks: 4, i am 0
I am 0, mask 3, I am sending to 0
I am 0, mask 3, I am sending to 1
I am 0, mask 3, I am sending to 2
I am 0, mask 3, I am sending to 3
My physical id:1, 3
NCCL comm nRanks: 4, i am 1
I am 1, mask 3, I am sending to 0
I am 1, mask 3, I am sending to 1
I am 1, mask 3, I am sending to 2
I am 1, mask 3, I am sending to 3
My physical id:2, 3
NCCL comm nRanks: 4, i am 2
I am 2, mask 3, I am sending to 0
I am 2, mask 3, I am sending to 1
I am 2, mask 3, I am sending to 2
I am 2, mask 3, I am sending to 3
My physical id:3, 3
NCCL comm nRanks: 4, i am 3
I am 3, mask 3, I am sending to 0
I am 3, mask 3, I am sending to 1
I am 3, mask 3, I am sending to 2
I am 3, mask 3, I am sending to 3
[NCCL Rank 0] Shuffle Time: 31.51ms
[NCCL Rank 1] Shuffle Time: 23.26ms
[NCCL Rank 2] Shuffle Time: 23.25ms
[NCCL Rank 3] Shuffle Time: 15.23ms
Finish Simulating! Total: 13 FUSE Kernel, 14 SHM Kernel, 3 Shuffles.
[NCCL Rank 0] Total Simulation Time: 646.92ms
[NCCL Rank 1] Total Simulation Time: 649.40ms
[NCCL Rank 2] Total Simulation Time: 649.44ms
[NCCL Rank 3] Total Simulation Time: 652.33ms
[MPI Rank 0]: Shuffle 0 cost 20.42ms on average.
[MPI Rank 0]: Shuffle 1 cost 22.97ms on average.
[MPI Rank 0]: Shuffle 2 cost 23.31ms on average.
Solving ILP for num_qubits=30, num_local_qubits=28, num_global_qubits=0, num_iterations=1...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 2910
MIP  c387aa7b8a96433290d623d093dafa7d-pulp has 11132 rows; 2911 cols; 20895 nonzeros; 2910 integer variables
Presolving model
8251 rows, 30 cols, 1455 nonzeros
Presolve: Infeasible

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        -inf
  Gap               inf
  Solution status   -
  Timing            0.01 (total)
                    0.01 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     0 (total)
                    0 (strong br.)
                    0 (separation)
                    0 (heuristics)
Writing the solution to /tmp/c387aa7b8a96433290d623d093dafa7d-pulp.sol
Solving ILP for num_qubits=30, num_local_qubits=28, num_global_qubits=0, num_iterations=2...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 4455
MIP  112271fd45f843b3a3b1f397aab27241-pulp has 16774 rows; 4455 cols; 33720 nonzeros; 4455 integer variables
Presolving model
13832 rows, 1515 cols, 14100 nonzeros
5522 rows, 1455 cols, 11130 nonzeros
Presolve: Infeasible

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        -inf
  Gap               inf
  Solution status   -
  Timing            0.03 (total)
                    0.03 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     0 (total)
                    0 (strong br.)
                    0 (separation)
                    0 (heuristics)
Writing the solution to /tmp/112271fd45f843b3a3b1f397aab27241-pulp.sol
Solving ILP for num_qubits=30, num_local_qubits=28, num_global_qubits=0, num_iterations=3...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 6000
MIP  57eb5d3e455b4559a8c12b44b1b630f6-pulp has 22416 rows; 6000 cols; 46545 nonzeros; 6000 integer variables
Presolving model
19413 rows, 3000 cols, 26745 nonzeros
11163 rows, 1988 cols, 16481 nonzeros
Presolve: Infeasible

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        -inf
  Gap               inf
  Solution status   -
  Timing            0.16 (total)
                    0.16 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     0 (total)
                    0 (strong br.)
                    0 (separation)
                    0 (heuristics)
Writing the solution to /tmp/57eb5d3e455b4559a8c12b44b1b630f6-pulp.sol
Solving ILP for num_qubits=30, num_local_qubits=28, num_global_qubits=0, num_iterations=4...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 7545
MIP  2dd9cc7b049a4bdf9a185c5e4facef9e-pulp has 28058 rows; 7545 cols; 59370 nonzeros; 7545 integer variables
Presolving model
24994 rows, 4485 cols, 39390 nonzeros
16744 rows, 4485 cols, 36540 nonzeros
Objective function is integral with scale 1

Solving MIP model with:
   16744 rows
   4485 cols (4485 binary, 0 integer, 0 implied int., 0 continuous)
   36540 nonzeros

        Nodes      |    B&B Tree     |            Objective Bounds              |  Dynamic Constraints |       Work      
     Proc. InQueue |  Leaves   Expl. | BestBound       BestSol              Gap |   Cuts   InLp Confl. | LpIters     Time

         0       0         0   0.00%   0               inf                  inf        0      0      0         0     1.0s
         0       0         0   0.00%   0               inf                  inf        0      0      2      1701     1.2s
         0       0         0   0.00%   0               inf                  inf      323      1    237     26865    10.1s

22.7% inactive integer columns, restarting

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        inf
  Gap               inf
  Solution status   -
  Timing            11.07 (total)
                    1.91 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     26865 (total)
                    0 (strong br.)
                    2515 (separation)
                    22649 (heuristics)
Writing the solution to /tmp/2dd9cc7b049a4bdf9a185c5e4facef9e-pulp.sol
Solving ILP for num_qubits=30, num_local_qubits=28, num_global_qubits=0, num_iterations=5...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 9090
MIP  696b1f85169f4e4aafdefeb7f3d210d3-pulp has 33700 rows; 9090 cols; 72195 nonzeros; 9090 integer variables
Presolving model
30575 rows, 5970 cols, 52035 nonzeros
22325 rows, 5970 cols, 49185 nonzeros
Objective function is integral with scale 1

Solving MIP model with:
   22325 rows
   5970 cols (5970 binary, 0 integer, 0 implied int., 0 continuous)
   49185 nonzeros

        Nodes      |    B&B Tree     |            Objective Bounds              |  Dynamic Constraints |       Work      
     Proc. InQueue |  Leaves   Expl. | BestBound       BestSol              Gap |   Cuts   InLp Confl. | LpIters     Time

         0       0         0   0.00%   0               inf                  inf        0      0      0         0     1.2s
         0       0         0   0.00%   0               inf                  inf        0      0      2      1743     1.5s
         0       0         0   0.00%   0               inf                  inf      374      1      6      4365     8.0s
 L       0       0         0   0.00%   0               8                100.00%      374      1    218      4365    11.8s

17.0% inactive integer columns, restarting
Model after restart has 7727 rows, 2263 cols (2263 bin., 0 int., 0 impl., 0 cont.), and 16439 nonzeros

         0       0         0   0.00%   0               8                100.00%        1      0      0      9188    15.8s
         0       0         0   0.00%   0               8                100.00%        1      0      4     10352    15.9s
         0       0         0   0.00%   6               8                 25.00%      335    102      4     11827    21.0s

Solving report
  Status            Optimal
  Primal bound      8
  Dual bound        8
  Gap               0% (tolerance: 0.01%)
  Solution status   feasible
                    8 (objective)
                    0 (bound viol.)
                    3.50830475782e-14 (int. viol.)
                    0 (row viol.)
  Timing            21.01 (total)
                    5.15 (presolve)
                    0.00 (postsolve)
  Nodes             1
  LP iterations     11850 (total)
                    0 (strong br.)
                    4118 (separation)
                    4823 (heuristics)
Writing the solution to /tmp/696b1f85169f4e4aafdefeb7f3d210d3-pulp.sol
[MPI Rank 0]: Destroyed everthing!
Time Cost: 861635 us
Destroyed the simulator
