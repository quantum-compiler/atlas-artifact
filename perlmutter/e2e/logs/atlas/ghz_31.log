Num ranks: 2, myrank: 1
Num ranks: 2, myrank: 0
Solving ILP for num_qubits=31, num_local_qubits=28, num_global_qubits=1, num_iterations=1...
Solving ILP for num_qubits=31, num_local_qubits=28, num_global_qubits=1, num_iterations=1...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 124
MIP  5c03a3d51a7149d29097febf01f4a734-pulp has 217 rows; 125 cols; 461 nonzeros; 124 integer variables
Presolving model
155 rows, 62 cols, 155 nonzeros
Presolve: Infeasible

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        -inf
  Gap               inf
  Solution status   -
  Timing            0.00 (total)
                    0.00 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     0 (total)
                    0 (strong br.)
                    0 (separation)
                    0 (heuristics)
Writing the solution to /tmp/5c03a3d51a7149d29097febf01f4a734-pulp.sol
Solving ILP for num_qubits=31, num_local_qubits=28, num_global_qubits=1, num_iterations=2...
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 124
MIP  0a53af054cf4496a820a0b180310bf68-pulp has 217 rows; 125 cols; 461 nonzeros; 124 integer variables
Presolving model
155 rows, 62 cols, 155 nonzeros
Presolve: Infeasible

Solving report
  Status            Infeasible
  Primal bound      inf
  Dual bound        -inf
  Gap               inf
  Solution status   -
  Timing            0.00 (total)
                    0.00 (presolve)
                    0.00 (postsolve)
  Nodes             0
  LP iterations     0 (total)
                    0 (strong br.)
                    0 (separation)
                    0 (heuristics)
Writing the solution to /tmp/0a53af054cf4496a820a0b180310bf68-pulp.sol
Solving ILP for num_qubits=31, num_local_qubits=28, num_global_qubits=1, num_iterations=2...
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Available solvers: ['PULP_CBC_CMD', 'HiGHS_CMD']
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
Copyright (c) 2022 HiGHS under MIT licence terms
Number of BV entries in BOUNDS section is 279
Running HiGHS 1.5.0 [date: 2023-11-09, git hash: 8a114449a]
MIP  b96dba67263a471ebdd089a0d26cf695-pulp has 404 rows; 279 cols; 986 nonzeros; 279 integer variables
Copyright (c) 2022 HiGHS under MIT licence terms
Presolving model
Number of BV entries in BOUNDS section is 279
342 rows, 217 cols, 680 nonzeros
MIP  c0f3f152200448d184bcef3548f2d0f8-pulp has 404 rows; 279 cols; 986 nonzeros; 279 integer variables
218 rows, 215 cols, 614 nonzeros
Presolving model
342 rows, 217 cols, 680 nonzeros
218 rows, 215 cols, 614 nonzeros
188 rows, 191 cols, 530 nonzeros
Objective function is integral with scale 1

Solving MIP model with:
   188 rows
   191 cols (191 binary, 0 integer, 0 implied int., 0 continuous)
   530 nonzeros

        Nodes      |    B&B Tree     |            Objective Bounds              |  Dynamic Constraints |       Work      
     Proc. InQueue |  Leaves   Expl. | BestBound       BestSol              Gap |   Cuts   InLp Confl. | LpIters     Time

         0       0         0   0.00%   0               inf                  inf        0      0      0         0     0.0s
188 rows, 191 cols, 530 nonzeros
 R       0       0         0   0.00%   0               6                100.00%        0      0      0       104     0.0s
Objective function is integral with scale 1

Solving MIP model with:
   188 rows
   191 cols (191 binary, 0 integer, 0 implied int., 0 continuous)
   530 nonzeros

        Nodes      |    B&B Tree     |            Objective Bounds              |  Dynamic Constraints |       Work      
     Proc. InQueue |  Leaves   Expl. | BestBound       BestSol              Gap |   Cuts   InLp Confl. | LpIters     Time

         0       0         0   0.00%   0               inf                  inf        0      0      0         0     0.0s
 R       0       0         0   0.00%   0               6                100.00%        0      0      0       104     0.0s

Solving report
  Status            Optimal
  Primal bound      6
  Dual bound        6
  Gap               0% (tolerance: 0.01%)
  Solution status   feasible
                    6 (objective)
                    0 (bound viol.)
                    0 (int. viol.)
                    0 (row viol.)
  Timing            0.07 (total)
                    0.01 (presolve)
                    0.00 (postsolve)
  Nodes             1
  LP iterations     288 (total)
                    0 (strong br.)
                    184 (separation)
                    0 (heuristics)
Writing the solution to /tmp/b96dba67263a471ebdd089a0d26cf695-pulp.sol

Solving report
  Status            Optimal
  Primal bound      6
  Dual bound        6
  Gap               0% (tolerance: 0.01%)
  Solution status   feasible
                    6 (objective)
                    0 (bound viol.)
                    0 (int. viol.)
                    0 (row viol.)
  Timing            0.07 (total)
                    0.01 (presolve)
                    0.00 (postsolve)
  Nodes             1
  LP iterations     288 (total)
                    0 (strong br.)
                    184 (separation)
                    0 (heuristics)
Writing the solution to /tmp/c0f3f152200448d184bcef3548f2d0f8-pulp.sol
Computed and cached schedule in 3.94 seconds.
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 24, 27, 23, Start fusing gates...
Reset qubit group map
(25, 28) (26, 29) (27, 30) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,28,29,30,24,27,23,]
Fusing Kernel (3 gates): qubits [28, 29, 30], gates fusion, qubits [28, 29, 30], gates CircuitSeq {
  Q30 = h(Q30)
  [Q30, Q29] = cx(Q30, Q29)
  [Q29, Q28] = cx(Q29, Q28)
}

Gate 0: [30, ]
Fusing gate 0(0) for rank 4
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 5
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 6
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 7
t 30
Matrix Multiplication (3, 1), mask 4
Gate 1: [30, 29, ]
Fusing gate 6(1) for rank 4
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 5
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 6
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 7
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Gate 2: [29, 28, ]
Fusing gate 6(1) for rank 4
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 5
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 6
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 7
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 24, 27, 23, 28, 30, 29, Start fusing gates...
Reset qubit group map
(23, 25) (24, 26) (25, 24) (26, 27) (27, 23) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,24,27,23,28,30,29,]
Fusing Kernel (5 gates): qubits [23, 24, 25, 26, 27], gates fusion, qubits [23, 24, 25, 26, 27], gates CircuitSeq {
  [Q28, Q27] = cx(Q28, Q27)
  [Q27, Q26] = cx(Q27, Q26)
  [Q26, Q25] = cx(Q26, Q25)
  [Q25, Q24] = cx(Q25, Q24)
  [Q24, Q23] = cx(Q24, Q23)
}

Gate 0: [28, 27, ]
Fusing gate 6(1) for rank 4
c,t 28,27
Fusing gate 6(1) for rank 5
c,t 28,27
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 6
c,t 28,27
Fusing gate 6(1) for rank 7
c,t 28,27
Matrix Multiplication (5, 1), mask 8
Gate 1: [27, 26, ]
Fusing gate 6(1) for rank 4
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 5
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 6
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 7
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Gate 2: [26, 25, ]
Fusing gate 6(1) for rank 4
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 5
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 6
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 7
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Gate 3: [25, 24, ]
Fusing gate 6(1) for rank 4
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 5
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 6
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 7
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Gate 4: [24, 23, ]
Fusing gate 6(1) for rank 4
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 5
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 6
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 7
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Computed and cached schedule in 3.944 seconds.
SHM Kernel Physical (6): [ 17,18,19,20,21,22]
shared_memory, qubits [17, 18, 19, 20, 21, 22], gates CircuitSeq {
  [Q23, Q22] = cx(Q23, Q22)
  [Q22, Q21] = cx(Q22, Q21)
  [Q21, Q20] = cx(Q21, Q20)
  [Q20, Q19] = cx(Q20, Q19)
  [Q19, Q18] = cx(Q19, Q18)
  [Q18, Q17] = cx(Q18, Q17)
}

SHM Kernel Physical (7): [ 10,11,12,13,14,15,16]
shared_memory, qubits [10, 11, 12, 13, 14, 15, 16], gates CircuitSeq {
  [Q17, Q16] = cx(Q17, Q16)
  [Q16, Q15] = cx(Q16, Q15)
  [Q15, Q14] = cx(Q15, Q14)
  [Q14, Q13] = cx(Q14, Q13)
  [Q13, Q12] = cx(Q13, Q12)
  [Q12, Q11] = cx(Q12, Q11)
  [Q11, Q10] = cx(Q11, Q10)
}

Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 24, 27, 23, Start fusing gates...
Reset qubit group map
SHM Kernel Physical (10): [ 0,1,2,3,4,5,6,7,8,9]
shared_memory, qubits [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], gates CircuitSeq {
  [Q10, Q9] = cx(Q10, Q9)
  [Q9, Q8] = cx(Q9, Q8)
  [Q8, Q7] = cx(Q8, Q7)
  [Q7, Q6] = cx(Q7, Q6)
  [Q6, Q5] = cx(Q6, Q5)
  [Q5, Q4] = cx(Q5, Q4)
  [Q4, Q3] = cx(Q4, Q3)
  [Q3, Q2] = cx(Q3, Q2)
  [Q2, Q1] = cx(Q2, Q1)
  [Q1, Q0] = cx(Q1, Q0)
}

(25, 28) (26, 29) (27, 30) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,28,29,30,24,27,23,]
Compilation Done! 
Num Shuffles: 1
Num FUSION Kernel: 2
Fusing Kernel (3 gates): qubits [28, 29, 30], gates fusion, qubits [28, 29, 30], gates CircuitSeq {
  Q30 = h(Q30)
  [Q30, Q29] = cx(Q30, Q29)
  [Q29, Q28] = cx(Q29, Q28)
}

Num SHM Kernel: 3
Start Simulating...
Gate 0: [30, ]
Fusing gate 0(0) for rank 0
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 1
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 2
t 30
Matrix Multiplication (3, 1), mask 4
Fusing gate 0(0) for rank 3
t 30
Matrix Multiplication (3, 1), mask 4
Gate 1: [30, 29, ]
Fusing gate 6(1) for rank 0
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 1
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 2
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Fusing gate 6(1) for rank 3
c,t 30,29
Matrix Multiplication (3, 2), mask 6
Gate 2: [29, 28, ]
Fusing gate 6(1) for rank 0
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 29,28
Matrix Multiplication (3, 2), mask 3
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 24, 27, 23, 28, 30, 29, Start fusing gates...
Reset qubit group map
(23, 25) (24, 26) (25, 24) (26, 27) (27, 23) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,24,27,23,28,30,29,]
Fusing Kernel (5 gates): qubits [23, 24, 25, 26, 27], gates fusion, qubits [23, 24, 25, 26, 27], gates CircuitSeq {
  [Q28, Q27] = cx(Q28, Q27)
  [Q27, Q26] = cx(Q27, Q26)
  [Q26, Q25] = cx(Q26, Q25)
  [Q25, Q24] = cx(Q25, Q24)
  [Q24, Q23] = cx(Q24, Q23)
}

Gate 0: [28, 27, ]
Fusing gate 6(1) for rank 0
c,t 28,27
Fusing gate 6(1) for rank 1
c,t 28,27
Matrix Multiplication (5, 1), mask 8
Fusing gate 6(1) for rank 2
c,t 28,27
Fusing gate 6(1) for rank 3
c,t 28,27
Matrix Multiplication (5, 1), mask 8
Gate 1: [27, 26, ]
Fusing gate 6(1) for rank 0
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 1
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 2
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Fusing gate 6(1) for rank 3
c,t 27,26
Matrix Multiplication (5, 2), mask 10
Gate 2: [26, 25, ]
Fusing gate 6(1) for rank 0
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 1
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 2
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Fusing gate 6(1) for rank 3
c,t 26,25
Matrix Multiplication (5, 2), mask 3
Gate 3: [25, 24, ]
Fusing gate 6(1) for rank 0
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 1
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 2
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Fusing gate 6(1) for rank 3
c,t 25,24
Matrix Multiplication (5, 2), mask 5
Gate 4: [24, 23, ]
Fusing gate 6(1) for rank 0
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 1
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 2
c,t 24,23
Matrix Multiplication (5, 2), mask 20
Fusing gate 6(1) for rank 3
c,t 24,23
Matrix Multiplication (5, 2), mask 20
SHM Kernel Physical (6): [ 17,18,19,20,21,22]
shared_memory, qubits [17, 18, 19, 20, 21, 22], gates CircuitSeq {
  [Q23, Q22] = cx(Q23, Q22)
  [Q22, Q21] = cx(Q22, Q21)
  [Q21, Q20] = cx(Q21, Q20)
  [Q20, Q19] = cx(Q20, Q19)
  [Q19, Q18] = cx(Q19, Q18)
  [Q18, Q17] = cx(Q18, Q17)
}

SHM Kernel Physical (7): [ 10,11,12,13,14,15,16]
shared_memory, qubits [10, 11, 12, 13, 14, 15, 16], gates CircuitSeq {
  [Q17, Q16] = cx(Q17, Q16)
  [Q16, Q15] = cx(Q16, Q15)
  [Q15, Q14] = cx(Q15, Q14)
  [Q14, Q13] = cx(Q14, Q13)
  [Q13, Q12] = cx(Q13, Q12)
  [Q12, Q11] = cx(Q12, Q11)
  [Q11, Q10] = cx(Q11, Q10)
}

SHM Kernel Physical (10): [ 0,1,2,3,4,5,6,7,8,9]
shared_memory, qubits [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], gates CircuitSeq {
  [Q10, Q9] = cx(Q10, Q9)
  [Q9, Q8] = cx(Q9, Q8)
  [Q8, Q7] = cx(Q8, Q7)
  [Q7, Q6] = cx(Q7, Q6)
  [Q6, Q5] = cx(Q6, Q5)
  [Q5, Q4] = cx(Q5, Q4)
  [Q4, Q3] = cx(Q4, Q3)
  [Q3, Q2] = cx(Q3, Q2)
  [Q2, Q1] = cx(Q2, Q1)
  [Q1, Q0] = cx(Q1, Q0)
}

Compilation Done! 
Num Shuffles: 1
Num FUSION Kernel: 2
Num SHM Kernel: 3
Start Simulating...
[warmup] size total:536870912
[warmup] size total:536870912
NCCL comm nRanks: 8, i am 0
I am 0, mask 7, I am sending to 0
I am 0, mask 7, I am sending to 1
I am 0, mask 7, I am sending to 2
I am 0, mask 7, I am sending to 3
I am 0, mask 7, I am sending to 4
I am 0, mask 7, I am sending to 5
I am 0, mask 7, I am sending to 6
I am 0, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 1
I am 1, mask 7, I am sending to 0
I am 1, mask 7, I am sending to 1
I am 1, mask 7, I am sending to 2
I am 1, mask 7, I am sending to 3
I am 1, mask 7, I am sending to 4
I am 1, mask 7, I am sending to 5
I am 1, mask 7, I am sending to 6
I am 1, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 2
I am 2, mask 7, I am sending to 0
I am 2, mask 7, I am sending to 1
I am 2, mask 7, I am sending to 2
I am 2, mask 7, I am sending to 3
I am 2, mask 7, I am sending to 4
I am 2, mask 7, I am sending to 5
I am 2, mask 7, I am sending to 6
I am 2, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 3
I am 3, mask 7, I am sending to 0
I am 3, mask 7, I am sending to 1
I am 3, mask 7, I am sending to 2
I am 3, mask 7, I am sending to 3
I am 3, mask 7, I am sending to 4
I am 3, mask 7, I am sending to 5
I am 3, mask 7, I am sending to 6
I am 3, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 4
I am 4, mask 7, I am sending to 0
I am 4, mask 7, I am sending to 1
I am 4, mask 7, I am sending to 2
I am 4, mask 7, I am sending to 3
I am 4, mask 7, I am sending to 4
I am 4, mask 7, I am sending to 5
I am 4, mask 7, I am sending to 6
I am 4, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 5
I am 5, mask 7, I am sending to 0
I am 5, mask 7, I am sending to 1
I am 5, mask 7, I am sending to 2
I am 5, mask 7, I am sending to 3
I am 5, mask 7, I am sending to 4
I am 5, mask 7, I am sending to 5
I am 5, mask 7, I am sending to 6
I am 5, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 6
I am 6, mask 7, I am sending to 0
I am 6, mask 7, I am sending to 1
I am 6, mask 7, I am sending to 2
I am 6, mask 7, I am sending to 3
I am 6, mask 7, I am sending to 4
I am 6, mask 7, I am sending to 5
I am 6, mask 7, I am sending to 6
I am 6, mask 7, I am sending to 7
NCCL comm nRanks: 8, i am 7
I am 7, mask 7, I am sending to 0
I am 7, mask 7, I am sending to 1
I am 7, mask 7, I am sending to 2
I am 7, mask 7, I am sending to 3
I am 7, mask 7, I am sending to 4
I am 7, mask 7, I am sending to 5
I am 7, mask 7, I am sending to 6
I am 7, mask 7, I am sending to 7
hello checking all2all
hello checking all2all
Init State Vectors!
Using NCCL for cross-node shuffle
Init State Vectors!
Using NCCL for cross-node shuffle
My physical id:4, 7
NCCL comm nRanks: 8, i am 4
I am 4, mask 7, I am sending to 0
I am 4, mask 7, I am sending to 1
I am 4, mask 7, I am sending to 2
I am 4, mask 7, I am sending to 3
I am 4, mask 7, I am sending to 4
I am 4, mask 7, I am sending to 5
I am 4, mask 7, I am sending to 6
I am 4, mask 7, I am sending to 7
My physical id:5, 7
NCCL comm nRanks: 8, i am 5
I am 5, mask 7, I am sending to 0
I am 5, mask 7, I am sending to 1
I am 5, mask 7, I am sending to 2
I am 5, mask 7, I am sending to 3
I am 5, mask 7, I am sending to 4
I am 5, mask 7, I am sending to 5
I am 5, mask 7, I am sending to 6
I am 5, mask 7, I am sending to 7
My physical id:6, 7
NCCL comm nRanks: 8, i am 6
I am 6, mask 7, I am sending to 0
I am 6, mask 7, I am sending to 1
I am 6, mask 7, I am sending to 2
I am 6, mask 7, I am sending to 3
I am 6, mask 7, I am sending to 4
I am 6, mask 7, I am sending to 5
I am 6, mask 7, I am sending to 6
I am 6, mask 7, I am sending to 7
My physical id:7, 7
NCCL comm nRanks: 8, i am 7
I am 7, mask 7, I am sending to 0
I am 7, mask 7, I am sending to 1
I am 7, mask 7, I am sending to 2
I am 7, mask 7, I am sending to 3
I am 7, mask 7, I am sending to 4
I am 7, mask 7, I am sending to 5
I am 7, mask 7, I am sending to 6
I am 7, mask 7, I am sending to 7
My physical id:0, 7
NCCL comm nRanks: 8, i am 0
I am 0, mask 7, I am sending to 0
I am 0, mask 7, I am sending to 1
I am 0, mask 7, I am sending to 2
I am 0, mask 7, I am sending to 3
I am 0, mask 7, I am sending to 4
I am 0, mask 7, I am sending to 5
I am 0, mask 7, I am sending to 6
I am 0, mask 7, I am sending to 7
My physical id:1, 7
NCCL comm nRanks: 8, i am 1
I am 1, mask 7, I am sending to 0
I am 1, mask 7, I am sending to 1
I am 1, mask 7, I am sending to 2
I am 1, mask 7, I am sending to 3
I am 1, mask 7, I am sending to 4
I am 1, mask 7, I am sending to 5
I am 1, mask 7, I am sending to 6
I am 1, mask 7, I am sending to 7
My physical id:2, 7
NCCL comm nRanks: 8, i am 2
I am 2, mask 7, I am sending to 0
I am 2, mask 7, I am sending to 1
I am 2, mask 7, I am sending to 2
I am 2, mask 7, I am sending to 3
I am 2, mask 7, I am sending to 4
I am 2, mask 7, I am sending to 5
I am 2, mask 7, I am sending to 6
I am 2, mask 7, I am sending to 7
My physical id:3, 7
NCCL comm nRanks: 8, i am 3
I am 3, mask 7, I am sending to 0
I am 3, mask 7, I am sending to 1
I am 3, mask 7, I am sending to 2
I am 3, mask 7, I am sending to 3
I am 3, mask 7, I am sending to 4
I am 3, mask 7, I am sending to 5
I am 3, mask 7, I am sending to 6
I am 3, mask 7, I am sending to 7
[NCCL Rank 0] Shuffle Time: 127.91ms
[NCCL Rank 1] Shuffle Time: 129.31ms
[NCCL Rank 2] Shuffle Time: 130.92ms
[NCCL Rank 3] Shuffle Time: 130.93ms
[NCCL Rank 4] Shuffle Time: 151.75ms
[NCCL Rank 5] Shuffle Time: 151.77ms
[NCCL Rank 6] Shuffle Time: 151.77ms
[NCCL Rank 7] Shuffle Time: 151.78ms
Finish Simulating! Total: 2 FUSE Kernel, 3 SHM Kernel, 1 Shuffles.
Finish Simulating! Total: 2 FUSE Kernel, 3 SHM Kernel, 1 Shuffles.
[NCCL Rank 0] Total Simulation Time: 205.25ms
[NCCL Rank 4] Total Simulation Time: 214.35ms
[NCCL Rank 1] Total Simulation Time: 205.66ms
[NCCL Rank 5] Total Simulation Time: 214.64ms
[NCCL Rank 2] Total Simulation Time: 209.00ms
[NCCL Rank 3] Total Simulation Time: 209.01ms
[MPI Rank 0]: Shuffle 0 cost 129.77ms on average.
[NCCL Rank 6] Total Simulation Time: 217.90ms
[NCCL Rank 7] Total Simulation Time: 217.91ms
[MPI Rank 0]: Destroyed everthing!
Time Cost: 334688 us
Destroyed the simulator
[MPI Rank 1]: Destroyed everthing!
Time Cost: 369423 us
Destroyed the simulator
