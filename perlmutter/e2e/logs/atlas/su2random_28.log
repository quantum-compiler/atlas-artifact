Num ranks: 1, myrank: 0
Computed and cached schedule in 3.537 seconds.
Current Layout0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, Start fusing gates...
Reset qubit group map
(0, 0) (1, 1) (2, 2) (3, 3) (4, 4) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (15 gates): qubits [0, 1, 2, 3, 4], gates fusion, qubits [0, 1, 2, 3, 4], gates CircuitSeq {
  Q1 = u3(Q1, P3, P4, P2)
  Q0 = u3(Q0, P0, P1, P2)
  [Q0, Q1] = cx(Q0, Q1)
  Q2 = u3(Q2, P5, P6, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  Q3 = u3(Q3, P7, P8, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  [Q2, Q3] = cx(Q2, Q3)
  Q4 = u3(Q4, P9, P10, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
}

Gate 0: [1, ]
Fusing gate 23(0) for rank 0
t 1
Matrix Multiplication (5, 1), mask 2
Gate 1: [0, ]
Fusing gate 23(0) for rank 0
t 0
Matrix Multiplication (5, 1), mask 1
Gate 2: [0, 1, ]
Fusing gate 6(1) for rank 0
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Gate 3: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 4
Gate 4: [0, 2, ]
Fusing gate 6(1) for rank 0
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Gate 5: [1, 2, ]
Fusing gate 6(1) for rank 0
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Gate 6: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 8
Gate 7: [0, 3, ]
Fusing gate 6(1) for rank 0
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Gate 8: [1, 3, ]
Fusing gate 6(1) for rank 0
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Gate 9: [2, 3, ]
Fusing gate 6(1) for rank 0
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Gate 10: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 16
Gate 11: [0, 4, ]
Fusing gate 6(1) for rank 0
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Gate 12: [1, 4, ]
Fusing gate 6(1) for rank 0
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Gate 13: [2, 4, ]
Fusing gate 6(1) for rank 0
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Gate 14: [3, 4, ]
Fusing gate 6(1) for rank 0
c,t 3,4
Matrix Multiplication (5, 2), mask 24
SHM Kernel Physical (63): [ 5,6,7,8,9,10,11]
shared_memory, qubits [5, 6, 7, 8, 9, 10, 11], gates CircuitSeq {
  Q5 = u3(Q5, P11, P12, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  Q6 = u3(Q6, P13, P14, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
  Q7 = u3(Q7, P15, P16, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  Q8 = u3(Q8, P17, P18, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
  Q9 = u3(Q9, P19, P20, P2)
  [Q0, Q9] = cx(Q0, Q9)
  [Q1, Q9] = cx(Q1, Q9)
  [Q2, Q9] = cx(Q2, Q9)
  [Q3, Q9] = cx(Q3, Q9)
  [Q4, Q9] = cx(Q4, Q9)
  [Q5, Q9] = cx(Q5, Q9)
  [Q6, Q9] = cx(Q6, Q9)
  [Q7, Q9] = cx(Q7, Q9)
  [Q8, Q9] = cx(Q8, Q9)
  Q10 = u3(Q10, P21, P22, P2)
  [Q0, Q10] = cx(Q0, Q10)
  [Q1, Q10] = cx(Q1, Q10)
  [Q2, Q10] = cx(Q2, Q10)
  [Q3, Q10] = cx(Q3, Q10)
  [Q4, Q10] = cx(Q4, Q10)
  [Q5, Q10] = cx(Q5, Q10)
  [Q6, Q10] = cx(Q6, Q10)
  [Q7, Q10] = cx(Q7, Q10)
  [Q8, Q10] = cx(Q8, Q10)
  [Q9, Q10] = cx(Q9, Q10)
  Q11 = u3(Q11, P23, P24, P2)
  [Q0, Q11] = cx(Q0, Q11)
  [Q1, Q11] = cx(Q1, Q11)
  [Q2, Q11] = cx(Q2, Q11)
  [Q3, Q11] = cx(Q3, Q11)
  [Q4, Q11] = cx(Q4, Q11)
  [Q5, Q11] = cx(Q5, Q11)
  [Q6, Q11] = cx(Q6, Q11)
  [Q7, Q11] = cx(Q7, Q11)
  [Q8, Q11] = cx(Q8, Q11)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
}

SHM Kernel Physical (112): [ 12,13,14,15,16,17,18]
shared_memory, qubits [12, 13, 14, 15, 16, 17, 18], gates CircuitSeq {
  Q12 = u3(Q12, P25, P26, P2)
  [Q0, Q12] = cx(Q0, Q12)
  [Q1, Q12] = cx(Q1, Q12)
  [Q2, Q12] = cx(Q2, Q12)
  [Q3, Q12] = cx(Q3, Q12)
  [Q4, Q12] = cx(Q4, Q12)
  [Q5, Q12] = cx(Q5, Q12)
  [Q6, Q12] = cx(Q6, Q12)
  [Q7, Q12] = cx(Q7, Q12)
  [Q8, Q12] = cx(Q8, Q12)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  Q13 = u3(Q13, P27, P28, P2)
  [Q0, Q13] = cx(Q0, Q13)
  [Q1, Q13] = cx(Q1, Q13)
  [Q2, Q13] = cx(Q2, Q13)
  [Q3, Q13] = cx(Q3, Q13)
  [Q4, Q13] = cx(Q4, Q13)
  [Q5, Q13] = cx(Q5, Q13)
  [Q6, Q13] = cx(Q6, Q13)
  [Q7, Q13] = cx(Q7, Q13)
  [Q8, Q13] = cx(Q8, Q13)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
  Q14 = u3(Q14, P29, P30, P2)
  [Q0, Q14] = cx(Q0, Q14)
  [Q1, Q14] = cx(Q1, Q14)
  [Q2, Q14] = cx(Q2, Q14)
  [Q3, Q14] = cx(Q3, Q14)
  [Q4, Q14] = cx(Q4, Q14)
  [Q5, Q14] = cx(Q5, Q14)
  [Q6, Q14] = cx(Q6, Q14)
  [Q7, Q14] = cx(Q7, Q14)
  [Q8, Q14] = cx(Q8, Q14)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
  Q15 = u3(Q15, P31, P32, P2)
  [Q0, Q15] = cx(Q0, Q15)
  [Q1, Q15] = cx(Q1, Q15)
  [Q2, Q15] = cx(Q2, Q15)
  [Q3, Q15] = cx(Q3, Q15)
  [Q4, Q15] = cx(Q4, Q15)
  [Q5, Q15] = cx(Q5, Q15)
  [Q6, Q15] = cx(Q6, Q15)
  [Q7, Q15] = cx(Q7, Q15)
  [Q8, Q15] = cx(Q8, Q15)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
  Q16 = u3(Q16, P33, P34, P2)
  [Q0, Q16] = cx(Q0, Q16)
  [Q1, Q16] = cx(Q1, Q16)
  [Q2, Q16] = cx(Q2, Q16)
  [Q3, Q16] = cx(Q3, Q16)
  [Q4, Q16] = cx(Q4, Q16)
  [Q5, Q16] = cx(Q5, Q16)
  [Q6, Q16] = cx(Q6, Q16)
  [Q7, Q16] = cx(Q7, Q16)
  [Q8, Q16] = cx(Q8, Q16)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
  Q17 = u3(Q17, P35, P36, P2)
  [Q0, Q17] = cx(Q0, Q17)
  [Q1, Q17] = cx(Q1, Q17)
  [Q2, Q17] = cx(Q2, Q17)
  [Q3, Q17] = cx(Q3, Q17)
  [Q4, Q17] = cx(Q4, Q17)
  [Q5, Q17] = cx(Q5, Q17)
  [Q6, Q17] = cx(Q6, Q17)
  [Q7, Q17] = cx(Q7, Q17)
  [Q8, Q17] = cx(Q8, Q17)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  Q18 = u3(Q18, P37, P38, P2)
  [Q0, Q18] = cx(Q0, Q18)
  [Q1, Q18] = cx(Q1, Q18)
  [Q2, Q18] = cx(Q2, Q18)
  [Q3, Q18] = cx(Q3, Q18)
  [Q4, Q18] = cx(Q4, Q18)
  [Q5, Q18] = cx(Q5, Q18)
  [Q6, Q18] = cx(Q6, Q18)
  [Q7, Q18] = cx(Q7, Q18)
  [Q8, Q18] = cx(Q8, Q18)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
}

SHM Kernel Physical (161): [ 19,20,21,22,23,24,25]
shared_memory, qubits [19, 20, 21, 22, 23, 24, 25], gates CircuitSeq {
  Q19 = u3(Q19, P39, P40, P2)
  [Q0, Q19] = cx(Q0, Q19)
  [Q1, Q19] = cx(Q1, Q19)
  [Q2, Q19] = cx(Q2, Q19)
  [Q3, Q19] = cx(Q3, Q19)
  [Q4, Q19] = cx(Q4, Q19)
  [Q5, Q19] = cx(Q5, Q19)
  [Q6, Q19] = cx(Q6, Q19)
  [Q7, Q19] = cx(Q7, Q19)
  [Q8, Q19] = cx(Q8, Q19)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  Q20 = u3(Q20, P41, P42, P2)
  [Q0, Q20] = cx(Q0, Q20)
  [Q1, Q20] = cx(Q1, Q20)
  [Q2, Q20] = cx(Q2, Q20)
  [Q3, Q20] = cx(Q3, Q20)
  [Q4, Q20] = cx(Q4, Q20)
  [Q5, Q20] = cx(Q5, Q20)
  [Q6, Q20] = cx(Q6, Q20)
  [Q7, Q20] = cx(Q7, Q20)
  [Q8, Q20] = cx(Q8, Q20)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
  Q21 = u3(Q21, P43, P44, P2)
  [Q0, Q21] = cx(Q0, Q21)
  [Q1, Q21] = cx(Q1, Q21)
  [Q2, Q21] = cx(Q2, Q21)
  [Q3, Q21] = cx(Q3, Q21)
  [Q4, Q21] = cx(Q4, Q21)
  [Q5, Q21] = cx(Q5, Q21)
  [Q6, Q21] = cx(Q6, Q21)
  [Q7, Q21] = cx(Q7, Q21)
  [Q8, Q21] = cx(Q8, Q21)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
  Q22 = u3(Q22, P45, P46, P2)
  [Q0, Q22] = cx(Q0, Q22)
  [Q1, Q22] = cx(Q1, Q22)
  [Q2, Q22] = cx(Q2, Q22)
  [Q3, Q22] = cx(Q3, Q22)
  [Q4, Q22] = cx(Q4, Q22)
  [Q5, Q22] = cx(Q5, Q22)
  [Q6, Q22] = cx(Q6, Q22)
  [Q7, Q22] = cx(Q7, Q22)
  [Q8, Q22] = cx(Q8, Q22)
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
  Q23 = u3(Q23, P47, P48, P2)
  [Q0, Q23] = cx(Q0, Q23)
  [Q1, Q23] = cx(Q1, Q23)
  [Q2, Q23] = cx(Q2, Q23)
  [Q3, Q23] = cx(Q3, Q23)
  [Q4, Q23] = cx(Q4, Q23)
  [Q5, Q23] = cx(Q5, Q23)
  [Q6, Q23] = cx(Q6, Q23)
  [Q7, Q23] = cx(Q7, Q23)
  [Q8, Q23] = cx(Q8, Q23)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
  Q24 = u3(Q24, P49, P50, P2)
  [Q0, Q24] = cx(Q0, Q24)
  [Q1, Q24] = cx(Q1, Q24)
  [Q2, Q24] = cx(Q2, Q24)
  [Q3, Q24] = cx(Q3, Q24)
  [Q4, Q24] = cx(Q4, Q24)
  [Q5, Q24] = cx(Q5, Q24)
  [Q6, Q24] = cx(Q6, Q24)
  [Q7, Q24] = cx(Q7, Q24)
  [Q8, Q24] = cx(Q8, Q24)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  Q25 = u3(Q25, P51, P52, P2)
  [Q0, Q25] = cx(Q0, Q25)
  [Q1, Q25] = cx(Q1, Q25)
  [Q2, Q25] = cx(Q2, Q25)
  [Q3, Q25] = cx(Q3, Q25)
  [Q4, Q25] = cx(Q4, Q25)
  [Q5, Q25] = cx(Q5, Q25)
  [Q6, Q25] = cx(Q6, Q25)
  [Q7, Q25] = cx(Q7, Q25)
  [Q8, Q25] = cx(Q8, Q25)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
}

SHM Kernel Physical (109): [ 0,1,2,3,4,5,6,7,26,27]
shared_memory, qubits [0, 1, 2, 3, 4, 5, 6, 7, 26, 27], gates CircuitSeq {
  Q26 = u3(Q26, P53, P54, P2)
  [Q0, Q26] = cx(Q0, Q26)
  [Q1, Q26] = cx(Q1, Q26)
  [Q2, Q26] = cx(Q2, Q26)
  [Q3, Q26] = cx(Q3, Q26)
  [Q4, Q26] = cx(Q4, Q26)
  [Q5, Q26] = cx(Q5, Q26)
  [Q6, Q26] = cx(Q6, Q26)
  [Q7, Q26] = cx(Q7, Q26)
  [Q8, Q26] = cx(Q8, Q26)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
  Q27 = u3(Q27, P55, P56, P2)
  [Q0, Q27] = cx(Q0, Q27)
  [Q1, Q27] = cx(Q1, Q27)
  Q1 = u3(Q1, P59, P60, P2)
  Q0 = u3(Q0, P57, P58, P2)
  [Q0, Q1] = cx(Q0, Q1)
  [Q2, Q27] = cx(Q2, Q27)
  Q2 = u3(Q2, P61, P62, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  [Q3, Q27] = cx(Q3, Q27)
  Q3 = u3(Q3, P63, P64, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  [Q2, Q3] = cx(Q2, Q3)
  [Q4, Q27] = cx(Q4, Q27)
  Q4 = u3(Q4, P65, P66, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
  [Q5, Q27] = cx(Q5, Q27)
  Q5 = u3(Q5, P67, P68, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  [Q6, Q27] = cx(Q6, Q27)
  Q6 = u3(Q6, P69, P70, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
  [Q7, Q27] = cx(Q7, Q27)
  Q7 = u3(Q7, P71, P72, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  [Q8, Q27] = cx(Q8, Q27)
  [Q9, Q27] = cx(Q9, Q27)
  [Q10, Q27] = cx(Q10, Q27)
  [Q11, Q27] = cx(Q11, Q27)
  [Q12, Q27] = cx(Q12, Q27)
  [Q13, Q27] = cx(Q13, Q27)
  [Q14, Q27] = cx(Q14, Q27)
  [Q15, Q27] = cx(Q15, Q27)
  [Q16, Q27] = cx(Q16, Q27)
  [Q17, Q27] = cx(Q17, Q27)
  [Q18, Q27] = cx(Q18, Q27)
  [Q19, Q27] = cx(Q19, Q27)
  [Q20, Q27] = cx(Q20, Q27)
  [Q21, Q27] = cx(Q21, Q27)
  [Q22, Q27] = cx(Q22, Q27)
  [Q23, Q27] = cx(Q23, Q27)
  [Q24, Q27] = cx(Q24, Q27)
  [Q25, Q27] = cx(Q25, Q27)
  [Q26, Q27] = cx(Q26, Q27)
  Q26 = u3(Q26, P107, P108, P2)
  [Q0, Q26] = cx(Q0, Q26)
  Q27 = u3(Q27, P109, P110, P2)
  [Q0, Q27] = cx(Q0, Q27)
  [Q1, Q26] = cx(Q1, Q26)
  [Q1, Q27] = cx(Q1, Q27)
  [Q2, Q26] = cx(Q2, Q26)
  [Q2, Q27] = cx(Q2, Q27)
  [Q3, Q26] = cx(Q3, Q26)
  [Q3, Q27] = cx(Q3, Q27)
  [Q4, Q26] = cx(Q4, Q26)
  [Q4, Q27] = cx(Q4, Q27)
  [Q5, Q26] = cx(Q5, Q26)
  [Q5, Q27] = cx(Q5, Q27)
  [Q6, Q26] = cx(Q6, Q26)
  [Q6, Q27] = cx(Q6, Q27)
  [Q7, Q26] = cx(Q7, Q26)
  [Q7, Q27] = cx(Q7, Q27)
}

SHM Kernel Physical (84): [ 8,9,10,11,12,13,14]
shared_memory, qubits [8, 9, 10, 11, 12, 13, 14], gates CircuitSeq {
  Q8 = u3(Q8, P73, P74, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
  Q9 = u3(Q9, P111, P112, P2)
  [Q0, Q9] = cx(Q0, Q9)
  Q10 = u3(Q10, P75, P76, P2)
  [Q0, Q10] = cx(Q0, Q10)
  Q11 = u3(Q11, P77, P78, P2)
  [Q0, Q11] = cx(Q0, Q11)
  Q12 = u3(Q12, P79, P80, P2)
  [Q0, Q12] = cx(Q0, Q12)
  Q13 = u3(Q13, P81, P82, P2)
  [Q0, Q13] = cx(Q0, Q13)
  Q14 = u3(Q14, P83, P84, P2)
  [Q0, Q14] = cx(Q0, Q14)
  [Q1, Q9] = cx(Q1, Q9)
  [Q1, Q10] = cx(Q1, Q10)
  [Q1, Q11] = cx(Q1, Q11)
  [Q1, Q12] = cx(Q1, Q12)
  [Q1, Q13] = cx(Q1, Q13)
  [Q1, Q14] = cx(Q1, Q14)
  [Q2, Q9] = cx(Q2, Q9)
  [Q2, Q10] = cx(Q2, Q10)
  [Q2, Q11] = cx(Q2, Q11)
  [Q2, Q12] = cx(Q2, Q12)
  [Q2, Q13] = cx(Q2, Q13)
  [Q2, Q14] = cx(Q2, Q14)
  [Q3, Q9] = cx(Q3, Q9)
  [Q3, Q10] = cx(Q3, Q10)
  [Q3, Q11] = cx(Q3, Q11)
  [Q3, Q12] = cx(Q3, Q12)
  [Q3, Q13] = cx(Q3, Q13)
  [Q3, Q14] = cx(Q3, Q14)
  [Q4, Q9] = cx(Q4, Q9)
  [Q4, Q10] = cx(Q4, Q10)
  [Q4, Q11] = cx(Q4, Q11)
  [Q4, Q12] = cx(Q4, Q12)
  [Q4, Q13] = cx(Q4, Q13)
  [Q4, Q14] = cx(Q4, Q14)
  [Q5, Q9] = cx(Q5, Q9)
  [Q5, Q10] = cx(Q5, Q10)
  [Q5, Q11] = cx(Q5, Q11)
  [Q5, Q12] = cx(Q5, Q12)
  [Q5, Q13] = cx(Q5, Q13)
  [Q5, Q14] = cx(Q5, Q14)
  [Q6, Q9] = cx(Q6, Q9)
  [Q6, Q10] = cx(Q6, Q10)
  [Q6, Q11] = cx(Q6, Q11)
  [Q6, Q12] = cx(Q6, Q12)
  [Q6, Q13] = cx(Q6, Q13)
  [Q6, Q14] = cx(Q6, Q14)
  [Q7, Q9] = cx(Q7, Q9)
  [Q7, Q10] = cx(Q7, Q10)
  [Q7, Q11] = cx(Q7, Q11)
  [Q7, Q12] = cx(Q7, Q12)
  [Q7, Q13] = cx(Q7, Q13)
  [Q7, Q14] = cx(Q7, Q14)
  [Q8, Q9] = cx(Q8, Q9)
  [Q8, Q10] = cx(Q8, Q10)
  [Q8, Q11] = cx(Q8, Q11)
  [Q8, Q12] = cx(Q8, Q12)
  [Q8, Q13] = cx(Q8, Q13)
  [Q8, Q14] = cx(Q8, Q14)
  [Q9, Q10] = cx(Q9, Q10)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
}

SHM Kernel Physical (133): [ 15,16,17,18,19,20,21]
shared_memory, qubits [15, 16, 17, 18, 19, 20, 21], gates CircuitSeq {
  Q15 = u3(Q15, P85, P86, P2)
  [Q0, Q15] = cx(Q0, Q15)
  Q16 = u3(Q16, P87, P88, P2)
  [Q0, Q16] = cx(Q0, Q16)
  Q17 = u3(Q17, P89, P90, P2)
  [Q0, Q17] = cx(Q0, Q17)
  Q18 = u3(Q18, P91, P92, P2)
  [Q0, Q18] = cx(Q0, Q18)
  Q19 = u3(Q19, P93, P94, P2)
  [Q0, Q19] = cx(Q0, Q19)
  Q20 = u3(Q20, P95, P96, P2)
  [Q0, Q20] = cx(Q0, Q20)
  Q21 = u3(Q21, P97, P98, P2)
  [Q0, Q21] = cx(Q0, Q21)
  [Q1, Q15] = cx(Q1, Q15)
  [Q1, Q16] = cx(Q1, Q16)
  [Q1, Q17] = cx(Q1, Q17)
  [Q1, Q18] = cx(Q1, Q18)
  [Q1, Q19] = cx(Q1, Q19)
  [Q1, Q20] = cx(Q1, Q20)
  [Q1, Q21] = cx(Q1, Q21)
  [Q2, Q15] = cx(Q2, Q15)
  [Q2, Q16] = cx(Q2, Q16)
  [Q2, Q17] = cx(Q2, Q17)
  [Q2, Q18] = cx(Q2, Q18)
  [Q2, Q19] = cx(Q2, Q19)
  [Q2, Q20] = cx(Q2, Q20)
  [Q2, Q21] = cx(Q2, Q21)
  [Q3, Q15] = cx(Q3, Q15)
  [Q3, Q16] = cx(Q3, Q16)
  [Q3, Q17] = cx(Q3, Q17)
  [Q3, Q18] = cx(Q3, Q18)
  [Q3, Q19] = cx(Q3, Q19)
  [Q3, Q20] = cx(Q3, Q20)
  [Q3, Q21] = cx(Q3, Q21)
  [Q4, Q15] = cx(Q4, Q15)
  [Q4, Q16] = cx(Q4, Q16)
  [Q4, Q17] = cx(Q4, Q17)
  [Q4, Q18] = cx(Q4, Q18)
  [Q4, Q19] = cx(Q4, Q19)
  [Q4, Q20] = cx(Q4, Q20)
  [Q4, Q21] = cx(Q4, Q21)
  [Q5, Q15] = cx(Q5, Q15)
  [Q5, Q16] = cx(Q5, Q16)
  [Q5, Q17] = cx(Q5, Q17)
  [Q5, Q18] = cx(Q5, Q18)
  [Q5, Q19] = cx(Q5, Q19)
  [Q5, Q20] = cx(Q5, Q20)
  [Q5, Q21] = cx(Q5, Q21)
  [Q6, Q15] = cx(Q6, Q15)
  [Q6, Q16] = cx(Q6, Q16)
  [Q6, Q17] = cx(Q6, Q17)
  [Q6, Q18] = cx(Q6, Q18)
  [Q6, Q19] = cx(Q6, Q19)
  [Q6, Q20] = cx(Q6, Q20)
  [Q6, Q21] = cx(Q6, Q21)
  [Q7, Q15] = cx(Q7, Q15)
  [Q7, Q16] = cx(Q7, Q16)
  [Q7, Q17] = cx(Q7, Q17)
  [Q7, Q18] = cx(Q7, Q18)
  [Q7, Q19] = cx(Q7, Q19)
  [Q7, Q20] = cx(Q7, Q20)
  [Q7, Q21] = cx(Q7, Q21)
  [Q8, Q15] = cx(Q8, Q15)
  [Q8, Q16] = cx(Q8, Q16)
  [Q8, Q17] = cx(Q8, Q17)
  [Q8, Q18] = cx(Q8, Q18)
  [Q8, Q19] = cx(Q8, Q19)
  [Q8, Q20] = cx(Q8, Q20)
  [Q8, Q21] = cx(Q8, Q21)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
}

SHM Kernel Physical (135): [ 22,23,24,25,26,27]
shared_memory, qubits [22, 23, 24, 25, 26, 27], gates CircuitSeq {
  Q22 = u3(Q22, P99, P100, P2)
  [Q0, Q22] = cx(Q0, Q22)
  Q23 = u3(Q23, P101, P102, P2)
  [Q0, Q23] = cx(Q0, Q23)
  Q24 = u3(Q24, P103, P104, P2)
  [Q0, Q24] = cx(Q0, Q24)
  Q25 = u3(Q25, P105, P106, P2)
  [Q0, Q25] = cx(Q0, Q25)
  [Q1, Q22] = cx(Q1, Q22)
  [Q1, Q23] = cx(Q1, Q23)
  [Q1, Q24] = cx(Q1, Q24)
  [Q1, Q25] = cx(Q1, Q25)
  [Q2, Q22] = cx(Q2, Q22)
  [Q2, Q23] = cx(Q2, Q23)
  [Q2, Q24] = cx(Q2, Q24)
  [Q2, Q25] = cx(Q2, Q25)
  [Q3, Q22] = cx(Q3, Q22)
  [Q3, Q23] = cx(Q3, Q23)
  [Q3, Q24] = cx(Q3, Q24)
  [Q3, Q25] = cx(Q3, Q25)
  [Q4, Q22] = cx(Q4, Q22)
  [Q4, Q23] = cx(Q4, Q23)
  [Q4, Q24] = cx(Q4, Q24)
  [Q4, Q25] = cx(Q4, Q25)
  [Q5, Q22] = cx(Q5, Q22)
  [Q5, Q23] = cx(Q5, Q23)
  [Q5, Q24] = cx(Q5, Q24)
  [Q5, Q25] = cx(Q5, Q25)
  [Q6, Q22] = cx(Q6, Q22)
  [Q6, Q23] = cx(Q6, Q23)
  [Q6, Q24] = cx(Q6, Q24)
  [Q6, Q25] = cx(Q6, Q25)
  [Q7, Q22] = cx(Q7, Q22)
  [Q7, Q23] = cx(Q7, Q23)
  [Q7, Q24] = cx(Q7, Q24)
  [Q7, Q25] = cx(Q7, Q25)
  [Q8, Q22] = cx(Q8, Q22)
  [Q8, Q23] = cx(Q8, Q23)
  [Q8, Q24] = cx(Q8, Q24)
  [Q8, Q25] = cx(Q8, Q25)
  [Q8, Q26] = cx(Q8, Q26)
  [Q8, Q27] = cx(Q8, Q27)
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
  [Q9, Q27] = cx(Q9, Q27)
  [Q10, Q27] = cx(Q10, Q27)
  [Q11, Q27] = cx(Q11, Q27)
  [Q12, Q27] = cx(Q12, Q27)
  [Q13, Q27] = cx(Q13, Q27)
  [Q14, Q27] = cx(Q14, Q27)
  [Q15, Q27] = cx(Q15, Q27)
  [Q16, Q27] = cx(Q16, Q27)
  [Q17, Q27] = cx(Q17, Q27)
  [Q18, Q27] = cx(Q18, Q27)
  [Q19, Q27] = cx(Q19, Q27)
  [Q20, Q27] = cx(Q20, Q27)
  [Q21, Q27] = cx(Q21, Q27)
  [Q22, Q27] = cx(Q22, Q27)
  [Q23, Q27] = cx(Q23, Q27)
  [Q24, Q27] = cx(Q24, Q27)
  [Q25, Q27] = cx(Q25, Q27)
  [Q26, Q27] = cx(Q26, Q27)
}

Start fusing gates...
Reset qubit group map
(0, 0) (1, 1) (2, 2) (3, 3) (4, 4) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (15 gates): qubits [0, 1, 2, 3, 4], gates fusion, qubits [0, 1, 2, 3, 4], gates CircuitSeq {
  Q1 = u3(Q1, P115, P116, P2)
  Q0 = u3(Q0, P113, P114, P2)
  [Q0, Q1] = cx(Q0, Q1)
  Q2 = u3(Q2, P117, P118, P2)
  [Q0, Q2] = cx(Q0, Q2)
  [Q1, Q2] = cx(Q1, Q2)
  Q3 = u3(Q3, P119, P120, P2)
  [Q0, Q3] = cx(Q0, Q3)
  [Q1, Q3] = cx(Q1, Q3)
  [Q2, Q3] = cx(Q2, Q3)
  Q4 = u3(Q4, P121, P122, P2)
  [Q0, Q4] = cx(Q0, Q4)
  [Q1, Q4] = cx(Q1, Q4)
  [Q2, Q4] = cx(Q2, Q4)
  [Q3, Q4] = cx(Q3, Q4)
}

Gate 0: [1, ]
Fusing gate 23(0) for rank 0
t 1
Matrix Multiplication (5, 1), mask 2
Gate 1: [0, ]
Fusing gate 23(0) for rank 0
t 0
Matrix Multiplication (5, 1), mask 1
Gate 2: [0, 1, ]
Fusing gate 6(1) for rank 0
c,t 0,1
Matrix Multiplication (5, 2), mask 3
Gate 3: [2, ]
Fusing gate 23(0) for rank 0
t 2
Matrix Multiplication (5, 1), mask 4
Gate 4: [0, 2, ]
Fusing gate 6(1) for rank 0
c,t 0,2
Matrix Multiplication (5, 2), mask 5
Gate 5: [1, 2, ]
Fusing gate 6(1) for rank 0
c,t 1,2
Matrix Multiplication (5, 2), mask 6
Gate 6: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 8
Gate 7: [0, 3, ]
Fusing gate 6(1) for rank 0
c,t 0,3
Matrix Multiplication (5, 2), mask 9
Gate 8: [1, 3, ]
Fusing gate 6(1) for rank 0
c,t 1,3
Matrix Multiplication (5, 2), mask 10
Gate 9: [2, 3, ]
Fusing gate 6(1) for rank 0
c,t 2,3
Matrix Multiplication (5, 2), mask 12
Gate 10: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 16
Gate 11: [0, 4, ]
Fusing gate 6(1) for rank 0
c,t 0,4
Matrix Multiplication (5, 2), mask 17
Gate 12: [1, 4, ]
Fusing gate 6(1) for rank 0
c,t 1,4
Matrix Multiplication (5, 2), mask 18
Gate 13: [2, 4, ]
Fusing gate 6(1) for rank 0
c,t 2,4
Matrix Multiplication (5, 2), mask 20
Gate 14: [3, 4, ]
Fusing gate 6(1) for rank 0
c,t 3,4
Matrix Multiplication (5, 2), mask 24
SHM Kernel Physical (48): [ 5,6,7,19,20,21]
shared_memory, qubits [5, 6, 7, 19, 20, 21], gates CircuitSeq {
  Q5 = u3(Q5, P123, P124, P2)
  [Q0, Q5] = cx(Q0, Q5)
  [Q1, Q5] = cx(Q1, Q5)
  [Q2, Q5] = cx(Q2, Q5)
  [Q3, Q5] = cx(Q3, Q5)
  [Q4, Q5] = cx(Q4, Q5)
  Q6 = u3(Q6, P125, P126, P2)
  [Q0, Q6] = cx(Q0, Q6)
  [Q1, Q6] = cx(Q1, Q6)
  [Q2, Q6] = cx(Q2, Q6)
  [Q3, Q6] = cx(Q3, Q6)
  [Q4, Q6] = cx(Q4, Q6)
  [Q5, Q6] = cx(Q5, Q6)
  Q7 = u3(Q7, P127, P128, P2)
  [Q0, Q7] = cx(Q0, Q7)
  [Q1, Q7] = cx(Q1, Q7)
  [Q2, Q7] = cx(Q2, Q7)
  [Q3, Q7] = cx(Q3, Q7)
  [Q4, Q7] = cx(Q4, Q7)
  [Q5, Q7] = cx(Q5, Q7)
  [Q6, Q7] = cx(Q6, Q7)
  Q19 = u3(Q19, P149, P150, P2)
  [Q0, Q19] = cx(Q0, Q19)
  Q20 = u3(Q20, P151, P152, P2)
  [Q0, Q20] = cx(Q0, Q20)
  Q21 = u3(Q21, P153, P154, P2)
  [Q0, Q21] = cx(Q0, Q21)
  [Q1, Q19] = cx(Q1, Q19)
  [Q1, Q20] = cx(Q1, Q20)
  [Q1, Q21] = cx(Q1, Q21)
  [Q2, Q19] = cx(Q2, Q19)
  [Q2, Q20] = cx(Q2, Q20)
  [Q2, Q21] = cx(Q2, Q21)
  [Q3, Q19] = cx(Q3, Q19)
  [Q3, Q20] = cx(Q3, Q20)
  [Q3, Q21] = cx(Q3, Q21)
  [Q4, Q19] = cx(Q4, Q19)
  [Q4, Q20] = cx(Q4, Q20)
  [Q4, Q21] = cx(Q4, Q21)
  [Q5, Q19] = cx(Q5, Q19)
  [Q5, Q20] = cx(Q5, Q20)
  [Q5, Q21] = cx(Q5, Q21)
  [Q6, Q19] = cx(Q6, Q19)
  [Q6, Q20] = cx(Q6, Q20)
  [Q6, Q21] = cx(Q6, Q21)
  [Q7, Q19] = cx(Q7, Q19)
  [Q7, Q20] = cx(Q7, Q20)
  [Q7, Q21] = cx(Q7, Q21)
}

SHM Kernel Physical (36): [ 15,16,17,18,19,20,21]
shared_memory, qubits [15, 16, 17, 18, 19, 20, 21], gates CircuitSeq {
  Q15 = u3(Q15, P141, P142, P2)
  [Q0, Q15] = cx(Q0, Q15)
  Q16 = u3(Q16, P143, P144, P2)
  [Q0, Q16] = cx(Q0, Q16)
  Q17 = u3(Q17, P145, P146, P2)
  [Q0, Q17] = cx(Q0, Q17)
  Q18 = u3(Q18, P147, P148, P2)
  [Q0, Q18] = cx(Q0, Q18)
  [Q1, Q15] = cx(Q1, Q15)
  [Q1, Q16] = cx(Q1, Q16)
  [Q1, Q17] = cx(Q1, Q17)
  [Q1, Q18] = cx(Q1, Q18)
  [Q2, Q15] = cx(Q2, Q15)
  [Q2, Q16] = cx(Q2, Q16)
  [Q2, Q17] = cx(Q2, Q17)
  [Q2, Q18] = cx(Q2, Q18)
  [Q3, Q15] = cx(Q3, Q15)
  [Q3, Q16] = cx(Q3, Q16)
  [Q3, Q17] = cx(Q3, Q17)
  [Q3, Q18] = cx(Q3, Q18)
  [Q4, Q15] = cx(Q4, Q15)
  [Q4, Q16] = cx(Q4, Q16)
  [Q4, Q17] = cx(Q4, Q17)
  [Q4, Q18] = cx(Q4, Q18)
  [Q5, Q15] = cx(Q5, Q15)
  [Q5, Q16] = cx(Q5, Q16)
  [Q5, Q17] = cx(Q5, Q17)
  [Q5, Q18] = cx(Q5, Q18)
  [Q6, Q15] = cx(Q6, Q15)
  [Q6, Q16] = cx(Q6, Q16)
  [Q6, Q17] = cx(Q6, Q17)
  [Q6, Q18] = cx(Q6, Q18)
  [Q7, Q15] = cx(Q7, Q15)
  [Q7, Q16] = cx(Q7, Q16)
  [Q7, Q17] = cx(Q7, Q17)
  [Q7, Q18] = cx(Q7, Q18)
}

SHM Kernel Physical (59): [ 8,22,23,24,25,26,27]
shared_memory, qubits [8, 22, 23, 24, 25, 26, 27], gates CircuitSeq {
  Q8 = u3(Q8, P129, P130, P2)
  [Q0, Q8] = cx(Q0, Q8)
  [Q1, Q8] = cx(Q1, Q8)
  [Q2, Q8] = cx(Q2, Q8)
  [Q3, Q8] = cx(Q3, Q8)
  [Q4, Q8] = cx(Q4, Q8)
  [Q5, Q8] = cx(Q5, Q8)
  [Q6, Q8] = cx(Q6, Q8)
  [Q7, Q8] = cx(Q7, Q8)
  Q22 = u3(Q22, P155, P156, P2)
  [Q0, Q22] = cx(Q0, Q22)
  Q23 = u3(Q23, P157, P158, P2)
  [Q0, Q23] = cx(Q0, Q23)
  Q24 = u3(Q24, P159, P160, P2)
  [Q0, Q24] = cx(Q0, Q24)
  Q25 = u3(Q25, P161, P162, P2)
  [Q0, Q25] = cx(Q0, Q25)
  Q26 = u3(Q26, P163, P164, P2)
  [Q0, Q26] = cx(Q0, Q26)
  [Q1, Q22] = cx(Q1, Q22)
  [Q1, Q23] = cx(Q1, Q23)
  [Q1, Q24] = cx(Q1, Q24)
  [Q1, Q25] = cx(Q1, Q25)
  [Q1, Q26] = cx(Q1, Q26)
  [Q2, Q22] = cx(Q2, Q22)
  [Q2, Q23] = cx(Q2, Q23)
  [Q2, Q24] = cx(Q2, Q24)
  [Q2, Q25] = cx(Q2, Q25)
  [Q2, Q26] = cx(Q2, Q26)
  [Q3, Q22] = cx(Q3, Q22)
  [Q3, Q23] = cx(Q3, Q23)
  [Q3, Q24] = cx(Q3, Q24)
  [Q3, Q25] = cx(Q3, Q25)
  [Q3, Q26] = cx(Q3, Q26)
  [Q4, Q22] = cx(Q4, Q22)
  [Q4, Q23] = cx(Q4, Q23)
  [Q4, Q24] = cx(Q4, Q24)
  [Q4, Q25] = cx(Q4, Q25)
  [Q4, Q26] = cx(Q4, Q26)
  [Q5, Q22] = cx(Q5, Q22)
  [Q5, Q23] = cx(Q5, Q23)
  [Q5, Q24] = cx(Q5, Q24)
  [Q5, Q25] = cx(Q5, Q25)
  [Q5, Q26] = cx(Q5, Q26)
  [Q6, Q22] = cx(Q6, Q22)
  [Q6, Q23] = cx(Q6, Q23)
  [Q6, Q24] = cx(Q6, Q24)
  [Q6, Q25] = cx(Q6, Q25)
  [Q6, Q26] = cx(Q6, Q26)
  [Q7, Q22] = cx(Q7, Q22)
  [Q7, Q23] = cx(Q7, Q23)
  [Q7, Q24] = cx(Q7, Q24)
  [Q7, Q25] = cx(Q7, Q25)
  [Q7, Q26] = cx(Q7, Q26)
  [Q8, Q22] = cx(Q8, Q22)
  [Q8, Q23] = cx(Q8, Q23)
  [Q8, Q24] = cx(Q8, Q24)
  [Q8, Q25] = cx(Q8, Q25)
  [Q8, Q26] = cx(Q8, Q26)
}

SHM Kernel Physical (82): [ 9,10,11,12,13,14,15]
shared_memory, qubits [9, 10, 11, 12, 13, 14, 15], gates CircuitSeq {
  Q9 = u3(Q9, P167, P168, P2)
  [Q0, Q9] = cx(Q0, Q9)
  Q10 = u3(Q10, P131, P132, P2)
  [Q0, Q10] = cx(Q0, Q10)
  Q11 = u3(Q11, P133, P134, P2)
  [Q0, Q11] = cx(Q0, Q11)
  Q12 = u3(Q12, P135, P136, P2)
  [Q0, Q12] = cx(Q0, Q12)
  Q13 = u3(Q13, P137, P138, P2)
  [Q0, Q13] = cx(Q0, Q13)
  Q14 = u3(Q14, P139, P140, P2)
  [Q0, Q14] = cx(Q0, Q14)
  [Q1, Q9] = cx(Q1, Q9)
  [Q1, Q10] = cx(Q1, Q10)
  [Q1, Q11] = cx(Q1, Q11)
  [Q1, Q12] = cx(Q1, Q12)
  [Q1, Q13] = cx(Q1, Q13)
  [Q1, Q14] = cx(Q1, Q14)
  [Q2, Q9] = cx(Q2, Q9)
  [Q2, Q10] = cx(Q2, Q10)
  [Q2, Q11] = cx(Q2, Q11)
  [Q2, Q12] = cx(Q2, Q12)
  [Q2, Q13] = cx(Q2, Q13)
  [Q2, Q14] = cx(Q2, Q14)
  [Q3, Q9] = cx(Q3, Q9)
  [Q3, Q10] = cx(Q3, Q10)
  [Q3, Q11] = cx(Q3, Q11)
  [Q3, Q12] = cx(Q3, Q12)
  [Q3, Q13] = cx(Q3, Q13)
  [Q3, Q14] = cx(Q3, Q14)
  [Q4, Q9] = cx(Q4, Q9)
  [Q4, Q10] = cx(Q4, Q10)
  [Q4, Q11] = cx(Q4, Q11)
  [Q4, Q12] = cx(Q4, Q12)
  [Q4, Q13] = cx(Q4, Q13)
  [Q4, Q14] = cx(Q4, Q14)
  [Q5, Q9] = cx(Q5, Q9)
  [Q5, Q10] = cx(Q5, Q10)
  [Q5, Q11] = cx(Q5, Q11)
  [Q5, Q12] = cx(Q5, Q12)
  [Q5, Q13] = cx(Q5, Q13)
  [Q5, Q14] = cx(Q5, Q14)
  [Q6, Q9] = cx(Q6, Q9)
  [Q6, Q10] = cx(Q6, Q10)
  [Q6, Q11] = cx(Q6, Q11)
  [Q6, Q12] = cx(Q6, Q12)
  [Q6, Q13] = cx(Q6, Q13)
  [Q6, Q14] = cx(Q6, Q14)
  [Q7, Q9] = cx(Q7, Q9)
  [Q7, Q10] = cx(Q7, Q10)
  [Q7, Q11] = cx(Q7, Q11)
  [Q7, Q12] = cx(Q7, Q12)
  [Q7, Q13] = cx(Q7, Q13)
  [Q7, Q14] = cx(Q7, Q14)
  [Q8, Q9] = cx(Q8, Q9)
  [Q8, Q10] = cx(Q8, Q10)
  [Q8, Q11] = cx(Q8, Q11)
  [Q8, Q12] = cx(Q8, Q12)
  [Q8, Q13] = cx(Q8, Q13)
  [Q8, Q14] = cx(Q8, Q14)
  [Q8, Q15] = cx(Q8, Q15)
  [Q9, Q10] = cx(Q9, Q10)
  [Q9, Q11] = cx(Q9, Q11)
  [Q10, Q11] = cx(Q10, Q11)
  [Q9, Q12] = cx(Q9, Q12)
  [Q10, Q12] = cx(Q10, Q12)
  [Q11, Q12] = cx(Q11, Q12)
  [Q9, Q13] = cx(Q9, Q13)
  [Q10, Q13] = cx(Q10, Q13)
  [Q11, Q13] = cx(Q11, Q13)
  [Q12, Q13] = cx(Q12, Q13)
  [Q9, Q14] = cx(Q9, Q14)
  [Q10, Q14] = cx(Q10, Q14)
  [Q11, Q14] = cx(Q11, Q14)
  [Q12, Q14] = cx(Q12, Q14)
  [Q13, Q14] = cx(Q13, Q14)
  [Q9, Q15] = cx(Q9, Q15)
  [Q10, Q15] = cx(Q10, Q15)
  [Q11, Q15] = cx(Q11, Q15)
  [Q12, Q15] = cx(Q12, Q15)
  [Q13, Q15] = cx(Q13, Q15)
  [Q14, Q15] = cx(Q14, Q15)
}

SHM Kernel Physical (70): [ 0,1,2,16,17,18,19,20,21,27]
shared_memory, qubits [0, 1, 2, 16, 17, 18, 19, 20, 21, 27], gates CircuitSeq {
  Q27 = u3(Q27, P165, P166, P2)
  [Q0, Q27] = cx(Q0, Q27)
  Q0 = u3(Q0, P169, P170, P2)
  [Q1, Q27] = cx(Q1, Q27)
  Q1 = u3(Q1, P171, P172, P2)
  [Q2, Q27] = cx(Q2, Q27)
  Q2 = u3(Q2, P173, P174, P2)
  [Q8, Q16] = cx(Q8, Q16)
  [Q8, Q17] = cx(Q8, Q17)
  [Q8, Q18] = cx(Q8, Q18)
  [Q8, Q19] = cx(Q8, Q19)
  [Q8, Q20] = cx(Q8, Q20)
  [Q8, Q21] = cx(Q8, Q21)
  [Q9, Q16] = cx(Q9, Q16)
  [Q10, Q16] = cx(Q10, Q16)
  [Q11, Q16] = cx(Q11, Q16)
  [Q12, Q16] = cx(Q12, Q16)
  [Q13, Q16] = cx(Q13, Q16)
  [Q14, Q16] = cx(Q14, Q16)
  [Q15, Q16] = cx(Q15, Q16)
  [Q9, Q17] = cx(Q9, Q17)
  [Q10, Q17] = cx(Q10, Q17)
  [Q11, Q17] = cx(Q11, Q17)
  [Q12, Q17] = cx(Q12, Q17)
  [Q13, Q17] = cx(Q13, Q17)
  [Q14, Q17] = cx(Q14, Q17)
  [Q15, Q17] = cx(Q15, Q17)
  [Q16, Q17] = cx(Q16, Q17)
  [Q9, Q18] = cx(Q9, Q18)
  [Q10, Q18] = cx(Q10, Q18)
  [Q11, Q18] = cx(Q11, Q18)
  [Q12, Q18] = cx(Q12, Q18)
  [Q13, Q18] = cx(Q13, Q18)
  [Q14, Q18] = cx(Q14, Q18)
  [Q15, Q18] = cx(Q15, Q18)
  [Q16, Q18] = cx(Q16, Q18)
  [Q17, Q18] = cx(Q17, Q18)
  [Q9, Q19] = cx(Q9, Q19)
  [Q10, Q19] = cx(Q10, Q19)
  [Q11, Q19] = cx(Q11, Q19)
  [Q12, Q19] = cx(Q12, Q19)
  [Q13, Q19] = cx(Q13, Q19)
  [Q14, Q19] = cx(Q14, Q19)
  [Q15, Q19] = cx(Q15, Q19)
  [Q16, Q19] = cx(Q16, Q19)
  [Q17, Q19] = cx(Q17, Q19)
  [Q18, Q19] = cx(Q18, Q19)
  [Q9, Q20] = cx(Q9, Q20)
  [Q10, Q20] = cx(Q10, Q20)
  [Q11, Q20] = cx(Q11, Q20)
  [Q12, Q20] = cx(Q12, Q20)
  [Q13, Q20] = cx(Q13, Q20)
  [Q14, Q20] = cx(Q14, Q20)
  [Q15, Q20] = cx(Q15, Q20)
  [Q16, Q20] = cx(Q16, Q20)
  [Q17, Q20] = cx(Q17, Q20)
  [Q18, Q20] = cx(Q18, Q20)
  [Q19, Q20] = cx(Q19, Q20)
  [Q9, Q21] = cx(Q9, Q21)
  [Q10, Q21] = cx(Q10, Q21)
  [Q11, Q21] = cx(Q11, Q21)
  [Q12, Q21] = cx(Q12, Q21)
  [Q13, Q21] = cx(Q13, Q21)
  [Q14, Q21] = cx(Q14, Q21)
  [Q15, Q21] = cx(Q15, Q21)
  [Q16, Q21] = cx(Q16, Q21)
  [Q17, Q21] = cx(Q17, Q21)
  [Q18, Q21] = cx(Q18, Q21)
  [Q19, Q21] = cx(Q19, Q21)
  [Q20, Q21] = cx(Q20, Q21)
}

Start fusing gates...
Reset qubit group map
(3, 3) (4, 4) (5, 5) (6, 6) (27, 27) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (8 gates): qubits [3, 4, 5, 6, 27], gates fusion, qubits [3, 4, 5, 6, 27], gates CircuitSeq {
  [Q3, Q27] = cx(Q3, Q27)
  Q3 = u3(Q3, P175, P176, P2)
  [Q4, Q27] = cx(Q4, Q27)
  Q4 = u3(Q4, P177, P178, P2)
  [Q5, Q27] = cx(Q5, Q27)
  Q5 = u3(Q5, P179, P180, P2)
  [Q6, Q27] = cx(Q6, Q27)
  Q6 = u3(Q6, P181, P182, P2)
}

Gate 0: [3, 27, ]
Fusing gate 6(1) for rank 0
c,t 3,27
Matrix Multiplication (5, 2), mask 17
Gate 1: [3, ]
Fusing gate 23(0) for rank 0
t 3
Matrix Multiplication (5, 1), mask 1
Gate 2: [4, 27, ]
Fusing gate 6(1) for rank 0
c,t 4,27
Matrix Multiplication (5, 2), mask 18
Gate 3: [4, ]
Fusing gate 23(0) for rank 0
t 4
Matrix Multiplication (5, 1), mask 2
Gate 4: [5, 27, ]
Fusing gate 6(1) for rank 0
c,t 5,27
Matrix Multiplication (5, 2), mask 20
Gate 5: [5, ]
Fusing gate 23(0) for rank 0
t 5
Matrix Multiplication (5, 1), mask 4
Gate 6: [6, 27, ]
Fusing gate 6(1) for rank 0
c,t 6,27
Matrix Multiplication (5, 2), mask 24
Gate 7: [6, ]
Fusing gate 23(0) for rank 0
t 6
Matrix Multiplication (5, 1), mask 8
SHM Kernel Physical (13): [ 16,17,18,19,20,21,22]
shared_memory, qubits [16, 17, 18, 19, 20, 21, 22], gates CircuitSeq {
  [Q9, Q22] = cx(Q9, Q22)
  [Q10, Q22] = cx(Q10, Q22)
  [Q11, Q22] = cx(Q11, Q22)
  [Q12, Q22] = cx(Q12, Q22)
  [Q13, Q22] = cx(Q13, Q22)
  [Q14, Q22] = cx(Q14, Q22)
  [Q15, Q22] = cx(Q15, Q22)
  [Q16, Q22] = cx(Q16, Q22)
  [Q17, Q22] = cx(Q17, Q22)
  [Q18, Q22] = cx(Q18, Q22)
  [Q19, Q22] = cx(Q19, Q22)
  [Q20, Q22] = cx(Q20, Q22)
  [Q21, Q22] = cx(Q21, Q22)
}

SHM Kernel Physical (66): [ 7,8,23,24,25,26,27]
shared_memory, qubits [7, 8, 23, 24, 25, 26, 27], gates CircuitSeq {
  [Q7, Q27] = cx(Q7, Q27)
  Q7 = u3(Q7, P183, P184, P2)
  [Q8, Q27] = cx(Q8, Q27)
  Q8 = u3(Q8, P185, P186, P2)
  [Q9, Q23] = cx(Q9, Q23)
  [Q10, Q23] = cx(Q10, Q23)
  [Q11, Q23] = cx(Q11, Q23)
  [Q12, Q23] = cx(Q12, Q23)
  [Q13, Q23] = cx(Q13, Q23)
  [Q14, Q23] = cx(Q14, Q23)
  [Q15, Q23] = cx(Q15, Q23)
  [Q16, Q23] = cx(Q16, Q23)
  [Q17, Q23] = cx(Q17, Q23)
  [Q18, Q23] = cx(Q18, Q23)
  [Q19, Q23] = cx(Q19, Q23)
  [Q20, Q23] = cx(Q20, Q23)
  [Q21, Q23] = cx(Q21, Q23)
  [Q22, Q23] = cx(Q22, Q23)
  [Q9, Q24] = cx(Q9, Q24)
  [Q10, Q24] = cx(Q10, Q24)
  [Q11, Q24] = cx(Q11, Q24)
  [Q12, Q24] = cx(Q12, Q24)
  [Q13, Q24] = cx(Q13, Q24)
  [Q14, Q24] = cx(Q14, Q24)
  [Q15, Q24] = cx(Q15, Q24)
  [Q16, Q24] = cx(Q16, Q24)
  [Q17, Q24] = cx(Q17, Q24)
  [Q18, Q24] = cx(Q18, Q24)
  [Q19, Q24] = cx(Q19, Q24)
  [Q20, Q24] = cx(Q20, Q24)
  [Q21, Q24] = cx(Q21, Q24)
  [Q22, Q24] = cx(Q22, Q24)
  [Q23, Q24] = cx(Q23, Q24)
  [Q9, Q25] = cx(Q9, Q25)
  [Q10, Q25] = cx(Q10, Q25)
  [Q11, Q25] = cx(Q11, Q25)
  [Q12, Q25] = cx(Q12, Q25)
  [Q13, Q25] = cx(Q13, Q25)
  [Q14, Q25] = cx(Q14, Q25)
  [Q15, Q25] = cx(Q15, Q25)
  [Q16, Q25] = cx(Q16, Q25)
  [Q17, Q25] = cx(Q17, Q25)
  [Q18, Q25] = cx(Q18, Q25)
  [Q19, Q25] = cx(Q19, Q25)
  [Q20, Q25] = cx(Q20, Q25)
  [Q21, Q25] = cx(Q21, Q25)
  [Q22, Q25] = cx(Q22, Q25)
  [Q23, Q25] = cx(Q23, Q25)
  [Q24, Q25] = cx(Q24, Q25)
  [Q9, Q26] = cx(Q9, Q26)
  [Q10, Q26] = cx(Q10, Q26)
  [Q11, Q26] = cx(Q11, Q26)
  [Q12, Q26] = cx(Q12, Q26)
  [Q13, Q26] = cx(Q13, Q26)
  [Q14, Q26] = cx(Q14, Q26)
  [Q15, Q26] = cx(Q15, Q26)
  [Q16, Q26] = cx(Q16, Q26)
  [Q17, Q26] = cx(Q17, Q26)
  [Q18, Q26] = cx(Q18, Q26)
  [Q19, Q26] = cx(Q19, Q26)
  [Q20, Q26] = cx(Q20, Q26)
  [Q21, Q26] = cx(Q21, Q26)
  [Q22, Q26] = cx(Q22, Q26)
  [Q23, Q26] = cx(Q23, Q26)
  [Q24, Q26] = cx(Q24, Q26)
  [Q25, Q26] = cx(Q25, Q26)
}

Start fusing gates...
Reset qubit group map
(9, 9) (10, 10) (11, 11) (12, 12) (27, 27) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (8 gates): qubits [9, 10, 11, 12, 27], gates fusion, qubits [9, 10, 11, 12, 27], gates CircuitSeq {
  [Q9, Q27] = cx(Q9, Q27)
  Q9 = u3(Q9, P223, P224, P2)
  [Q10, Q27] = cx(Q10, Q27)
  Q10 = u3(Q10, P187, P188, P2)
  [Q11, Q27] = cx(Q11, Q27)
  Q11 = u3(Q11, P189, P190, P2)
  [Q12, Q27] = cx(Q12, Q27)
  Q12 = u3(Q12, P191, P192, P2)
}

Gate 0: [9, 27, ]
Fusing gate 6(1) for rank 0
c,t 9,27
Matrix Multiplication (5, 2), mask 17
Gate 1: [9, ]
Fusing gate 23(0) for rank 0
t 9
Matrix Multiplication (5, 1), mask 1
Gate 2: [10, 27, ]
Fusing gate 6(1) for rank 0
c,t 10,27
Matrix Multiplication (5, 2), mask 18
Gate 3: [10, ]
Fusing gate 23(0) for rank 0
t 10
Matrix Multiplication (5, 1), mask 2
Gate 4: [11, 27, ]
Fusing gate 6(1) for rank 0
c,t 11,27
Matrix Multiplication (5, 2), mask 20
Gate 5: [11, ]
Fusing gate 23(0) for rank 0
t 11
Matrix Multiplication (5, 1), mask 4
Gate 6: [12, 27, ]
Fusing gate 6(1) for rank 0
c,t 12,27
Matrix Multiplication (5, 2), mask 24
Gate 7: [12, ]
Fusing gate 23(0) for rank 0
t 12
Matrix Multiplication (5, 1), mask 8
SHM Kernel Physical (12): [ 13,14,15,16,17,18,27]
shared_memory, qubits [13, 14, 15, 16, 17, 18, 27], gates CircuitSeq {
  [Q13, Q27] = cx(Q13, Q27)
  Q13 = u3(Q13, P193, P194, P2)
  [Q14, Q27] = cx(Q14, Q27)
  Q14 = u3(Q14, P195, P196, P2)
  [Q15, Q27] = cx(Q15, Q27)
  Q15 = u3(Q15, P197, P198, P2)
  [Q16, Q27] = cx(Q16, Q27)
  Q16 = u3(Q16, P199, P200, P2)
  [Q17, Q27] = cx(Q17, Q27)
  Q17 = u3(Q17, P201, P202, P2)
  [Q18, Q27] = cx(Q18, Q27)
  Q18 = u3(Q18, P203, P204, P2)
}

Start fusing gates...
Reset qubit group map
(19, 19) (20, 20) (21, 21) (22, 22) (27, 27) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (8 gates): qubits [19, 20, 21, 22, 27], gates fusion, qubits [19, 20, 21, 22, 27], gates CircuitSeq {
  [Q19, Q27] = cx(Q19, Q27)
  Q19 = u3(Q19, P205, P206, P2)
  [Q20, Q27] = cx(Q20, Q27)
  Q20 = u3(Q20, P207, P208, P2)
  [Q21, Q27] = cx(Q21, Q27)
  Q21 = u3(Q21, P209, P210, P2)
  [Q22, Q27] = cx(Q22, Q27)
  Q22 = u3(Q22, P211, P212, P2)
}

Gate 0: [19, 27, ]
Fusing gate 6(1) for rank 0
c,t 19,27
Matrix Multiplication (5, 2), mask 17
Gate 1: [19, ]
Fusing gate 23(0) for rank 0
t 19
Matrix Multiplication (5, 1), mask 1
Gate 2: [20, 27, ]
Fusing gate 6(1) for rank 0
c,t 20,27
Matrix Multiplication (5, 2), mask 18
Gate 3: [20, ]
Fusing gate 23(0) for rank 0
t 20
Matrix Multiplication (5, 1), mask 2
Gate 4: [21, 27, ]
Fusing gate 6(1) for rank 0
c,t 21,27
Matrix Multiplication (5, 2), mask 20
Gate 5: [21, ]
Fusing gate 23(0) for rank 0
t 21
Matrix Multiplication (5, 1), mask 4
Gate 6: [22, 27, ]
Fusing gate 6(1) for rank 0
c,t 22,27
Matrix Multiplication (5, 2), mask 24
Gate 7: [22, ]
Fusing gate 23(0) for rank 0
t 22
Matrix Multiplication (5, 1), mask 8
Start fusing gates...
Reset qubit group map
(23, 23) (24, 24) (25, 25) (26, 26) (27, 27) current Layout: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,]
Fusing Kernel (9 gates): qubits [23, 24, 25, 26, 27], gates fusion, qubits [23, 24, 25, 26, 27], gates CircuitSeq {
  [Q23, Q27] = cx(Q23, Q27)
  Q23 = u3(Q23, P213, P214, P2)
  [Q24, Q27] = cx(Q24, Q27)
  Q24 = u3(Q24, P215, P216, P2)
  [Q25, Q27] = cx(Q25, Q27)
  Q25 = u3(Q25, P217, P218, P2)
  [Q26, Q27] = cx(Q26, Q27)
  Q26 = u3(Q26, P219, P220, P2)
  Q27 = u3(Q27, P221, P222, P2)
}

Gate 0: [23, 27, ]
Fusing gate 6(1) for rank 0
c,t 23,27
Matrix Multiplication (5, 2), mask 17
Gate 1: [23, ]
Fusing gate 23(0) for rank 0
t 23
Matrix Multiplication (5, 1), mask 1
Gate 2: [24, 27, ]
Fusing gate 6(1) for rank 0
c,t 24,27
Matrix Multiplication (5, 2), mask 18
Gate 3: [24, ]
Fusing gate 23(0) for rank 0
t 24
Matrix Multiplication (5, 1), mask 2
Gate 4: [25, 27, ]
Fusing gate 6(1) for rank 0
c,t 25,27
Matrix Multiplication (5, 2), mask 20
Gate 5: [25, ]
Fusing gate 23(0) for rank 0
t 25
Matrix Multiplication (5, 1), mask 4
Gate 6: [26, 27, ]
Fusing gate 6(1) for rank 0
c,t 26,27
Matrix Multiplication (5, 2), mask 24
Gate 7: [26, ]
Fusing gate 23(0) for rank 0
t 26
Matrix Multiplication (5, 1), mask 8
Gate 8: [27, ]
Fusing gate 23(0) for rank 0
t 27
Matrix Multiplication (5, 1), mask 16
Compilation Done! 
Num Shuffles: 0
Num FUSION Kernel: 6
Num SHM Kernel: 15
Start Simulating...
[warmup] size total:4294967296
NCCL comm nRanks: 1, i am 0
I am 0, mask 0, I am sending to 0
hello checking all2all
Init State Vectors!
Finish Simulating! Total: 6 FUSE Kernel, 15 SHM Kernel, 0 Shuffles.
[NCCL Rank 0] Total Simulation Time: 429.13ms
[MPI Rank 0]: Destroyed everthing!
Time Cost: 446219 us
Destroyed the simulator
